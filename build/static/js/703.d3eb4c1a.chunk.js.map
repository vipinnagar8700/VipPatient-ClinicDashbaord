{"version":3,"file":"static/js/703.d3eb4c1a.chunk.js","mappings":"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","sources":["UI/Legend/LegendItem/index.jsx","UI/Legend/index.jsx","UI/Legend/style.js","components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Labels/index.jsx","components/Chart/Tooltip/index.jsx","constants/options.js","hooks/usePeriodNav.js","widgets/TaskScheduler/style.js","db/scheduler.js","widgets/TaskScheduler/index.jsx","widgets/BloodTest/index.jsx","pages/DashboardD.jsx","widgets/EventsCompactCalendar/style.js","db/gender.js","widgets/PatientsGenderLineChart/index.jsx","widgets/RadarAreaChart/index.jsx"],"sourcesContent":["// styled components\nimport {ListItem} from '../style';\nimport {LegendBadge} from '@ui/Badge/style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst LegendItem = ({color, legend}) => {\n    return (\n        <ListItem>\n            <LegendBadge color={color} /> {legend}\n        </ListItem>\n    )\n}\n\nLegendItem.propTypes = {\n    color: PropTypes.string.isRequired,\n    legend: PropTypes.string.isRequired\n}\n\nexport default LegendItem;","// styled components\nimport {List} from './style';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Legend = ({children, overlay}) => {\n    return <List overlay={overlay}>{children}</List>\n}\n\nLegend.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    overlay: PropTypes.bool,\n}\n\nexport default Legend;","import styled from 'styled-components/macro';\nimport {textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px 16px;\n  ${props => props.overlay && `\n    position: absolute;\n    bottom: 22px;\n    left: 24px\n  `}\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-transform: uppercase;\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`","// styling\nimport {colors} from '@styles/vars';\nimport {StyledTooltip} from '@components/Chart/Tooltip';\n\n// components\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useLayoutEffect, useState} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport {generateGridPoints} from '@utils/recharts';\n\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\n    const {width} = useWindowSize();\n    const {theme} = useTheme();\n    const [points, setPoints] = useState([]);\n    const isTablet = width >= 768;\n\n    // generate grid points based on the container width\n    useLayoutEffect(() => {\n        setPoints(generateGridPoints(id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width]);\n\n    // custom tooltip\n    const renderTooltip = (props) => {\n        const {active, payload} = props;\n        if (active && payload && payload.length) {\n            return (\n                <StyledTooltip className=\"multiple\">\n                    {payload.map((item, index) => (\n                        <div className=\"item\" key={index}>\n                            <div className=\"color\" style={{background: item.stroke}} />\n                            <div className=\"value\">{item.value}</div>\n                        </div>\n                    ))}\n                </StyledTooltip>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\n            {\n                variant === 'line' ?\n                    <LineChart margin={false} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Line key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </LineChart>\n                    :\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            {props.children}\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Area key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </AreaChart>\n            }\n        </ResponsiveContainer>\n    )\n}\n\nexport default CartesianChart;","// cartesian grid points generator\nexport const generateGridPoints = (id, gutter = 20) => {\n    const gridWidth = document.getElementById(id).offsetWidth;\n\n    let points = [];\n    for (let i = 0; i < gridWidth; i += gutter) {\n        points.push(i);\n    }\n    return points;\n}","import styled from 'styled-components/macro';\nimport {flex, fonts, textSizes} from '@styles/vars';\n\nconst Labels = styled.div`\n  text-transform: uppercase;\n  margin: 0 24px;\n  display: flex;\n  ${flex.between}\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`\n\nexport default Labels","// styling\nimport styled from 'styled-components/macro';\nimport {light, textSizes, fonts, flex} from '@styles/vars';\n\nexport const StyledTooltip = styled.div`\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  color: #fff;\n  box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n  border-radius: 8px;\n  background-color: ${light.text};\n  height: 20px;\n  padding: 0 8px;\n  display: flex;\n  ${flex.center}\n  line-height: 1;\n  position: relative;\n  text-transform: uppercase;\n  \n  &.multiple {\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    height: auto;\n    \n    .item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      \n      .color {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n      }\n    }\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -3px;\n    transform: translateX(-50%) rotate(-45deg);\n    width: 8px;\n    height: 8px;\n    background-color: ${light.text};\n    display: ${props => props.arrow ? 'block' : 'none'};\n  }\n`;\n\nconst ChartTooltip = ({active, payload, tooltip, arrow = false, multi = false, ...props}) => {\n    if (multi) {\n        if (!active || !tooltip) return null\n        for (const item of payload)\n            if (item.dataKey === tooltip)\n                return <StyledTooltip arrow={arrow}>{item.value}</StyledTooltip>\n        return null\n    } else {\n        if (!active || !payload[0]) return null\n        return (\n            <StyledTooltip arrow={arrow}> {payload[0].value} {props.right && payload[0].dataKey}</StyledTooltip>\n        )\n    }\n}\n\nexport default ChartTooltip;\n","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, textSizes, colors, breakpoints, flex, fonts} from '@styles/vars';\nimport {EventsCalendar} from '@widgets/EventsCompactCalendar/style';\n\nexport const MonthSelector = styled.div`\n  position: relative;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n  height: 80px;\n  margin: 0 -22px 20px;\n  border-radius: 8px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n\n  .list-item {\n    width: fit-content !important;\n  }\n\n  .navigation {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n\n    &:before, &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      background: ${theme('theme', {\n        light: 'linear-gradient(90deg, #F1F5F8 0%, rgba(241, 245, 248, 0.0001) 100%)',\n        dark: 'linear-gradient(90deg, #090A0A 0%, rgba(9, 10, 10, 0.0001) 100%)'\n      })};\n      height: 100%;\n      width: 100px;\n      filter: blur(1px);\n      display: block;\n    }\n\n    &:before {\n      left: 2px;\n    }\n\n    &:after {\n      right: 2px;\n      transform: scaleX(-1);\n    }\n\n    button {\n      font-size: ${textSizes['12']};\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n      background-color: ${colors.blue};\n      color: #fff;\n      z-index: 2000;\n      ${flex.col};\n      ${flex.center};\n      opacity: .7;\n      transition: opacity var(--transition);\n\n      &[data-direction=\"prev\"] {\n        left: 16px;\n      }\n\n      &[data-direction=\"next\"] {\n        right: 16px;\n      }\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  .list {\n    display: flex;\n    align-items: center;\n    pointer-events: none;\n    gap: 12px;\n    padding: 0 16px;\n    overflow-x: auto;\n\n    &-item {\n      padding: 10px;\n      border-radius: 8px;\n      transition: background-color var(--transition), color var(--transition);\n\n      &.active {\n        color: ${colors.blue};\n        background-color: ${theme('theme', {\n          light: light.widgetBg,\n          dark: dark.widgetBg\n        })};\n      }\n    }\n  }\n`;\n\nexport const CalendarWrapper = styled.div`\n  height: 100%;\n  position: relative;\n\n  .popup {\n    position: absolute;\n    top: calc(50% + ${props => props.top}px + 80px);\n    left: 50%;\n    transform: translate(-50%, calc(-50% - 80px - ${props => props.top / 2}px));\n    z-index: 10;\n    padding: 20px;\n    border-radius: 8px;\n    background-color: ${theme('theme', {\n      light: light.bodyBg,\n      dark: dark.bodyBg\n    })};\n    width: 240px;\n    ${flex.col};\n    gap: 16px;\n    border: 2px solid ${theme('theme', {\n      light: colors.light_gray,\n      dark: colors.dark\n    })};\n    transition: opacity var(--transition), visibility var(--transition);\n    opacity: 0;\n    visibility: hidden;\n\n    &.visible {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    &_close {\n      position: absolute;\n      right: 16px;\n      top: 16px;\n      font-size: ${textSizes['14']};\n      color: ${colors.error};\n    }\n\n    .task {\n      ${flex.col};\n      gap: 10px;\n      font-size: ${textSizes['14']};\n\n      &_label {\n        font-size: ${textSizes['12']};\n        font-family: ${fonts.accent};\n        color: ${colors.gray};\n        display: block;\n        margin-bottom: 8px;\n      }\n\n      &_header {\n        display: flex;\n        gap: 10px;\n        align-items: center;\n      }\n    }\n\n    ${breakpoints.mobileL} {\n      width: 280px;\n    }\n  }\n`;\n\nexport const StyledCalendar = styled(EventsCalendar)`\n  max-width: 326px;\n  margin: 0 auto;\n\n  .react-calendar {\n    &__month-view {\n      &__weekdays {\n        order: unset;\n      }\n\n      & > div > div {\n        padding: 0 0 20px;\n      }\n\n      &:last-of-type {\n        .react-calendar__month-view__weekdays {\n          display: none !important;\n        }\n\n        .react-calendar__month-view__days {\n          margin-top: -37px;\n\n          ${breakpoints.mobileL} {\n            margin-top: -60px;\n          }\n        }\n      }\n    }\n  }\n`;","import moment from 'moment';\n\nexport const scheduler = [\n    {\n        id: 'marvin_park',\n        tasks: [\n            {\n                title: 'Vivamus in felis eu sapien',\n                date: moment(),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'days'),\n                type: 'other'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(2, 'days'),\n                type: 'family'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(3, 'days'),\n                type: 'travel'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'months'),\n                type: 'other'\n            }\n        ]\n    },\n    {\n        id: 'norman_munoz',\n        tasks: [\n            {\n                title: 'Vivamus felislectus',\n                date: moment(),\n                type: 'travel'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'weeks'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'tillie_mathis',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(5, 'days'),\n                type: 'other'\n            }\n        ]\n    },\n    {\n        id: 'cornelia_phillips',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'days'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'days').add(2, 'hours'),\n                type: 'family'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(10, 'days').add(4, 'hours'),\n                type: 'travel'\n            }\n        ]\n    },\n    {\n        id: 'isaiah_goodman',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'months'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'months').add(2, 'days'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'claudia_turner',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'days'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(16, 'days').add(2, 'hours'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'emily_rivera',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(18, 'days'),\n                type: 'other'\n            }\n        ]\n    }\n];","// styled components\nimport {MonthSelector, CalendarWrapper, StyledCalendar} from '@widgets/TaskScheduler/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport CustomSelect from '@ui/Select';\nimport Calendar from 'react-calendar';\nimport {Swiper, SwiperSlide} from 'swiper/react';\nimport {Badge} from '@ui/Badge/style';\nimport Backdrop from '@mui/material/Backdrop';\n\n// utils\nimport {getMonthArray} from '@utils/dates';\nimport moment from 'moment';\nimport {nanoid} from 'nanoid';\n\n// hooks\nimport {useState, useEffect, useRef} from 'react';\n\n// data placeholder\nimport {scheduler} from '@db/scheduler';\n\n// constants\nimport {tasksColors} from '@constants/colors';\nimport {doctorsOptions} from '@constants/options';\n\nconst TaskScheduler = () => {\n    const options = doctorsOptions();\n    const monthArray = getMonthArray();\n    const currentMonth = new Date().getMonth() + 1;\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n    const [selectedRange, setSelectedRange] = useState({start: 1, end: 2});\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [open, setOpen] = useState(false);\n    const [swiper, setSwiper] = useState(null);\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        currentMonth === 12 ?\n            setSelectedRange({start: currentMonth - 1, end: currentMonth})\n            :\n            setSelectedRange({start: currentMonth, end: currentMonth + 1});\n\n        setHeight(headerRef.current.offsetHeight + footerRef.current.offsetHeight);\n    }, [currentMonth, headerRef, footerRef]);\n\n    const handleNavigation = e => {\n        const realIndex = swiper.realIndex;\n        if (e.currentTarget.dataset.direction === 'prev') {\n            swiper.slidePrev();\n            setSelectedRange({\n                start: realIndex === 0 ? 11 : realIndex,\n                end: realIndex === 0 ? 12 : realIndex + 1,\n            })\n        } else {\n            swiper.slideNext();\n            setSelectedRange({\n                start: realIndex === 11 ? 1 : realIndex + 1,\n                end: realIndex === 11 ? 2 : realIndex + 2,\n            })\n        }\n    }\n\n    const calendarStart = moment().month(selectedRange.start - 1).startOf('month').toDate(),\n        calendarEnd = moment().month(selectedRange.end - 1).endOf('month').toDate();\n\n    const docTasks = scheduler.filter(task => task.id === selectedDoctor.value)[0].tasks;\n\n    const hasTasks = date => docTasks.filter(event => moment(event.date).isSame(date, 'day')).length > 0;\n\n    const drawTasks = date => {\n        const tasks = docTasks.filter(event => moment(event.date).isSame(date, 'day'));\n        return tasks.map(task => {\n            const {title, type, date} = task;\n            const color = tasksColors.find(color => color.cat === type).color;\n            return (\n                <div key={nanoid()} className=\"task\">\n                    <div>\n                        <span className=\"task_label\">Task:</span>\n                        <div className=\"task_header\">\n                            <Badge color={color}/>\n                            {title}\n                        </div>\n                    </div>\n                    <div>\n                        <span className=\"task_label\">Date:</span>\n                        <div>{moment(date).format('MM.DD.YY, HH:mm A')}</div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    return (\n        <Widget name=\"TaskScheduler\">\n            <WidgetHeader title=\"Doctor task scheduler\" flex={'column'} elRef={headerRef}>\n                <CustomSelect options={options}\n                              value={selectedDoctor}\n                              variant=\"user\"\n                              changeHandler={e => setSelectedDoctor(e)}/>\n            </WidgetHeader>\n            <WidgetBody style={{display: 'flex', flexDirection: 'column'}}>\n                <MonthSelector>\n                    <div className=\"list\">\n                        <Swiper slidesPerView=\"auto\"\n                                spaceBetween={12}\n                                loop={true}\n                                centeredSlides={true}\n                                onSwiper={(swiper) => setSwiper(swiper)}\n                                initialSlide={currentMonth - 1}\n                        >\n                            {monthArray.map(({month}) => {\n                                const monthNumber = moment(month).format('M');\n                                const monthName = moment(month).format('MMMM');\n                                const isSelected = +monthNumber === selectedRange.start || +monthNumber === selectedRange.end;\n\n                                return (\n                                    <SwiperSlide key={monthName}\n                                                 className={isSelected ? 'list-item active' : 'list-item'}>\n                                        {monthName}\n                                    </SwiperSlide>\n                                );\n                            })}\n                        </Swiper>\n                    </div>\n                    <div className=\"navigation\">\n                        <button data-direction=\"prev\" onClick={handleNavigation} aria-label=\"Previous\">\n                            <i className=\"icon icon-chevron-left\"/>\n                        </button>\n                        <button data-direction=\"next\" onClick={handleNavigation} aria-label=\"Next\">\n                            <i className=\"icon icon-chevron-right\"/>\n                        </button>\n                    </div>\n                </MonthSelector>\n                <CalendarWrapper top={height}>\n                    <StyledCalendar as={Calendar}\n                                    locale=\"en-US\"\n                                    value={[calendarStart, calendarEnd]}\n                                    activeStartDate={calendarStart}\n                                    minDate={calendarStart}\n                                    maxDate={calendarEnd}\n                                    showDoubleView={true}\n                                    showNavigation={false}\n                                    showFixedNumberOfWeeks={false}\n                                    tileClassName={({date}) => hasTasks(date) ? 'active' : ''}\n                                    tileContent={<span className=\"bar\"/>}\n                                    onClickDay={date => {\n                                        setSelectedDate(date);\n                                        setOpen(true);\n                                    }}\n                    />\n                    <Backdrop open={open} onClick={() => setOpen(false)} sx={{\n                        backgroundColor: 'transparent',\n                        zIndex: 1000\n                    }}>\n                        <div className={`popup ${open ? 'visible' : ''}`}>\n                            <button className=\"popup_close\" onClick={() => setOpen(false)}>\n                                <i className=\"icon icon-close\"/>\n                            </button>\n                            {selectedDate && hasTasks(selectedDate) && drawTasks(selectedDate)}\n                        </div>\n                    </Backdrop>\n                </CalendarWrapper>\n                <div ref={footerRef}>\n                    <Legend>\n                        {tasksColors.map(({color, cat}) => <LegendItem key={cat} color={color} legend={cat}/>)}\n                    </Legend>\n                </div>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default TaskScheduler;","// styling\nimport {light, dark, textSizes, fonts, colors, flex} from '@styles/vars';\nimport styled from 'styled-components/macro';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ReactSpeedometer from 'react-d3-speedometer';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n  ${flex.center};\n\n  .speedometer {\n    width: 100%;\n\n    text {\n      font-weight: 400 !important;\n      font-family: ${fonts.accent};\n\n      &.current-value {\n        display: none;\n      }\n    }\n  }\n`;\n\nconst BloodTest = () => {\n    const {theme} = useTheme();\n    const {width} = useWindowSize();\n\n    const sizes = () => {\n        switch (true) {\n            case width < 414:\n                return { width: 232, height: 120 };\n            case width >= 414 && width < 1800:\n                return { width: 300, height: 160 };\n            default:\n                case width >= 1800:\n                return { width: 400, height: 220 };\n        }\n    }\n\n    return (\n        <Widget name=\"BloodTest\">\n            <WidgetHeader title=\"Blood test speed\"/>\n            <WidgetBody style={{flexGrow: 1}}>\n                <Wrapper>\n                    <ReactSpeedometer\n                        value={251}\n                        maxValue={1000}\n                        needleColor={light.text}\n                        needleTransitionDuration={2000}\n                        needleHeightRatio={0.8}\n                        segments={80}\n                        startColor={colors.green}\n                        endColor={colors.red}\n                        ringWidth={60}\n                        textColor={theme === 'light' ? light.text : dark.text}\n                        labelFontSize={textSizes['10']}\n                        maxSegmentLabels={10}\n                        valueFormat={'~s'}\n                        forceRender={true}\n                        width={sizes().width}\n                        height={sizes().height}\n                    />\n                </Wrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default BloodTest;","// components\nimport Page from '@layout/Page';\nimport TaskScheduler from '@widgets/TaskScheduler';\nimport PatientsGenderLineChart from '@widgets/PatientsGenderLineChart';\nimport RadarAreaChart from '@widgets/RadarAreaChart';\nimport BloodTest from '@widgets/BloodTest';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\n\nconst DashboardD = () => {\n    return (\n        <>\n        <Sidebar/>\n        <Panel/>\n         <Page title=\"Dashboard\">\n            <div key=\"scheduler\">\n                <TaskScheduler/>\n            </div>\n            <div key=\"gender\">\n                <PatientsGenderLineChart/>\n            </div>\n            <div key=\"radar\">\n                <RadarAreaChart/>\n            </div>\n            <div key=\"blood\">\n                <BloodTest/>\n            </div>\n        </Page>\n        </>\n       \n    )\n}\n\nexport default DashboardD;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from '@styles/vars';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100%;\n  ${flex.col};\n  align-items: center;\n`;\n\nexport const Popup = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg,\n  })};\n  padding: 20px;\n  border-radius: 8px;\n  ${flex.col};\n  gap: 16px;\n  margin: auto;\n  width: calc(100% - 40px);\n  max-width: 320px;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 40px);\n`;\n\nexport const EventsCalendar = styled.div`\n  ${flex.col};\n  gap: 8px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin: 2px;\n  flex-grow: 1;\n\n  .react-calendar {\n    flex-grow: 1;\n    height: 100%;\n\n    &__navigation {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n      border-radius: 8px;\n      min-height: 40px;\n      padding: 10px 22px;\n      display: flex;\n      ${flex.between};\n      font-size: ${textSizes['14']};\n      margin: 0 2px;\n\n      &__label {\n        pointer-events: none;\n      }\n    }\n\n    &__viewContainer {\n      ${flex.col};\n      flex-grow: 1;\n    }\n\n    &__tile {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n\n      .bar {\n        opacity: 0;\n        transition: opacity var(--transition);\n      }\n    }\n\n    &__year-view__months {\n      gap: 20px 0;\n      margin-top: 20px;\n    }\n\n    &__month-view {\n      height: 100%;\n\n      & > div {\n        height: 100%;\n        align-items: stretch;\n      }\n\n      & > div > div {\n        ${flex.col};\n        gap: 8px;\n        justify-content: space-between;\n        height: 100%;\n        padding: 0 24px 20px;\n      }\n\n      &__weekdays {\n        text-transform: uppercase;\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        text-align: center;\n        order: 1;\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        justify-items: center;\n\n        abbr {\n          text-decoration: none;\n        }\n\n        ${breakpoints.mobileL} {\n          gap: 8px;\n\n          &__weekday {\n            width: 40px;\n          }\n        }\n      }\n\n      &__days {\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        grid-gap: 20px 0;\n        justify-items: center;\n\n        &__day {\n          &.active {\n            color: ${colors.blue};\n            cursor: pointer;\n          }\n\n          &:not(&.active) {\n            pointer-events: none;\n          }\n\n          &--neighboringMonth {\n            opacity: .5;\n          }\n        }\n\n        ${breakpoints.mobileL} {\n          grid-gap: 8px;\n\n          &__day {\n            width: 40px;\n            height: 40px;\n            border-radius: 4px;\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            position: relative;\n\n            &.active {\n              color: inherit;\n\n              .bar {\n                opacity: 1;\n                display: block;\n                position: absolute;\n                left: 50%;\n                bottom: 8px;\n                border-radius: 2px;\n                width: 16px;\n                height: 2px;\n                background-color: ${colors.blue};\n                transform: translateX(-50%);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export const y2019 = [\n    {\n        name: 'January',\n        men: 220,\n        women: 350\n    },\n    {\n        name: 'February',\n        men: 185,\n        women: 214\n    },\n    {\n        name: 'March',\n        men: 294,\n        women: 305\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 214\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 288,\n        women: 265\n    },\n    {\n        name: 'July',\n        men: 355,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 218,\n        women: 301\n    },\n    {\n        name: 'September',\n        men: 180,\n        women: 250\n    },\n    {\n        name: 'October',\n        men: 274,\n        women: 145\n    },\n    {\n        name: 'November',\n        men: 387,\n        women: 218\n    },\n    {\n        name: 'December',\n        men: 281,\n        women: 311\n    },\n];\n\nexport const y2020 = [\n    {\n        name: 'January',\n        men: 311,\n        women: 205\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 288\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 511,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 300,\n        women: 220\n    },\n];\n\nexport const y2021 = [\n    {\n        name: 'January',\n        men: 566,\n        women: 309\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 500,\n        women: 600\n    },\n];\n\nexport const y2022 = [\n    {\n        name: 'January',\n        men: 303,\n        women: 260\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 400,\n        women: 350\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 202,\n        women: 140\n    },\n    {\n        name: 'December',\n        men: 70,\n        women: 140\n    },\n];","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport CartesianChart from '@components/CartesianChart';\nimport LegendList from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components'\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport moment from 'moment';\nimport {getMonthArray} from '@utils/dates';\n\n// data placeholder\nimport {y2019, y2020, y2021, y2022} from '@db/gender';\nimport {rgba} from 'polished';\n\nconst PatientsGenderLineChart = () => {\n    const isMobile = useWindowSize().width < 768;\n    const {theme} = useTheme();\n    const periods = ['2019', '2020', '2021', '2022'];\n    const {index, navigate} = useArrayNav(periods);\n\n    // common line props\n    const common = {\n        type:\"monotone\",\n        strokeWidth: 3,\n        dot: false\n    }\n\n    const chartElems = [\n        {\n            ...common,\n            dataKey: \"men\",\n            stroke: colors.azure,\n            activeDot: {r: 4, fill: colors.azure, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.azure, .5)})`\n            }\n        },\n        {\n            ...common,\n            dataKey: \"women\",\n            stroke: colors.peach,\n            activeDot: {r: 4, fill: colors.peach, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.peach, .5)})`\n            }\n        }\n    ];\n\n    const currentData = () => {\n        switch (periods[index]) {\n            case '2019':\n                return y2019\n            case '2020':\n                return y2020\n            case '2021':\n                return y2021\n            default:\n            case '2022':\n                return y2022\n        }\n    }\n\n    const data = currentData();\n\n    return (\n        <Widget name=\"PatientsGenderLineChart\" mobile={400}>\n            <WidgetHeader title=\"Patients gender\" flex=\"column\">\n                <Navigator handler={navigate} text={periods[index]} style={{margin: '0 -22px 0'}} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <Labels>\n                    {\n                        getMonthArray().map(({month}) => (\n                            <div key={moment(month).format('MMM')}>\n                                {isMobile ? moment(month).month() + 1 : moment(month).format('MMM')}\n                            </div>\n                        ))\n                    }\n                </Labels>\n                <CartesianChart variant=\"line\" id=\"patientsGender\" data={data} elems={chartElems} />\n                <LegendList overlay={true}>\n                    <LegendItem color=\"azure\" legend=\"men\" />\n                    <LegendItem color=\"peach\" legend=\"women\" />\n                </LegendList>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsGenderLineChart;","// styling\nimport styled from 'styled-components/macro';\nimport {colors, fonts, textSizes, light, dark, flex, breakpoints} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport Navigator from '@ui/Navigator';\nimport {ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, Radar, Text, Tooltip} from 'recharts';\nimport ChartTooltip from '@components/Chart/Tooltip';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst Container = styled.div`\n  ${flex.col};\n  gap: 14px;\n  justify-content: flex-end;\n  height: 100%;\n\n  .chart {\n    height: 250px;\n    flex-grow: 1;\n    padding: 24px 24px 0;\n  }\n\n  .navigator {\n    margin: 0 2px 2px;\n  }\n  \n  ${breakpoints.mobileL} {\n    .chart {\n      height: 300px;\n    }\n  }\n`;\n\nconst RadarAreaChart = () => {\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n    const {theme} = useTheme();\n    const {width} = useWindowSize();\n\n    const data = [\n        {\n            type: 'diagnostics',\n            value: [40, 54, 65]\n        },\n        {\n            type: 'checkup',\n            value: [70, 22, 46]\n        },\n        {\n            type: 'tests',\n            value: [18, 41, 60]\n        },\n        {\n            type: 'consultation',\n            value: [70, 25, 67]\n        },\n        {\n            type: 'injury',\n            value: [30, 70, 50]\n        },\n        {\n            type: 'viruses',\n            value: [40, 19, 80]\n        }\n    ]\n\n    function renderPolarAngleAxis({payload, x, y, cx, cy, ...rest}) {\n        return (\n            <Text\n                {...rest}\n                verticalAnchor=\"middle\"\n                textAnchor=\"middle\"\n                y={y + (y - cy) / 9}\n                x={x + (x - cx) / 9}\n                fill={theme === 'light' ? light.text : dark.text}\n            >\n                {payload.value}\n            </Text>\n        );\n    }\n\n    return (\n        <Widget name=\"RadarAreaChart\">\n            <Container>\n                <div className=\"chart\">\n                    <ResponsiveContainer height=\"100%\" width=\"100%\">\n                        <RadarChart data={data} outerRadius={width < 414 ? 80: 110} height={250}>\n                            <PolarGrid stroke={theme === 'light' ? colors.light_gray : colors.dark}/>\n                            <PolarAngleAxis dataKey=\"type\"\n                                            tick={props => renderPolarAngleAxis(props)}\n                                            style={{\n                                                textTransform: 'uppercase',\n                                                fontFamily: fonts.accent,\n                                                fontSize: textSizes['10'],\n                                            }}\n                                            cx=\"50%\"\n                                            cy=\"50%\"\n                            />\n                            <Radar dataKey={`value[${index}]`}\n                                   strokeWidth={4}\n                                   stroke={colors.azure}\n                                   fill={colors.azure}\n                                   fillOpacity={0.1}\n                                   activeDot={{r: 4, fill: colors.azure, stroke: colors.azure}}\n                            />\n                            <Tooltip content={<ChartTooltip />} cursor={false}/>\n                        </RadarChart>\n                    </ResponsiveContainer>\n                </div>\n                <Navigator handler={navigate} text={periods[index]} style={{textTransform: 'capitalize'}}/>\n            </Container>\n        </Widget>\n    )\n}\n\nexport default RadarAreaChart;"],"names":["_ref","color","legend","_jsxs","ListItem","children","_jsx","LegendBadge","overlay","List","styled","ul","withConfig","componentId","props","li","fonts","accent","textSizes","variant","id","data","elems","_objectWithoutProperties","_excluded","width","useWindowSize","theme","useTheme","_useState","useState","_useState2","_slicedToArray","points","setPoints","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","i","push","generateGridPoints","renderTooltip","active","payload","StyledTooltip","className","map","item","index","style","background","stroke","value","ResponsiveContainer","height","LineChart","_objectSpread","margin","x1","y1","x2","y2","gradientUnits","stopColor","colors","dark","stopOpacity","offset","light_gray","CartesianGrid","concat","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","top","Area","Labels","div","flex","between","light","text","center","arrow","tooltip","_ref$arrow","_ref$multi","multi","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","right","tasksOptions","label","depsOptions","testsOptions","doctorsOptions","options","doctors","forEach","doctor","Avatar","avatar","alt","name","size","periods","period","setPeriod","setPeriodIndex","MonthSelector","bodyBg","blue","col","widgetBg","CalendarWrapper","error","gray","breakpoints","mobileL","StyledCalendar","EventsCalendar","scheduler","tasks","title","date","moment","type","add","monthArray","getMonthArray","currentMonth","Date","getMonth","selectedDoctor","setSelectedDoctor","_useState3","start","end","_useState4","selectedRange","setSelectedRange","_useState5","_useState6","selectedDate","setSelectedDate","_useState7","_useState8","open","setOpen","_useState9","_useState10","swiper","setSwiper","headerRef","useRef","footerRef","_useState11","_useState12","setHeight","useEffect","current","offsetHeight","handleNavigation","realIndex","currentTarget","dataset","direction","slidePrev","slideNext","calendarStart","month","startOf","toDate","calendarEnd","endOf","docTasks","filter","task","hasTasks","event","isSame","Widget","WidgetHeader","elRef","CustomSelect","changeHandler","WidgetBody","display","flexDirection","Swiper","slidesPerView","spaceBetween","loop","centeredSlides","onSwiper","initialSlide","monthNumber","format","monthName","isSelected","SwiperSlide","onClick","as","Calendar","locale","activeStartDate","minDate","maxDate","showDoubleView","showNavigation","showFixedNumberOfWeeks","tileClassName","_ref2","tileContent","onClickDay","Backdrop","sx","backgroundColor","zIndex","tasksColors","find","cat","Badge","nanoid","ref","Legend","_ref3","LegendItem","Wrapper","sizes","flexGrow","ReactSpeedometer","maxValue","needleColor","needleTransitionDuration","needleHeightRatio","segments","startColor","green","endColor","red","ringWidth","textColor","labelFontSize","maxSegmentLabels","valueFormat","forceRender","_Fragment","Sidebar","Panel","Page","TaskScheduler","PatientsGenderLineChart","RadarAreaChart","BloodTest","Container","Popup","highlight","y2019","men","women","y2020","y2021","y2022","isMobile","_useArrayNav","useArrayNav","navigate","common","strokeWidth","dot","chartElems","azure","activeDot","r","fill","rgba","peach","currentData","mobile","Navigator","handler","padding","overflow","CartesianChart","LegendList","usePeriodNav","RadarChart","outerRadius","PolarGrid","PolarAngleAxis","tick","x","y","cx","cy","rest","Text","verticalAnchor","textAnchor","renderPolarAngleAxis","textTransform","fontFamily","fontSize","Radar","fillOpacity","ChartTooltip"],"sourceRoot":""}