{"version":3,"file":"static/js/0.915b8e2a.chunk.js","mappings":"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","sources":["UI/IconLink/index.jsx","components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Labels/index.jsx","components/Chart/Tooltip/index.jsx","components/TestItem/style.js","components/TestItem/index.jsx","components/Widget/WidgetNav/index.jsx","db/patient_tests.js","hooks/usePeriodNav.js","widgets/Statistics/style.js","widgets/Statistics/index.jsx","widgets/RecentTests/index.jsx","pages/ClinicActivity.jsx","pages/UpcommingAppointment.jsx","pages/DashboardK.jsx","components/ModalWindow/CloseBtn/index.jsx","widgets/EventsCompactCalendar/index.jsx","widgets/EventsCompactCalendar/style.js","widgets/HealthIndexChart/style.js","db/health.js","widgets/HealthIndexChart/index.jsx","widgets/PatientCalendar/index.jsx","db/gender.js","widgets/PatientsGenderLineChart/index.jsx","components/PaymentItem/style.js","components/PaymentItem/index.jsx","db/payments_history.js","widgets/PaymentsHistory/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, textSizes} from '@styles/vars';\nimport {darken} from 'polished';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Link = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  font-size: ${textSizes['14']};\n  color: ${colors.blue};\n  line-height: 1;\n  transition: color var(--transition);\n  width: fit-content;\n  \n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &:hover, &:focus {\n    color: ${darken(0.1, colors.blue)};\n  }\n\n  .icon {\n    font-size: ${textSizes['12']};\n    color: ${colors.gray};\n  }\n`\n\nconst IconLink = ({href = '#', title}) => {\n    return (\n        <Link href={href}>\n            <i className=\"icon icon-link\"></i>\n            <span>{title}</span>\n        </Link>\n    )\n}\n\nIconLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    href: PropTypes.string\n}\n\nexport default IconLink;","// styling\nimport {colors} from '@styles/vars';\nimport {StyledTooltip} from '@components/Chart/Tooltip';\n\n// components\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useLayoutEffect, useState} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport {generateGridPoints} from '@utils/recharts';\n\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\n    const {width} = useWindowSize();\n    const {theme} = useTheme();\n    const [points, setPoints] = useState([]);\n    const isTablet = width >= 768;\n\n    // generate grid points based on the container width\n    useLayoutEffect(() => {\n        setPoints(generateGridPoints(id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width]);\n\n    // custom tooltip\n    const renderTooltip = (props) => {\n        const {active, payload} = props;\n        if (active && payload && payload.length) {\n            return (\n                <StyledTooltip className=\"multiple\">\n                    {payload.map((item, index) => (\n                        <div className=\"item\" key={index}>\n                            <div className=\"color\" style={{background: item.stroke}} />\n                            <div className=\"value\">{item.value}</div>\n                        </div>\n                    ))}\n                </StyledTooltip>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\n            {\n                variant === 'line' ?\n                    <LineChart margin={false} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Line key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </LineChart>\n                    :\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            {props.children}\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Area key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </AreaChart>\n            }\n        </ResponsiveContainer>\n    )\n}\n\nexport default CartesianChart;","// cartesian grid points generator\nexport const generateGridPoints = (id, gutter = 20) => {\n    const gridWidth = document.getElementById(id).offsetWidth;\n\n    let points = [];\n    for (let i = 0; i < gridWidth; i += gutter) {\n        points.push(i);\n    }\n    return points;\n}","import styled from 'styled-components/macro';\nimport {flex, fonts, textSizes} from '@styles/vars';\n\nconst Labels = styled.div`\n  text-transform: uppercase;\n  margin: 0 24px;\n  display: flex;\n  ${flex.between}\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`\n\nexport default Labels","// styling\nimport styled from 'styled-components/macro';\nimport {light, textSizes, fonts, flex} from '@styles/vars';\n\nexport const StyledTooltip = styled.div`\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  color: #fff;\n  box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n  border-radius: 8px;\n  background-color: ${light.text};\n  height: 20px;\n  padding: 0 8px;\n  display: flex;\n  ${flex.center}\n  line-height: 1;\n  position: relative;\n  text-transform: uppercase;\n  \n  &.multiple {\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    height: auto;\n    \n    .item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      \n      .color {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n      }\n    }\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -3px;\n    transform: translateX(-50%) rotate(-45deg);\n    width: 8px;\n    height: 8px;\n    background-color: ${light.text};\n    display: ${props => props.arrow ? 'block' : 'none'};\n  }\n`;\n\nconst ChartTooltip = ({active, payload, tooltip, arrow = false, multi = false, ...props}) => {\n    if (multi) {\n        if (!active || !tooltip) return null\n        for (const item of payload)\n            if (item.dataKey === tooltip)\n                return <StyledTooltip arrow={arrow}>{item.value}</StyledTooltip>\n        return null\n    } else {\n        if (!active || !payload[0]) return null\n        return (\n            <StyledTooltip arrow={arrow}> {payload[0].value} {props.right && payload[0].dataKey}</StyledTooltip>\n        )\n    }\n}\n\nexport default ChartTooltip;\n","import styled from 'styled-components/macro';\nimport {colors, dark, breakpoints, effects, flex, fonts, light, textSizes} from '@styles/vars';\nimport theme from 'styled-theming';\n\nexport const ListItem = styled.li`\n  ${flex.col};\n  padding: 20px;\n  gap: 20px;\n  border-radius: 8px;\n  background-color: ${theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n  })};\n  transform-origin: center center;\n  will-change: transform;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  ${flex.between};\n  border-bottom: ${theme('theme', {\n    light: effects.dashedLight,\n    dark: effects.dashedDark\n  })};\n  padding-bottom: 20px;\n  gap: 20px;\n`;\n\nexport const Main = styled.div`\n  ${flex.col};\n  gap: 20px;\n\n  .info {\n    ${flex.col};\n    gap: 10px;\n\n    .title {\n      font-weight: 500;\n    }\n\n    .timestamp {\n      font-size: ${textSizes['12']};\n      font-family: ${fonts.accent};\n    }\n  }\n  \n  ${breakpoints.tablet} {\n    flex-direction: row;\n    ${flex.between};\n  }\n`;\n\nexport const Button = styled.button`\n  height: 40px;\n  border-radius: 20px;\n  background-color: ${theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n  })};\n  color: ${theme('theme', {\n    light: colors.blue,\n    dark: '#fff'\n  })};\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  padding: 0 25px;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n  }\n`;","// styled components\nimport {ListItem, Main, Header, Button} from '@components/TestItem/style';\n\n// components\nimport IconLink from '@ui/IconLink';\nimport MenuDots from '@ui/MenuDots';\nimport {motion, AnimatePresence} from 'framer-motion';\n\n// utils\nimport moment from 'moment';\nimport {fadePresence} from '@constants/framer';\n\nconst TestItem = ({data}) => {\n    const {doctor, title, date} = data;\n\n    return (\n        <AnimatePresence>\n            <ListItem as={motion.div} {...fadePresence}>\n                <Header>\n                    <IconLink title={`Dr. ${doctor}`}/>\n                    <MenuDots/>\n                </Header>\n                <Main>\n                    <div className=\"info\">\n                        <span className=\"title\">{title}</span>\n                        <span className=\"timestamp\">{moment(date).format('hh:mm A')}</span>\n                    </div>\n                    <Button>View result</Button>\n                </Main>\n            </ListItem>\n        </AnimatePresence>\n    )\n}\n\nexport default TestItem;","// styled components\nimport {Nav} from '../style';\n\n// components\nimport WidgetHeader from '../WidgetHeader';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst WidgetNav = ({title, handler, sidePadding, children, disabled, ...props}) => {\n    return (\n        <WidgetHeader title={title} sidePadding={sidePadding} style={props.style} className=\"nav\">\n            <Nav>\n                <button onClick={handler} data-direction=\"prev\" className={disabled ? 'disabled' : ''} aria-label=\"Previous\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handler} data-direction=\"next\" className={disabled ? 'disabled' : ''} aria-label=\"Next\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </Nav>\n            {children}\n        </WidgetHeader>\n    )\n}\n\nWidgetNav.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n}\n\nexport default WidgetNav;","import moment from 'moment';\n\nexport const patient_tests = [\n    {\n        id: 'LRmwlkTmRiv',\n        type: \"blood\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'EDkfK2u',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Adam Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: '97SbXo',\n        type: \"blood\",\n        date: moment().subtract(3, 'hour'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Hepatitis B surface antigen\"\n    },\n    {\n        id: 'RYXnQSf',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'VeOJuSBvq',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: 'aN6wcKSaUMgY',\n        type: \"mri\",\n        date: moment(),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'ukMuBJSL',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'wMch17',\n        type: \"ct\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'pkMHKe',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: '5EkV9OZ',\n        type: \"xray\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'vYMB5V564wE',\n        type: \"ecg\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'WdUbK4OW4Vn',\n        type: \"mri\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'kLYqsk',\n        type: \"mri\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'IftpHTw4p',\n        type: \"xray\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'oCnZPQKY',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: 'Y4RjFwyJn3y',\n        type: \"ct\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'JojvuH7',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'Si1B9W',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: '6zXfLNFdo',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'nPE75vNSE1Ya',\n        type: \"ecg\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'hEUJrTG',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'WCHC85b2on2',\n        type: \"ct\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: '0zVMPZO8s',\n        type: \"blood\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'g0ral9eA',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herbert Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: 'SyUtrFzCKe',\n        type: \"xray\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'NjQR8EIcGBR',\n        type: \"ultrasound\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n];","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","import styled from 'styled-components/macro';\nimport {colors, textSizes, flex, fonts, breakpoints} from '@styles/vars';\n\nexport const Card = styled.div`\n  background-color: ${props => colors[props.className]};\n  border-radius: 8px;\n  color: #fff;\n  font-size: ${textSizes['40']};\n  height: 80px;\n  ${flex.col};\n  ${flex.center};\n`;\n\nexport const Info = styled.div`\n  ${flex.col};\n  gap: 10px;\n\n  .value {\n    font-family: ${fonts.accent};\n    font-size: ${textSizes['40']};\n    font-weight: 300;\n    flex-grow: 1;\n  }\n`;\n\nexport const Content = styled.div`\n  padding-top: 24px;\n  ${flex.col};\n  gap: 20px;\n\n  ${breakpoints.mobileL} {\n    flex-direction: row;\n\n    ${Card} {\n      height: 134px;\n      width: 94px;\n    }\n\n    ${Info} {\n      width: calc(100% - 114px);\n\n      .h3 {\n        max-width: 200px;\n        flex-grow: unset;\n      }\n    }\n  }\n`;\n\n","// styled components\nimport {Card, Info, Content} from './style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport CountUp from 'react-countup';\n\nconst Statistics = ({data}) => {\n    const Icon = () => {\n        switch (data.type) {\n            default:\n            case 'cause':\n                return <i className=\"icon-stomach\"/>;\n            case 'teeth':\n                return <i className=\"icon-tooth\"/>;\n            case 'heart':\n                return <i className=\"icon-monitor\"/>;\n        }\n    }\n\n    const color = () => {\n        switch (data.type) {\n            default:\n            case 'cause':\n                return 'peach';\n            case 'teeth':\n                return 'teal';\n            case 'heart':\n                return 'green';\n        }\n    }\n\n    return (\n        <Widget name=\"Statistics\">\n            <WidgetBody>\n                <Content>\n                    <Card className={color()}>\n                        <Icon/>\n                    </Card>\n                    <Info>\n                        <CountUp className=\"value\" start={0} end={data.value} delay={0} duration={1} enableScrollSpy />\n                        <p className=\"h3\">{data.text}</p>\n                    </Info>\n                </Content>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default Statistics;","// styling\nimport styled from 'styled-components/macro';\nimport {flex} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport TestItem from '@components/TestItem';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\nimport ScrollContainer from '@components/ScrollContainer';\n\n// utils\nimport {getYearDaysArray} from '@utils/dates';\nimport moment from 'moment';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useEffect, useRef} from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport {patient_tests} from '@db/patient_tests';\n\nconst List = styled.div`\n  ${flex.col};\n  gap: 20px;\n`;\n\nconst RecentTests = () => {\n    const isXS = useWindowSize().width < 414;\n    const days = getYearDaysArray();\n    const todayIndex = moment().diff(moment().startOf('year'), 'days');\n    const {index, setIndex, navigate} = useArrayNav(days);\n\n    const headerRef = useRef(null);\n    const listRef = useRef(null);\n    const height = useContentHeight(headerRef);\n\n    useEffect(() => {\n        setIndex(todayIndex);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [todayIndex]);\n\n    useEffect(() => {\n        if (listRef.current) {\n            listRef.current.scrollTo(0, 0);\n        }\n    }, [index]);\n\n    const tests = patient_tests.filter((test) => {\n        const dayIndex = moment(test.date).diff(moment().startOf('year'), 'days');\n        return dayIndex === index;\n    })\n\n    return (\n        <Widget name=\"RecentTests\" mobile={600}>\n            <WidgetHeader title=\"Recent laboratory tests\" flex=\"column\" elRef={headerRef}>\n                <Navigator text={isXS ? days[index].short : days[index].long} handler={navigate} nextDisabled={index === todayIndex}/>\n            </WidgetHeader>\n            <WidgetBody>\n                <ScrollContainer height={height}>\n                    <List className=\"track\" ref={listRef}>\n                        {\n                            tests.length !== 0 ?\n                                tests.map((test) => <TestItem key={test.id} data={test}/>)\n                                :\n                                <NoDataPlaceholder/>\n                        }\n                    </List>\n                </ScrollContainer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default RecentTests;","// components\r\nimport Page from '@layout/Page';\r\nimport ModalWindow from '@components/ModalWindow';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Content from '@components/Reviews/Content';\r\nimport ReviewsRatingList from '@components/Reviews/List';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Stack } from '@mui/material';\r\n\r\n// hooks\r\nimport { useState, useEffect } from 'react';\r\nimport { GetAllPatientData } from '@components/Api/AllApi';\r\nimport { Link } from 'react-router-dom';\r\nimport Sidebar from '@layout/Sidebar';\r\nimport Panel from '@layout/Panel';\r\n\r\nconst ClinicActivity = () => {\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const smallScreen = window.matchMedia('(max-width: 1038.98px)').matches;\r\n    const [PatientSData, setPatientSData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n\r\n    const handleModalClose = () => {\r\n        setOpenModal(false);\r\n        setSelectedTab('');\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n        if (smallScreen) {\r\n            handleModalClose();\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTemplateData = async () => {\r\n            try {\r\n                const data = await GetAllPatientData();\r\n                console.log(data, \"This Is all Patinet Data!\");\r\n                setPatientSData(data.result || []);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchTemplateData();\r\n    }, [count]);\r\n\r\n    console.log(PatientSData, \"AAAAAAAAAAAAAAAAA\")\r\n    const columns = [\r\n        {\r\n            name: 'Patient Image',\r\n            selector: (row) => row.id,\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Message',\r\n            selector: (row) => row.name,\r\n            sortable: true,\r\n        },\r\n\r\n\r\n        {\r\n            name: 'Created',\r\n            selector: (row) => {\r\n                const createdAt = new Date(row.created_at);\r\n                const options = {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                    hour12: false,\r\n                };\r\n                return createdAt.toLocaleString('en-US', options);\r\n            },\r\n            sortable: true,\r\n        },\r\n\r\n\r\n\r\n    ];\r\n\r\n\r\n    const data = PatientSData.map((item) => ({\r\n        id: item?.id || '',\r\n        name: item?.name || '',\r\n        mname: item?.mname || '',\r\n        lname: item?.lname || '',\r\n        city: item?.city || '',\r\n        state: item?.state || '',\r\n        created_at: item?.created_at || '',\r\n        updated_at: item?.updated_at || '',\r\n    }));\r\n\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n    return (\r\n        // <Tab.Container transition={true} activeKey={selectedTab} onSelect={setSelectedTab}>\r\n        //     <Page title=\"My Order\">\r\n        <>\r\n            <div key=\"balance\">\r\n                <Card sx={{ minWidth: 455, '@media screen and (max-width: 555px)': { minWidth: '100%' } }}>\r\n                    <CardContent>\r\n                        <Typography sx={{ fontSize: 18, fontWeight: 400 }} color=\"text.secondary\" gutterBottom>\r\n                            Latest Activity\r\n                        </Typography>\r\n                        <Card sx={{ minWidth: 455, '@media screen and (max-width: 555px)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                            <CardContent>\r\n                                <Typography sx={{ fontSize: 16, fontWeight: 300 }} color=\"text.secondary\" gutterBottom>\r\n                                    {PatientSData.length}  total Latest Activity found\r\n                                </Typography>\r\n                                <div className=\"Order Page\">\r\n                                    <DataTableExtensions export={false} print={false}\r\n                                        {...tableData}\r\n                                    >\r\n                                        <DataTable\r\n                                            noHeader\r\n                                            defaultSortField=\"id\"\r\n                                            defaultSortAsc={false}\r\n                                            pagination\r\n                                            highlightOnHover\r\n                                        />\r\n                                    </DataTableExtensions>\r\n                                </div>\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </CardContent>\r\n\r\n                </Card>\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ClinicActivity","// components\r\nimport Page from '@layout/Page';\r\nimport ModalWindow from '@components/ModalWindow';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Content from '@components/Reviews/Content';\r\nimport ReviewsRatingList from '@components/Reviews/List';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Stack } from '@mui/material';\r\n\r\n// hooks\r\nimport { useState, useEffect } from 'react';\r\nimport { GetAllPatientData, GetUpcommingAppointment } from '@components/Api/AllApi';\r\nimport { Link } from 'react-router-dom';\r\nimport Sidebar from '@layout/Sidebar';\r\nimport Panel from '@layout/Panel';\r\n\r\nconst UpcommingAppointment = () => {\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const smallScreen = window.matchMedia('(max-width: 1038.98px)').matches;\r\n    const [PatientSData, setPatientSData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n\r\n    const handleModalClose = () => {\r\n        setOpenModal(false);\r\n        setSelectedTab('');\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n        if (smallScreen) {\r\n            handleModalClose();\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTemplateData = async () => {\r\n            try {\r\n                const data = await GetUpcommingAppointment();\r\n                console.log(data, \"This Is all GetUpcommingAppointment Data!\");\r\n                setPatientSData(data.data || []);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchTemplateData();\r\n    }, [count]);\r\n\r\n    console.log(PatientSData, \"AAAAAAAAAAAAAAAAA\")\r\n    const columns = [\r\n\r\n        {\r\n            name: 'Date/Time',\r\n            selector: (row) => {\r\n                const createdAt = new Date(row.created_at);\r\n                const options = {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                    hour12: false,\r\n                };\r\n                return createdAt.toLocaleString('en-US', options);\r\n            },\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Appointment Details',\r\n            selector: (row) => `${row.city + row.mname},w/ ${row.state + row.lname}`,\r\n            sortable: true,\r\n        },\r\n\r\n\r\n\r\n    ];\r\n\r\n\r\n    const data = PatientSData.map((item) => ({\r\n        id: item?.id || '',\r\n        name: item?.name || '',\r\n        mname: item?.patient?.[0]?.lname|| '',\r\n        lname: item?.doctor?.[0]?.lname|| '',\r\n        city: item?.patient?.[0]?.name || '',\r\n        state: item?.doctor?.[0]?.name || '',\r\n        created_at: item?.created_at || '',\r\n        updated_at: item?.updated_at || '',\r\n    }));\r\n\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n    return (\r\n        // <Tab.Container transition={true} activeKey={selectedTab} onSelect={setSelectedTab}>\r\n        //     <Page title=\"My Order\">\r\n        <>\r\n            <div key=\"balance\">\r\n                <Card sx={{ minWidth: 455, '@media screen and (max-width: 555px,)': { minWidth: '100%' } }}>\r\n                    <CardContent>\r\n                        <Typography sx={{ fontSize: 18, fontWeight: 400 }} color=\"text.secondary\" gutterBottom>\r\n                            Upcoming Appointments\r\n                        </Typography>\r\n                        <Card sx={{ minWidth: 455, '@media screen and (max-width: 555px,)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                            <CardContent>\r\n                                <Typography sx={{ fontSize: 16, fontWeight: 300 }} color=\"text.secondary\" gutterBottom>\r\n                                    {PatientSData.length}  total Upcoming Appointments found\r\n                                </Typography>\r\n                                <div className=\"Order Page\">\r\n                                    <DataTableExtensions export={false} print={false}\r\n                                        {...tableData}\r\n                                    >\r\n                                        <DataTable\r\n                                            noHeader\r\n                                            defaultSortField=\"id\"\r\n                                            defaultSortAsc={false}\r\n                                            pagination\r\n                                            highlightOnHover\r\n                                        />\r\n                                    </DataTableExtensions>\r\n                                </div>\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </CardContent>\r\n\r\n                </Card>\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UpcommingAppointment","// components\nimport Page from '@layout/Page';\nimport Statistics from '@widgets/Statistics';\nimport PaymentsHistory from '@widgets/PaymentsHistory';\nimport RecentTests from '@widgets/RecentTests';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\nimport { Grid } from '@mui/material';\nimport PatientCalendar from '@widgets/PatientCalendar';\nimport { useState } from 'react';\nimport PatientsGenderLineChart from '@widgets/PatientsGenderLineChart';\nimport EventsCompactCalendar from '@widgets/EventsCompactCalendar';\nimport HealthIndexChart from '@widgets/HealthIndexChart';\nimport { useEffect } from 'react';\nimport { GetAllPatientData, GetAppointmtentREwie } from '@components/Api/AllApi';\nimport ClinicActivity from './ClinicActivity';\nimport UpcommingAppointment from './UpcommingAppointment';\n\nconst DashboardK = () => {\n\n    const [currentView, setView] = useState('day');\n\n    let pageTitle = '';\n    switch (currentView) {\n        case 'week':\n            pageTitle = 'Available Appointments Time';\n            break;\n        case 'month':\n            pageTitle = 'Appointments Schedule';\n            break;\n        default:\n            pageTitle = 'Your appointments';\n            break;\n    }\n\n\n    const [PatientData, setPatientData] = useState(false)\n    const [AppointmentRequestData, setAppointmentRequestData] = useState(false)\n\n\n    useEffect(() => {\n        let TotalPatientData = GetAllPatientData()\n        if (TotalPatientData) {\n            TotalPatientData.then((data) => {\n                console.log(data, \"Total Active Patient!\")\n                setPatientData(data?.result || '')\n            })\n        }\n        let TotalAppointmentRequest = GetAppointmtentREwie()\n        if (TotalAppointmentRequest) {\n            TotalAppointmentRequest.then((data) => {\n                console.log(data, \"  Total AppointmentRequest!\")\n                setAppointmentRequestData(data?.result || '')\n            })\n        }\n\n    }, [])\n\n\n    return (\n        <>\n            <Sidebar />\n            <Panel />\n            <Page title=\" Clinic Dashboard\">\n                <Grid container >\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-cause\">\n                            <Statistics data={{ type: 'cause', value: PatientData.length, text: 'Total Active Patients' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-teeth\">\n                            <Statistics data={{ type: 'teeth', value: '5', text: 'Today VAlid Certifications' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: '5', text: 'Certifications Expiring soon' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-cause\">\n                            <Statistics data={{ type: 'cause', value: '2', text: 'Total Appointments Today' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-teeth\">\n                            <Statistics data={{ type: 'teeth', value: '0', text: 'Unread Messages' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: '0', text: 'New Tasks' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: '0', text: 'New Appointment Requests' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: '0', text: 'New Appointment Requests' }} />\n                        </div>\n                    </Grid>\n                    <Grid items xs={2} sm={4} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: AppointmentRequestData.length, text: 'New Appointment Requests' }} />\n                        </div>\n                    </Grid>\n\n                </Grid>\n                <Grid container>\n                    <Grid items md={3}>\n\n                        <div style={{ margin: '4px' }} key=\"events-compact\">\n                            <EventsCompactCalendar />\n                        </div>\n                    </Grid>\n                    <Grid items md={9}>\n\n                        <div style={{ margin: '4px' }} key=\"health-index\">\n                            <HealthIndexChart variant=\"both\" />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid items md={6}>\n\n                        <div style={{ margin: '4px' }} key=\"events-compact\">\n                            <ClinicActivity />\n                        </div>\n                    </Grid>\n                    <Grid items md={6}>\n\n                        <div style={{ margin: '4px' }} key=\"health-index\">\n                            <UpcommingAppointment />\n                        </div>\n                    </Grid>\n                </Grid>\n\n                {/* <div key=\"payments-history\">\n                <PaymentsHistory variant=\"compact\"/>\n            </div>\n            <div key=\"recent-tests\">\n                <RecentTests/>\n            </div> */}\n            </Page>\n        </>\n\n    )\n}\n\nexport default DashboardK;","// styling\nimport {colors, flex, textSizes} from '@styles/vars';\nimport styled from 'styled-components/macro';\nimport {darken} from 'polished';\n\nconst Btn = styled.button`\n  min-width: 20px;\n  min-height: 20px;\n  padding: 2px;\n  border-radius: 50%;\n  background-color: ${colors.error};\n  color: #fff;\n  display: flex;\n  ${flex.center};\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  font-size: ${textSizes[12]};\n  line-height: 1;\n  will-change: transform;\n  z-index: 10;\n  transition: background-color var(--transition), transform var(--transition);\n\n  &:hover {\n    background-color: ${darken(0.1, colors.error)};\n    transform: scale(1.1);\n  }\n  \n  .icon {\n    margin-top: -1px;\n  }\n`;\n\nconst CloseBtn = ({handler}) => {\n    return (\n        <Btn onClick={handler}>\n            <i className=\"icon icon-close\"/>\n        </Btn>\n    )\n}\n\nexport default CloseBtn;","// styled components\nimport {EventsCalendar, Container, Popup, Backdrop} from '@widgets/EventsCompactCalendar/style';\n\n// components\nimport Widget from '@components/Widget';\nimport Calendar from 'react-calendar';\nimport Timestamp from '@ui/Timestamp';\nimport Grow from '@mui/material/Grow';\nimport CloseBtn from '@components/ModalWindow/CloseBtn';\n\n// hooks\nimport {useState, useRef} from 'react';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport moment from 'moment';\nimport { Typography } from '@mui/material';\n\nconst EventsCompactCalendar = () => {\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [popupVisible, setPopupVisible] = useState(false);\n    const popupRef = useRef(null);\n\n    const events = [\n        {\n            date: moment(),\n            title: 'Medical conference',\n        },\n        {\n            date: moment(),\n            title: 'Enterprise meeting',\n        },\n        {\n            date: moment().add(3, 'hours'),\n            title: 'Meeting with Anna Smith',\n        },\n        {\n            date: moment().add(2, 'days').add(1, 'hours'),\n            title: 'Visit gym',\n        },\n        {\n            date: moment().add(2, 'days').add(2, 'hours'),\n            title: 'Prepare for presentation',\n        }\n    ]\n\n    const hasEvents = date => events.filter(event => moment(event.date).isSame(date, 'day')).length > 0;\n\n    const drawPopup = date => {\n        const eventsOnDate = events.filter(event => moment(event.date).isSame(date, 'day'));\n        return eventsOnDate.map(event => {\n            return (\n                <div key={nanoid(5)}>\n                    <Timestamp date={date} time={true} />\n                    <h3>{event.title}</h3>\n                </div>\n            )\n        });\n    }\n\n    const config = {\n        as: Calendar,\n        locale: 'en-US',\n        navigationLabel: ({date}) => `${moment(date).format('MMMM, YYYY')}`,\n        navigationAriaLabel: 'Current month',\n        prevLabel: <i className=\"icon icon-chevron-left\"/>,\n        nextLabel: <i className=\"icon icon-chevron-right\"/>,\n        prev2Label: null,\n        next2Label: null,\n        nextAriaLabel: 'Next month',\n        prevAriaLabel: 'Previous month',\n        tileContent: ({date}) => hasEvents(date) ? <span className=\"bar\"/> : null,\n        tileClassName: ({date}) => hasEvents(date) ? 'active' : null,\n        onClickDay: (value) => {\n            setSelectedDate(value);\n            setPopupVisible(true);\n        },\n    }\n\n    return (\n        <Widget name=\"EventsCompactCalendar\">\n            <Container>\n                <Typography m={1} sx={{fontSize:22,fontWeight:600}}>Quick Calender</Typography>\n                <EventsCalendar {...config} />\n                <Backdrop>\n                    {\n                        selectedDate &&\n                        <Grow in={popupVisible} timeout={300} style={{transformOrigin: '0 0 0'}}>\n                            <Popup ref={popupRef}>\n                                {drawPopup(selectedDate)}\n                                <CloseBtn handler={() => setPopupVisible(false)}/>\n                            </Popup>\n                        </Grow>\n                    }\n                </Backdrop>\n            </Container>\n        </Widget>\n    )\n}\n\nexport default EventsCompactCalendar;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from '@styles/vars';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100%;\n  ${flex.col};\n  align-items: center;\n`;\n\nexport const Popup = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg,\n  })};\n  padding: 20px;\n  border-radius: 8px;\n  ${flex.col};\n  gap: 16px;\n  margin: auto;\n  width: calc(100% - 40px);\n  max-width: 320px;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 40px);\n`;\n\nexport const EventsCalendar = styled.div`\n  ${flex.col};\n  gap: 8px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin: 2px;\n  flex-grow: 1;\n\n  .react-calendar {\n    flex-grow: 1;\n    height: 100%;\n\n    &__navigation {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n      border-radius: 8px;\n      min-height: 40px;\n      padding: 10px 22px;\n      display: flex;\n      ${flex.between};\n      font-size: ${textSizes['14']};\n      margin: 0 2px;\n\n      &__label {\n        pointer-events: none;\n      }\n    }\n\n    &__viewContainer {\n      ${flex.col};\n      flex-grow: 1;\n    }\n\n    &__tile {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n\n      .bar {\n        opacity: 0;\n        transition: opacity var(--transition);\n      }\n    }\n\n    &__year-view__months {\n      gap: 20px 0;\n      margin-top: 20px;\n    }\n\n    &__month-view {\n      height: 100%;\n\n      & > div {\n        height: 100%;\n        align-items: stretch;\n      }\n\n      & > div > div {\n        ${flex.col};\n        gap: 8px;\n        justify-content: space-between;\n        height: 100%;\n        padding: 0 24px 20px;\n      }\n\n      &__weekdays {\n        text-transform: uppercase;\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        text-align: center;\n        order: 1;\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        justify-items: center;\n\n        abbr {\n          text-decoration: none;\n        }\n\n        ${breakpoints.mobileL} {\n          gap: 8px;\n\n          &__weekday {\n            width: 40px;\n          }\n        }\n      }\n\n      &__days {\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        grid-gap: 20px 0;\n        justify-items: center;\n\n        &__day {\n          &.active {\n            color: ${colors.blue};\n            cursor: pointer;\n          }\n\n          &:not(&.active) {\n            pointer-events: none;\n          }\n\n          &--neighboringMonth {\n            opacity: .5;\n          }\n        }\n\n        ${breakpoints.mobileL} {\n          grid-gap: 8px;\n\n          &__day {\n            width: 40px;\n            height: 40px;\n            border-radius: 4px;\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            position: relative;\n\n            &.active {\n              color: inherit;\n\n              .bar {\n                opacity: 1;\n                display: block;\n                position: absolute;\n                left: 50%;\n                bottom: 8px;\n                border-radius: 2px;\n                width: 16px;\n                height: 2px;\n                background-color: ${colors.blue};\n                transform: translateX(-50%);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, textSizes, breakpoints, flex} from '@styles/vars';\n\nexport const HealthIndexChartWrapper = styled.div`\n  height: 100%;\n  ${flex.col};\n  justify-content: space-between;\n\n  .total {\n    display: flex;\n    gap: 40px;\n    margin: -4px 24px 0;\n    position: relative;\n\n    &_block {\n      font-size: ${textSizes['12']};\n\n      .counter {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n\n      .spacer {\n        opacity: 0;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      &--cured .h1 {\n        color: ${colors.azure};\n      }\n\n      &--sick {\n        position: relative;\n\n        .h1 {\n          color: ${colors.peach};\n        }\n\n        &:before {\n          content: '';\n          height: 100%;\n          width: 1px;\n          background: ${theme('theme', {\n            light: '#A2C0D4',\n            dark: '#383D40',\n          })};\n          position: absolute;\n          top: 0;\n          left: -20px;\n        }\n      }\n    }\n\n    ${breakpoints.tablet} {\n      .total_block {\n        font-size: ${textSizes['14']};\n\n        .hidden {\n          display: inline;\n        }\n      }\n    }\n\n    ${breakpoints.laptop} {\n      .total_block {\n        font-size: ${textSizes['16']};\n      }\n    }\n  }\n`;","export const y2020 = [\n    {cured: 314, sick: 200},\n    {cured: 200, sick: 400},\n    {cured: 265, sick: 120},\n    {cured: 156, sick: 300},\n    {cured: 412, sick: 200},\n    {cured: 280, sick: 500},\n    {cured: 251, sick: 130},\n    {cured: 180, sick: 300},\n    {cured: 304, sick: 150},\n    {cured: 505, sick: 408},\n    {cured: 328, sick: 200},\n    {cured: 254, sick: 90},\n    {cured: 301, sick: 566},\n    {cured: 459, sick: 189},\n    {cured: 354, sick: 480},\n    {cured: 264, sick: 400},\n    {cured: 309, sick: 200},\n    {cured: 185, sick: 500},\n];\n\nexport const y2021 = [\n    {cured: 450, sick: 250},\n    {cured: 150, sick: 380},\n    {cured: 370, sick: 200},\n    {cured: 300, sick: 180},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 600},\n    {cured: 200, sick: 300},\n    {cured: 400, sick: 150},\n    {cured: 348, sick: 130},\n    {cured: 400, sick: 280},\n    {cured: 200, sick: 400},\n    {cured: 300, sick: 241},\n    {cured: 380, sick: 480},\n    {cured: 200, sick: 380},\n    {cured: 400, sick: 200},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 300},\n    {cured: 300, sick: 450},\n];\n\nexport const y2022 = [\n    {cured: 200, sick: 300},\n    {cured: 250, sick: 350},\n    {cured: 390, sick: 240},\n    {cured: 450, sick: 320},\n    {cured: 550, sick: 250},\n    {cured: 420, sick: 200},\n    {cured: 368, sick: 198},\n    {cured: 250, sick: 370},\n    {cured: 322, sick: 200},\n    {cured: 450, sick: 270},\n    {cured: 210, sick: 394},\n    {cured: 180, sick: 270},\n    {cured: 380, sick: 480},\n    {cured: 390, sick: 550},\n    {cured: 450, sick: 210},\n    {cured: 470, sick: 360},\n    {cured: 360, sick: 190},\n    {cured: 300, sick: 250},\n];\n","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport {HealthIndexChartWrapper} from '@widgets/HealthIndexChart/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {ScatterChart, Scatter, ResponsiveContainer, Tooltip, Cell} from 'recharts';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport ChartTooltip from '@components/Chart/Tooltip';\nimport CountUp from 'react-countup';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport {useTheme} from 'styled-components';\n\n// data placeholder\nimport {y2020, y2021, y2022} from '@db/health';\n\nconst HealthIndexChart = ({variant}) => {\n    const {theme} = useTheme();\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n\n    const averages = [\n        {cured: 75.08, sick: 45.27},\n        {cured: 84.51, sick: 33.12},\n        {cured: 67.14, sick: 48.65},\n    ]\n\n    const getCurrentData = () => {\n        switch (index) {\n            default:\n            case 0:\n                return y2020;\n            case 1:\n                return y2021;\n            case 2:\n                return y2022;\n        }\n    }\n    const data = getCurrentData();\n\n    const CustomScatterShape = ({cx, cy, fill, ...props}) => {\n        const isDominant = variant === 'both' ? props.dom === props.dataKey : props.dataKey === 'cured';\n\n        return (\n            <svg width=\"10\" height=\"222\" viewBox=\"0 0 10 222\" x={cx} y={cy} fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n                {\n                    isDominant &&\n                    <path opacity=\"0.5\" d=\"M5 28.3799V220.38\"\n                          stroke={`url(#scatter_${props.dataKey})`} strokeWidth=\"2\"\n                          strokeLinecap=\"round\"/>\n                }\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                      d=\"M5 10C7.76142 10 10 7.76142 10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10Z\"\n                      fill={fill}/>\n                <defs>\n                    <linearGradient id=\"scatter_cured\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.azure}/>\n                    </linearGradient>\n                    <linearGradient id=\"scatter_sick\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.peach}/>\n                    </linearGradient>\n                </defs>\n            </svg>\n        );\n    }\n\n    return (\n        <Widget name=\"HealthIndexChart\">\n            <WidgetNav sx={{fontSize:22,fontWeight:600}} title=\"Clinic Growth\" handler={navigate}/>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <HealthIndexChartWrapper>\n                    <div className=\"total\">\n                        <div className=\"total_block total_block--cured\">\n                            <span className=\"spacer h1\">{averages[index].cured}</span>\n                            <CountUp className=\"counter h1\" end={averages[index].cured} duration={2} decimals={2} />\n                            <span><span className=\"hidden\">New</span> Patients</span>\n                        </div>\n                        {\n                            variant === 'both' && (\n                                <div className=\"total_block total_block--sick\">\n                                    <span className=\"spacer h1\">{averages[index].sick}</span>\n                                    <CountUp className=\"counter h1\" end={averages[index].sick} duration={2} decimals={2} />\n                                    <span><span className=\"hidden\">New</span> Certificates</span>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                        <ScatterChart margin={false} data={data}>\n                            {\n                                variant === 'both' &&\n                                <Scatter dataKey=\"sick\" shape={CustomScatterShape}>\n                                    {data.map((entry, i) => {\n                                        return (\n                                            <Cell key={`cell-${i}`}\n                                                  fill={colors.peach}\n                                                  dom={entry.sick > entry.cured ? 'sick' : 'cured'}\n                                                  dataKey=\"sick\"/>\n                                        )\n                                    })}\n                                </Scatter>\n                            }\n                            <Scatter dataKey=\"cured\" shape={CustomScatterShape}>\n                                {data.map((entry, i) => {\n                                    return (\n                                        <Cell key={`cell-${i}`}\n                                              fill={colors.azure}\n                                              dom={entry.cured > entry.sick ? 'cured' : 'sick'}\n                                              dataKey=\"cured\"/>\n                                    )\n                                })}\n                            </Scatter>\n                            <Tooltip cursor={false} content={<ChartTooltip right/>}/>\n                        </ScatterChart>\n                    </ResponsiveContainer>\n                    <Legend overlay={true}>\n                        <LegendItem color=\"azure\" legend=\"New Patients\"/>\n                        {variant === 'both' && <LegendItem color=\"peach\" legend=\"New Certificates\"/>}\n                    </Legend>\n                </HealthIndexChartWrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nHealthIndexChart.propTypes = {\n    variant: PropTypes.oneOf(['health', 'both']).isRequired\n}\n\nexport default HealthIndexChart;","// components\nimport Widget from '@components/Widget';\nimport AppointmentsCalendar from '@components/AppointmentsCalendar';\n\nconst PatientCalendar = ({handler, current}) => {\n    return (\n        <Widget name=\"PatientCalendar\">\n            <AppointmentsCalendar current={current} viewChangeHandler={handler} type=\"patient\"/>\n        </Widget>\n    )\n}\n\nexport default PatientCalendar;","export const y2019 = [\n    {\n        name: 'January',\n        men: 220,\n        women: 350\n    },\n    {\n        name: 'February',\n        men: 185,\n        women: 214\n    },\n    {\n        name: 'March',\n        men: 294,\n        women: 305\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 214\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 288,\n        women: 265\n    },\n    {\n        name: 'July',\n        men: 355,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 218,\n        women: 301\n    },\n    {\n        name: 'September',\n        men: 180,\n        women: 250\n    },\n    {\n        name: 'October',\n        men: 274,\n        women: 145\n    },\n    {\n        name: 'November',\n        men: 387,\n        women: 218\n    },\n    {\n        name: 'December',\n        men: 281,\n        women: 311\n    },\n];\n\nexport const y2020 = [\n    {\n        name: 'January',\n        men: 311,\n        women: 205\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 288\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 511,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 300,\n        women: 220\n    },\n];\n\nexport const y2021 = [\n    {\n        name: 'January',\n        men: 566,\n        women: 309\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 500,\n        women: 600\n    },\n];\n\nexport const y2022 = [\n    {\n        name: 'January',\n        men: 303,\n        women: 260\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 400,\n        women: 350\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 202,\n        women: 140\n    },\n    {\n        name: 'December',\n        men: 70,\n        women: 140\n    },\n];","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport CartesianChart from '@components/CartesianChart';\nimport LegendList from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components'\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport moment from 'moment';\nimport {getMonthArray} from '@utils/dates';\n\n// data placeholder\nimport {y2019, y2020, y2021, y2022} from '@db/gender';\nimport {rgba} from 'polished';\n\nconst PatientsGenderLineChart = () => {\n    const isMobile = useWindowSize().width < 768;\n    const {theme} = useTheme();\n    const periods = ['2019', '2020', '2021', '2022'];\n    const {index, navigate} = useArrayNav(periods);\n\n    // common line props\n    const common = {\n        type:\"monotone\",\n        strokeWidth: 3,\n        dot: false\n    }\n\n    const chartElems = [\n        {\n            ...common,\n            dataKey: \"men\",\n            stroke: colors.azure,\n            activeDot: {r: 4, fill: colors.azure, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.azure, .5)})`\n            }\n        },\n        {\n            ...common,\n            dataKey: \"women\",\n            stroke: colors.peach,\n            activeDot: {r: 4, fill: colors.peach, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.peach, .5)})`\n            }\n        }\n    ];\n\n    const currentData = () => {\n        switch (periods[index]) {\n            case '2019':\n                return y2019\n            case '2020':\n                return y2020\n            case '2021':\n                return y2021\n            default:\n            case '2022':\n                return y2022\n        }\n    }\n\n    const data = currentData();\n\n    return (\n        <Widget name=\"PatientsGenderLineChart\" mobile={400}>\n            <WidgetHeader title=\"Patients gender\" flex=\"column\">\n                <Navigator handler={navigate} text={periods[index]} style={{margin: '0 -22px 0'}} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <Labels>\n                    {\n                        getMonthArray().map(({month}) => (\n                            <div key={moment(month).format('MMM')}>\n                                {isMobile ? moment(month).month() + 1 : moment(month).format('MMM')}\n                            </div>\n                        ))\n                    }\n                </Labels>\n                <CartesianChart variant=\"line\" id=\"patientsGender\" data={data} elems={chartElems} />\n                <LegendList overlay={true}>\n                    <LegendItem color=\"azure\" legend=\"men\" />\n                    <LegendItem color=\"peach\" legend=\"women\" />\n                </LegendList>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsGenderLineChart;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, effects, flex, fonts, textSizes} from '@styles/vars';\n\nexport const ListItem = styled.div`\n  border-bottom: ${theme('theme', {\n    light: effects.dashedLight,\n    dark: effects.dashedDark,\n})};\n  padding-bottom: 20px;\n\n  &:not(.bordered):last-of-type {\n    border-bottom: none;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  ${flex.between};\n  margin-bottom: 12px;\n  gap: 20px;\n\n  .main {\n    ${flex.col};\n    gap: 8px;\n\n    .title {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      font-weight: 500;\n    }\n  }\n\n  .payment {\n    align-self: flex-end;\n    font-family: ${fonts.accent};\n    font-weight: 500;\n    display: flex;\n    gap: 8px;\n    font-size: ${textSizes['14']};\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  ${flex.between};\n`;\n\nexport const Date = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  .date {\n    font-size: ${textSizes['14']};\n  }\n\n  .icon {\n    color: ${colors.gray};\n  }\n`;","// styled components\nimport {ListItem, Wrapper, Footer, Date} from './style';\n\n// components\nimport IconLink from '@ui/IconLink';\nimport MenuDots from '@ui/MenuDots';\n\n// utils\nimport moment from 'moment';\n\nconst PaymentItem = ({data, className}) => {\n    const {doctor, title, payment, date} = data;\n    const formattedDate = moment(date).format('dddd, DD MMMM');\n    return (\n        <ListItem className={`list-item ${className ? className : ''}`}>\n            <Wrapper>\n                <div className=\"main\">\n                    <IconLink title={`Dr. ${doctor}`}/>\n                    <span className=\"title\">{title}</span>\n                </div>\n                <span className=\"payment\">\n                    <span className=\"icon\">€</span> {payment.toFixed(2)}\n                </span>\n            </Wrapper>\n            <Footer>\n                <Date>\n                    <i className=\"icon icon-clock\"/>\n                    <span className=\"date\">{formattedDate}</span>\n                </Date>\n                <MenuDots/>\n            </Footer>\n        </ListItem>\n    )\n}\n\nexport default PaymentItem;","const dayBefore = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);\nconst twoDaysBefore = new Date(new Date().getTime() - 2 * 24 * 60 * 60 * 1000);\n\nexport const paymentsHistory = [\n    {\n        doctor: 'John Doe',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'MRI',\n        payment: 99.30,\n        date: new Date()\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'USG + Consultation',\n        payment: 35,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Keeney Test',\n        payment: 150.95,\n        date: new Date()\n    },\n    {\n        doctor: 'Robert Miller',\n        title: 'Family Planning',\n        payment: 540,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'X-Ray',\n        payment: 70,\n        date: dayBefore\n    },\n    {\n        doctor: 'Samantha Berry',\n        title: 'Psychotherapy',\n        payment: 200,\n        date: dayBefore\n    },\n    {\n        doctor: 'Samantha Berry',\n        title: 'Art therapy session',\n        payment: 80.50,\n        date: dayBefore\n    },\n    {\n        doctor: 'Lucas Bell',\n        title: 'Gastroscopy',\n        payment: 50.90,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'Consultation',\n        payment: 15,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Kimbra Lee',\n        title: 'Vision Test',\n        payment: 20.90,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Kimbra Lee',\n        title: 'Glaucoma Test',\n        payment: 90.95,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Robert Miller',\n        title: 'Family Planning',\n        payment: 450.87,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'John Doe',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: twoDaysBefore\n    },\n]","// styling\nimport styled from 'styled-components/macro';\nimport {flex, breakpoints} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport PaymentItem from '@components/PaymentItem';\nimport Navigator from '@ui/Navigator';\nimport ScrollContainer from '@components/ScrollContainer';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport {getYearDaysArray} from '@utils/dates';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useEffect, useRef} from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport {paymentsHistory} from '@db/payments_history';\n\nconst Container = styled.div`\n  .list {\n    ${flex.col};\n    gap: 20px 24px;\n    padding: 20px 24px;\n\n    .column {\n      ${flex.col};\n      gap: 20px;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .list {\n      ${props => props.variant === 'large' && `\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n      `}\n    }\n  }\n`;\n\nconst PaymentsHistory = ({variant}) => {\n    const days = getYearDaysArray();\n    const todayIndex = moment().diff(moment().startOf('year'), 'days');\n    const {index, setIndex, navigate} = useArrayNav(days);\n    const paymentsByDate = paymentsHistory.filter(payment => moment(payment.date).isSame(days[index].date, 'day'));\n    const payments = variant === 'large' ? paymentsByDate : paymentsHistory;\n    const isTablet = useWindowSize().width >= 768;\n\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const height = useContentHeight(headerRef, footerRef);\n\n    useEffect(() => {\n        setIndex(todayIndex);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [todayIndex]);\n\n    return (\n        <Widget name=\"PaymentsHistory\" mobile={600}>\n            {variant === 'compact' &&\n                <WidgetHeader title=\"Payments history\" elRef={headerRef} style={{paddingBottom: 0}}/>\n            }\n            <WidgetBody style={{padding: 0}}>\n                <ScrollContainer height={height}>\n                    <Container className=\"track\" variant={variant}>\n                        {\n                            payments.length !== 0 ?\n                                <div className=\"list\">\n                                    {\n                                        payments.map((payment, i) => (\n                                            i % 3 === 0 &&\n                                            <div className=\"column\" key={nanoid()}>\n                                                {\n                                                    payments.slice(i, i + 3).map(payment => (\n                                                        <PaymentItem data={payment}\n                                                                     key={nanoid()}\n                                                                     className={isTablet && variant === 'large'}/>\n                                                    ))\n                                                }\n                                            </div>\n                                        ))\n                                    }\n                                </div> : <NoDataPlaceholder/>\n                        }\n                    </Container>\n                </ScrollContainer>\n                {\n                    variant === 'large' &&\n                    <div ref={footerRef} style={{padding: '0 2px 2px'}}>\n                        <Navigator text={days[index].long} handler={e => navigate(e)}\n                                   nextDisabled={index === todayIndex}/>\n                    </div>\n                }\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nPaymentsHistory.propTypes = {\n    variant: PropTypes.oneOf(['compact', 'large']).isRequired\n}\n\nexport default PaymentsHistory;"],"names":["Link","styled","a","withConfig","componentId","textSizes","colors","blue","darken","gray","_ref","_ref$href","href","title","_jsxs","children","_jsx","className","variant","id","data","elems","props","_objectWithoutProperties","_excluded","width","useWindowSize","theme","useTheme","_useState","useState","_useState2","_slicedToArray","points","setPoints","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","i","push","generateGridPoints","renderTooltip","active","payload","StyledTooltip","map","item","index","style","background","stroke","value","ResponsiveContainer","height","LineChart","_objectSpread","margin","x1","y1","x2","y2","gradientUnits","stopColor","dark","stopOpacity","offset","light_gray","CartesianGrid","concat","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","top","Area","Labels","div","flex","between","fonts","accent","light","text","center","arrow","tooltip","_ref$arrow","_ref$multi","multi","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","right","ListItem","li","col","highlight","Header","effects","dashedLight","dashedDark","Main","breakpoints","tablet","Button","button","widgetBg","doctor","date","AnimatePresence","as","motion","fadePresence","IconLink","MenuDots","moment","format","handler","sidePadding","disabled","WidgetHeader","Nav","onClick","patient_tests","type","subtract","periods","period","setPeriod","setPeriodIndex","Card","Info","Content","mobileL","Icon","Widget","name","WidgetBody","color","CountUp","start","end","delay","duration","enableScrollSpy","setSelectedTab","_useState3","_useState4","setOpenModal","smallScreen","window","matchMedia","matches","_useState5","_useState6","PatientSData","setPatientSData","_useState7","_useState8","count","addEventListener","useEffect","fetchTemplateData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data","wrap","_context","prev","next","GetAllPatientData","sent","console","log","result","t0","error","stop","apply","tableData","columns","selector","row","sortable","Date","created_at","toLocaleString","year","month","day","hour","minute","second","hour12","mname","lname","city","state","updated_at","_Fragment","sx","minWidth","CardContent","Typography","fontSize","fontWeight","gutterBottom","backgroundColor","DataTableExtensions","export","print","DataTable","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","GetUpcommingAppointment","_item$patient","_item$patient$","_item$doctor","_item$doctor$","_item$patient2","_item$patient2$","_item$doctor2","_item$doctor2$","patient","currentView","PatientData","setPatientData","AppointmentRequestData","setAppointmentRequestData","TotalPatientData","then","TotalAppointmentRequest","GetAppointmtentREwie","Sidebar","Panel","Page","Grid","container","items","xs","sm","md","Statistics","EventsCompactCalendar","HealthIndexChart","ClinicActivity","UpcommingAppointment","Btn","selectedDate","setSelectedDate","popupVisible","setPopupVisible","popupRef","useRef","events","add","hasEvents","filter","event","isSame","config","Calendar","locale","navigationLabel","navigationAriaLabel","prevLabel","nextLabel","prev2Label","next2Label","nextAriaLabel","prevAriaLabel","tileContent","_ref2","tileClassName","_ref3","onClickDay","Container","m","EventsCalendar","Backdrop","Grow","in","timeout","transformOrigin","Popup","ref","Timestamp","time","nanoid","CloseBtn","bodyBg","HealthIndexChartWrapper","azure","peach","laptop","y2020","cured","sick","y2021","y2022","usePeriodNav","_useArrayNav","useArrayNav","navigate","averages","getCurrentData","CustomScatterShape","cx","cy","fill","isDominant","dom","viewBox","x","y","xmlns","opacity","d","strokeWidth","fillRule","clipRule","WidgetNav","padding","overflow","decimals","ScatterChart","Scatter","shape","entry","Cell","ChartTooltip","Legend","overlay","LegendItem","legend","current","AppointmentsCalendar","viewChangeHandler","y2019","men","women","isMobile","common","dot","chartElems","activeDot","r","rgba","currentData","mobile","Navigator","getMonthArray","CartesianChart","LegendList","Wrapper","Footer","payment","formattedDate","toFixed","dayBefore","getTime","twoDaysBefore","paymentsHistory","days","getYearDaysArray","todayIndex","diff","startOf","setIndex","paymentsByDate","payments","headerRef","footerRef","useContentHeight","elRef","paddingBottom","ScrollContainer","slice","PaymentItem","NoDataPlaceholder","long","nextDisabled"],"sourceRoot":""}