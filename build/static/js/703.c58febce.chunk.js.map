{"version":3,"file":"static/js/703.c58febce.chunk.js","mappings":"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","sources":["components/Chart/Labels/index.jsx","hooks/usePeriodNav.js","widgets/TaskScheduler/style.js","db/scheduler.js","widgets/TaskScheduler/index.jsx","widgets/BloodTest/index.jsx","pages/DashboardD.jsx","widgets/EventsCompactCalendar/style.js","db/gender.js","widgets/PatientsGenderLineChart/index.jsx","widgets/RadarAreaChart/index.jsx"],"sourcesContent":["import styled from 'styled-components/macro';\nimport {flex, fonts, textSizes} from '@styles/vars';\n\nconst Labels = styled.div`\n  text-transform: uppercase;\n  margin: 0 24px;\n  display: flex;\n  ${flex.between}\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`\n\nexport default Labels","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, textSizes, colors, breakpoints, flex, fonts} from '@styles/vars';\nimport {EventsCalendar} from '@widgets/EventsCompactCalendar/style';\n\nexport const MonthSelector = styled.div`\n  position: relative;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n  height: 80px;\n  margin: 0 -22px 20px;\n  border-radius: 8px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n\n  .list-item {\n    width: fit-content !important;\n  }\n\n  .navigation {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n\n    &:before, &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      background: ${theme('theme', {\n        light: 'linear-gradient(90deg, #F1F5F8 0%, rgba(241, 245, 248, 0.0001) 100%)',\n        dark: 'linear-gradient(90deg, #090A0A 0%, rgba(9, 10, 10, 0.0001) 100%)'\n      })};\n      height: 100%;\n      width: 100px;\n      filter: blur(1px);\n      display: block;\n    }\n\n    &:before {\n      left: 2px;\n    }\n\n    &:after {\n      right: 2px;\n      transform: scaleX(-1);\n    }\n\n    button {\n      font-size: ${textSizes['12']};\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n      background-color: ${colors.blue};\n      color: #fff;\n      z-index: 2000;\n      ${flex.col};\n      ${flex.center};\n      opacity: .7;\n      transition: opacity var(--transition);\n\n      &[data-direction=\"prev\"] {\n        left: 16px;\n      }\n\n      &[data-direction=\"next\"] {\n        right: 16px;\n      }\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  .list {\n    display: flex;\n    align-items: center;\n    pointer-events: none;\n    gap: 12px;\n    padding: 0 16px;\n    overflow-x: auto;\n\n    &-item {\n      padding: 10px;\n      border-radius: 8px;\n      transition: background-color var(--transition), color var(--transition);\n\n      &.active {\n        color: ${colors.blue};\n        background-color: ${theme('theme', {\n          light: light.widgetBg,\n          dark: dark.widgetBg\n        })};\n      }\n    }\n  }\n`;\n\nexport const CalendarWrapper = styled.div`\n  height: 100%;\n  position: relative;\n\n  .popup {\n    position: absolute;\n    top: calc(50% + ${props => props.top}px + 80px);\n    left: 50%;\n    transform: translate(-50%, calc(-50% - 80px - ${props => props.top / 2}px));\n    z-index: 10;\n    padding: 20px;\n    border-radius: 8px;\n    background-color: ${theme('theme', {\n      light: light.bodyBg,\n      dark: dark.bodyBg\n    })};\n    width: 240px;\n    ${flex.col};\n    gap: 16px;\n    border: 2px solid ${theme('theme', {\n      light: colors.light_gray,\n      dark: colors.dark\n    })};\n    transition: opacity var(--transition), visibility var(--transition);\n    opacity: 0;\n    visibility: hidden;\n\n    &.visible {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    &_close {\n      position: absolute;\n      right: 16px;\n      top: 16px;\n      font-size: ${textSizes['14']};\n      color: ${colors.error};\n    }\n\n    .task {\n      ${flex.col};\n      gap: 10px;\n      font-size: ${textSizes['14']};\n\n      &_label {\n        font-size: ${textSizes['12']};\n        font-family: ${fonts.accent};\n        color: ${colors.gray};\n        display: block;\n        margin-bottom: 8px;\n      }\n\n      &_header {\n        display: flex;\n        gap: 10px;\n        align-items: center;\n      }\n    }\n\n    ${breakpoints.mobileL} {\n      width: 280px;\n    }\n  }\n`;\n\nexport const StyledCalendar = styled(EventsCalendar)`\n  max-width: 326px;\n  margin: 0 auto;\n\n  .react-calendar {\n    &__month-view {\n      &__weekdays {\n        order: unset;\n      }\n\n      & > div > div {\n        padding: 0 0 20px;\n      }\n\n      &:last-of-type {\n        .react-calendar__month-view__weekdays {\n          display: none !important;\n        }\n\n        .react-calendar__month-view__days {\n          margin-top: -37px;\n\n          ${breakpoints.mobileL} {\n            margin-top: -60px;\n          }\n        }\n      }\n    }\n  }\n`;","import moment from 'moment';\n\nexport const scheduler = [\n    {\n        id: 'marvin_park',\n        tasks: [\n            {\n                title: 'Vivamus in felis eu sapien',\n                date: moment(),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'days'),\n                type: 'other'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(2, 'days'),\n                type: 'family'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(3, 'days'),\n                type: 'travel'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'months'),\n                type: 'other'\n            }\n        ]\n    },\n    {\n        id: 'norman_munoz',\n        tasks: [\n            {\n                title: 'Vivamus felislectus',\n                date: moment(),\n                type: 'travel'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'weeks'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'tillie_mathis',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(5, 'days'),\n                type: 'other'\n            }\n        ]\n    },\n    {\n        id: 'cornelia_phillips',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'days'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'days').add(2, 'hours'),\n                type: 'family'\n            },\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(10, 'days').add(4, 'hours'),\n                type: 'travel'\n            }\n        ]\n    },\n    {\n        id: 'isaiah_goodman',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'months'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(1, 'months').add(2, 'days'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'claudia_turner',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(1, 'days'),\n                type: 'work'\n            },\n            {\n                title: 'Sed vel lectus',\n                date: moment().add(16, 'days').add(2, 'hours'),\n                type: 'family'\n            }\n        ]\n    },\n    {\n        id: 'emily_rivera',\n        tasks: [\n            {\n                title: 'Lorem ipsum dolor',\n                date: moment().add(18, 'days'),\n                type: 'other'\n            }\n        ]\n    }\n];","// styled components\nimport {MonthSelector, CalendarWrapper, StyledCalendar} from '@widgets/TaskScheduler/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport CustomSelect from '@ui/Select';\nimport Calendar from 'react-calendar';\nimport {Swiper, SwiperSlide} from 'swiper/react';\nimport {Badge} from '@ui/Badge/style';\nimport Backdrop from '@mui/material/Backdrop';\n\n// utils\nimport {getMonthArray} from '@utils/dates';\nimport moment from 'moment';\nimport {nanoid} from 'nanoid';\n\n// hooks\nimport {useState, useEffect, useRef} from 'react';\n\n// data placeholder\nimport {scheduler} from '@db/scheduler';\n\n// constants\nimport {tasksColors} from '@constants/colors';\nimport {doctorsOptions} from '@constants/options';\n\nconst TaskScheduler = () => {\n    const options = doctorsOptions();\n    const monthArray = getMonthArray();\n    const currentMonth = new Date().getMonth() + 1;\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n    const [selectedRange, setSelectedRange] = useState({start: 1, end: 2});\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [open, setOpen] = useState(false);\n    const [swiper, setSwiper] = useState(null);\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        currentMonth === 12 ?\n            setSelectedRange({start: currentMonth - 1, end: currentMonth})\n            :\n            setSelectedRange({start: currentMonth, end: currentMonth + 1});\n\n        setHeight(headerRef.current.offsetHeight + footerRef.current.offsetHeight);\n    }, [currentMonth, headerRef, footerRef]);\n\n    const handleNavigation = e => {\n        const realIndex = swiper.realIndex;\n        if (e.currentTarget.dataset.direction === 'prev') {\n            swiper.slidePrev();\n            setSelectedRange({\n                start: realIndex === 0 ? 11 : realIndex,\n                end: realIndex === 0 ? 12 : realIndex + 1,\n            })\n        } else {\n            swiper.slideNext();\n            setSelectedRange({\n                start: realIndex === 11 ? 1 : realIndex + 1,\n                end: realIndex === 11 ? 2 : realIndex + 2,\n            })\n        }\n    }\n\n    const calendarStart = moment().month(selectedRange.start - 1).startOf('month').toDate(),\n        calendarEnd = moment().month(selectedRange.end - 1).endOf('month').toDate();\n\n    const docTasks = scheduler.filter(task => task.id === selectedDoctor.value)[0].tasks;\n\n    const hasTasks = date => docTasks.filter(event => moment(event.date).isSame(date, 'day')).length > 0;\n\n    const drawTasks = date => {\n        const tasks = docTasks.filter(event => moment(event.date).isSame(date, 'day'));\n        return tasks.map(task => {\n            const {title, type, date} = task;\n            const color = tasksColors.find(color => color.cat === type).color;\n            return (\n                <div key={nanoid()} className=\"task\">\n                    <div>\n                        <span className=\"task_label\">Task:</span>\n                        <div className=\"task_header\">\n                            <Badge color={color}/>\n                            {title}\n                        </div>\n                    </div>\n                    <div>\n                        <span className=\"task_label\">Date:</span>\n                        <div>{moment(date).format('MM.DD.YY, HH:mm A')}</div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    return (\n        <Widget name=\"TaskScheduler\">\n            <WidgetHeader title=\"Doctor task scheduler\" flex={'column'} elRef={headerRef}>\n                <CustomSelect options={options}\n                              value={selectedDoctor}\n                              variant=\"user\"\n                              changeHandler={e => setSelectedDoctor(e)}/>\n            </WidgetHeader>\n            <WidgetBody style={{display: 'flex', flexDirection: 'column'}}>\n                <MonthSelector>\n                    <div className=\"list\">\n                        <Swiper slidesPerView=\"auto\"\n                                spaceBetween={12}\n                                loop={true}\n                                centeredSlides={true}\n                                onSwiper={(swiper) => setSwiper(swiper)}\n                                initialSlide={currentMonth - 1}\n                        >\n                            {monthArray.map(({month}) => {\n                                const monthNumber = moment(month).format('M');\n                                const monthName = moment(month).format('MMMM');\n                                const isSelected = +monthNumber === selectedRange.start || +monthNumber === selectedRange.end;\n\n                                return (\n                                    <SwiperSlide key={monthName}\n                                                 className={isSelected ? 'list-item active' : 'list-item'}>\n                                        {monthName}\n                                    </SwiperSlide>\n                                );\n                            })}\n                        </Swiper>\n                    </div>\n                    <div className=\"navigation\">\n                        <button data-direction=\"prev\" onClick={handleNavigation} aria-label=\"Previous\">\n                            <i className=\"icon icon-chevron-left\"/>\n                        </button>\n                        <button data-direction=\"next\" onClick={handleNavigation} aria-label=\"Next\">\n                            <i className=\"icon icon-chevron-right\"/>\n                        </button>\n                    </div>\n                </MonthSelector>\n                <CalendarWrapper top={height}>\n                    <StyledCalendar as={Calendar}\n                                    locale=\"en-US\"\n                                    value={[calendarStart, calendarEnd]}\n                                    activeStartDate={calendarStart}\n                                    minDate={calendarStart}\n                                    maxDate={calendarEnd}\n                                    showDoubleView={true}\n                                    showNavigation={false}\n                                    showFixedNumberOfWeeks={false}\n                                    tileClassName={({date}) => hasTasks(date) ? 'active' : ''}\n                                    tileContent={<span className=\"bar\"/>}\n                                    onClickDay={date => {\n                                        setSelectedDate(date);\n                                        setOpen(true);\n                                    }}\n                    />\n                    <Backdrop open={open} onClick={() => setOpen(false)} sx={{\n                        backgroundColor: 'transparent',\n                        zIndex: 1000\n                    }}>\n                        <div className={`popup ${open ? 'visible' : ''}`}>\n                            <button className=\"popup_close\" onClick={() => setOpen(false)}>\n                                <i className=\"icon icon-close\"/>\n                            </button>\n                            {selectedDate && hasTasks(selectedDate) && drawTasks(selectedDate)}\n                        </div>\n                    </Backdrop>\n                </CalendarWrapper>\n                <div ref={footerRef}>\n                    <Legend>\n                        {tasksColors.map(({color, cat}) => <LegendItem key={cat} color={color} legend={cat}/>)}\n                    </Legend>\n                </div>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default TaskScheduler;","// styling\nimport {light, dark, textSizes, fonts, colors, flex} from '@styles/vars';\nimport styled from 'styled-components/macro';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ReactSpeedometer from 'react-d3-speedometer';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n  ${flex.center};\n\n  .speedometer {\n    width: 100%;\n\n    text {\n      font-weight: 400 !important;\n      font-family: ${fonts.accent};\n\n      &.current-value {\n        display: none;\n      }\n    }\n  }\n`;\n\nconst BloodTest = () => {\n    const {theme} = useTheme();\n    const {width} = useWindowSize();\n\n    const sizes = () => {\n        switch (true) {\n            case width < 414:\n                return { width: 232, height: 120 };\n            case width >= 414 && width < 1800:\n                return { width: 300, height: 160 };\n            default:\n                case width >= 1800:\n                return { width: 400, height: 220 };\n        }\n    }\n\n    return (\n        <Widget name=\"BloodTest\">\n            <WidgetHeader title=\"Blood test speed\"/>\n            <WidgetBody style={{flexGrow: 1}}>\n                <Wrapper>\n                    <ReactSpeedometer\n                        value={251}\n                        maxValue={1000}\n                        needleColor={light.text}\n                        needleTransitionDuration={2000}\n                        needleHeightRatio={0.8}\n                        segments={80}\n                        startColor={colors.green}\n                        endColor={colors.red}\n                        ringWidth={60}\n                        textColor={theme === 'light' ? light.text : dark.text}\n                        labelFontSize={textSizes['10']}\n                        maxSegmentLabels={10}\n                        valueFormat={'~s'}\n                        forceRender={true}\n                        width={sizes().width}\n                        height={sizes().height}\n                    />\n                </Wrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default BloodTest;","// components\nimport Page from '@layout/Page';\nimport TaskScheduler from '@widgets/TaskScheduler';\nimport PatientsGenderLineChart from '@widgets/PatientsGenderLineChart';\nimport RadarAreaChart from '@widgets/RadarAreaChart';\nimport BloodTest from '@widgets/BloodTest';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\n\nconst DashboardD = () => {\n    return (\n        <>\n        <Sidebar/>\n        <Panel/>\n         <Page title=\"Dashboard\">\n            <div key=\"scheduler\">\n                <TaskScheduler/>\n            </div>\n            <div key=\"gender\">\n                <PatientsGenderLineChart/>\n            </div>\n            <div key=\"radar\">\n                <RadarAreaChart/>\n            </div>\n            <div key=\"blood\">\n                <BloodTest/>\n            </div>\n        </Page>\n        </>\n       \n    )\n}\n\nexport default DashboardD;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from '@styles/vars';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100%;\n  ${flex.col};\n  align-items: center;\n`;\n\nexport const Popup = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg,\n  })};\n  padding: 20px;\n  border-radius: 8px;\n  ${flex.col};\n  gap: 16px;\n  margin: auto;\n  width: calc(100% - 40px);\n  max-width: 320px;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 40px);\n`;\n\nexport const EventsCalendar = styled.div`\n  ${flex.col};\n  gap: 8px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin: 2px;\n  flex-grow: 1;\n\n  .react-calendar {\n    flex-grow: 1;\n    height: 100%;\n\n    &__navigation {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n      border-radius: 8px;\n      min-height: 40px;\n      padding: 10px 22px;\n      display: flex;\n      ${flex.between};\n      font-size: ${textSizes['14']};\n      margin: 0 2px;\n\n      &__label {\n        pointer-events: none;\n      }\n    }\n\n    &__viewContainer {\n      ${flex.col};\n      flex-grow: 1;\n    }\n\n    &__tile {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n\n      .bar {\n        opacity: 0;\n        transition: opacity var(--transition);\n      }\n    }\n\n    &__year-view__months {\n      gap: 20px 0;\n      margin-top: 20px;\n    }\n\n    &__month-view {\n      height: 100%;\n\n      & > div {\n        height: 100%;\n        align-items: stretch;\n      }\n\n      & > div > div {\n        ${flex.col};\n        gap: 8px;\n        justify-content: space-between;\n        height: 100%;\n        padding: 0 24px 20px;\n      }\n\n      &__weekdays {\n        text-transform: uppercase;\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        text-align: center;\n        order: 1;\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        justify-items: center;\n\n        abbr {\n          text-decoration: none;\n        }\n\n        ${breakpoints.mobileL} {\n          gap: 8px;\n\n          &__weekday {\n            width: 40px;\n          }\n        }\n      }\n\n      &__days {\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        grid-gap: 20px 0;\n        justify-items: center;\n\n        &__day {\n          &.active {\n            color: ${colors.blue};\n            cursor: pointer;\n          }\n\n          &:not(&.active) {\n            pointer-events: none;\n          }\n\n          &--neighboringMonth {\n            opacity: .5;\n          }\n        }\n\n        ${breakpoints.mobileL} {\n          grid-gap: 8px;\n\n          &__day {\n            width: 40px;\n            height: 40px;\n            border-radius: 4px;\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            position: relative;\n\n            &.active {\n              color: inherit;\n\n              .bar {\n                opacity: 1;\n                display: block;\n                position: absolute;\n                left: 50%;\n                bottom: 8px;\n                border-radius: 2px;\n                width: 16px;\n                height: 2px;\n                background-color: ${colors.blue};\n                transform: translateX(-50%);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export const y2019 = [\n    {\n        name: 'January',\n        men: 220,\n        women: 350\n    },\n    {\n        name: 'February',\n        men: 185,\n        women: 214\n    },\n    {\n        name: 'March',\n        men: 294,\n        women: 305\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 214\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 288,\n        women: 265\n    },\n    {\n        name: 'July',\n        men: 355,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 218,\n        women: 301\n    },\n    {\n        name: 'September',\n        men: 180,\n        women: 250\n    },\n    {\n        name: 'October',\n        men: 274,\n        women: 145\n    },\n    {\n        name: 'November',\n        men: 387,\n        women: 218\n    },\n    {\n        name: 'December',\n        men: 281,\n        women: 311\n    },\n];\n\nexport const y2020 = [\n    {\n        name: 'January',\n        men: 311,\n        women: 205\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 288\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 511,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 300,\n        women: 220\n    },\n];\n\nexport const y2021 = [\n    {\n        name: 'January',\n        men: 566,\n        women: 309\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 500,\n        women: 600\n    },\n];\n\nexport const y2022 = [\n    {\n        name: 'January',\n        men: 303,\n        women: 260\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 400,\n        women: 350\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 202,\n        women: 140\n    },\n    {\n        name: 'December',\n        men: 70,\n        women: 140\n    },\n];","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport CartesianChart from '@components/CartesianChart';\nimport LegendList from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components'\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport moment from 'moment';\nimport {getMonthArray} from '@utils/dates';\n\n// data placeholder\nimport {y2019, y2020, y2021, y2022} from '@db/gender';\nimport {rgba} from 'polished';\n\nconst PatientsGenderLineChart = () => {\n    const isMobile = useWindowSize().width < 768;\n    const {theme} = useTheme();\n    const periods = ['2019', '2020', '2021', '2022'];\n    const {index, navigate} = useArrayNav(periods);\n\n    // common line props\n    const common = {\n        type:\"monotone\",\n        strokeWidth: 3,\n        dot: false\n    }\n\n    const chartElems = [\n        {\n            ...common,\n            dataKey: \"men\",\n            stroke: colors.azure,\n            activeDot: {r: 4, fill: colors.azure, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.azure, .5)})`\n            }\n        },\n        {\n            ...common,\n            dataKey: \"women\",\n            stroke: colors.peach,\n            activeDot: {r: 4, fill: colors.peach, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.peach, .5)})`\n            }\n        }\n    ];\n\n    const currentData = () => {\n        switch (periods[index]) {\n            case '2019':\n                return y2019\n            case '2020':\n                return y2020\n            case '2021':\n                return y2021\n            default:\n            case '2022':\n                return y2022\n        }\n    }\n\n    const data = currentData();\n\n    return (\n        <Widget name=\"PatientsGenderLineChart\" mobile={400}>\n            <WidgetHeader title=\"Patients gender\" flex=\"column\">\n                <Navigator handler={navigate} text={periods[index]} style={{margin: '0 -22px 0'}} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <Labels>\n                    {\n                        getMonthArray().map(({month}) => (\n                            <div key={moment(month).format('MMM')}>\n                                {isMobile ? moment(month).month() + 1 : moment(month).format('MMM')}\n                            </div>\n                        ))\n                    }\n                </Labels>\n                <CartesianChart variant=\"line\" id=\"patientsGender\" data={data} elems={chartElems} />\n                <LegendList overlay={true}>\n                    <LegendItem color=\"azure\" legend=\"men\" />\n                    <LegendItem color=\"peach\" legend=\"women\" />\n                </LegendList>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsGenderLineChart;","// styling\nimport styled from 'styled-components/macro';\nimport {colors, fonts, textSizes, light, dark, flex, breakpoints} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport Navigator from '@ui/Navigator';\nimport {ResponsiveContainer, RadarChart, PolarGrid, PolarAngleAxis, Radar, Text, Tooltip} from 'recharts';\nimport ChartTooltip from '@components/Chart/Tooltip';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst Container = styled.div`\n  ${flex.col};\n  gap: 14px;\n  justify-content: flex-end;\n  height: 100%;\n\n  .chart {\n    height: 250px;\n    flex-grow: 1;\n    padding: 24px 24px 0;\n  }\n\n  .navigator {\n    margin: 0 2px 2px;\n  }\n  \n  ${breakpoints.mobileL} {\n    .chart {\n      height: 300px;\n    }\n  }\n`;\n\nconst RadarAreaChart = () => {\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n    const {theme} = useTheme();\n    const {width} = useWindowSize();\n\n    const data = [\n        {\n            type: 'diagnostics',\n            value: [40, 54, 65]\n        },\n        {\n            type: 'checkup',\n            value: [70, 22, 46]\n        },\n        {\n            type: 'tests',\n            value: [18, 41, 60]\n        },\n        {\n            type: 'consultation',\n            value: [70, 25, 67]\n        },\n        {\n            type: 'injury',\n            value: [30, 70, 50]\n        },\n        {\n            type: 'viruses',\n            value: [40, 19, 80]\n        }\n    ]\n\n    function renderPolarAngleAxis({payload, x, y, cx, cy, ...rest}) {\n        return (\n            <Text\n                {...rest}\n                verticalAnchor=\"middle\"\n                textAnchor=\"middle\"\n                y={y + (y - cy) / 9}\n                x={x + (x - cx) / 9}\n                fill={theme === 'light' ? light.text : dark.text}\n            >\n                {payload.value}\n            </Text>\n        );\n    }\n\n    return (\n        <Widget name=\"RadarAreaChart\">\n            <Container>\n                <div className=\"chart\">\n                    <ResponsiveContainer height=\"100%\" width=\"100%\">\n                        <RadarChart data={data} outerRadius={width < 414 ? 80: 110} height={250}>\n                            <PolarGrid stroke={theme === 'light' ? colors.light_gray : colors.dark}/>\n                            <PolarAngleAxis dataKey=\"type\"\n                                            tick={props => renderPolarAngleAxis(props)}\n                                            style={{\n                                                textTransform: 'uppercase',\n                                                fontFamily: fonts.accent,\n                                                fontSize: textSizes['10'],\n                                            }}\n                                            cx=\"50%\"\n                                            cy=\"50%\"\n                            />\n                            <Radar dataKey={`value[${index}]`}\n                                   strokeWidth={4}\n                                   stroke={colors.azure}\n                                   fill={colors.azure}\n                                   fillOpacity={0.1}\n                                   activeDot={{r: 4, fill: colors.azure, stroke: colors.azure}}\n                            />\n                            <Tooltip content={<ChartTooltip />} cursor={false}/>\n                        </RadarChart>\n                    </ResponsiveContainer>\n                </div>\n                <Navigator handler={navigate} text={periods[index]} style={{textTransform: 'capitalize'}}/>\n            </Container>\n        </Widget>\n    )\n}\n\nexport default RadarAreaChart;"],"names":["Labels","styled","div","withConfig","componentId","flex","between","fonts","accent","textSizes","periods","_useState","useState","_useState2","_slicedToArray","period","setPeriod","setPeriodIndex","index","MonthSelector","theme","light","bodyBg","dark","colors","blue","col","center","widgetBg","CalendarWrapper","props","top","light_gray","error","gray","breakpoints","mobileL","StyledCalendar","EventsCalendar","scheduler","id","tasks","title","date","moment","type","add","options","doctorsOptions","monthArray","getMonthArray","currentMonth","Date","getMonth","selectedDoctor","setSelectedDoctor","_useState3","start","end","_useState4","selectedRange","setSelectedRange","_useState5","_useState6","selectedDate","setSelectedDate","_useState7","_useState8","open","setOpen","_useState9","_useState10","swiper","setSwiper","headerRef","useRef","footerRef","_useState11","_useState12","height","setHeight","useEffect","current","offsetHeight","handleNavigation","e","realIndex","currentTarget","dataset","direction","slidePrev","slideNext","calendarStart","month","startOf","toDate","calendarEnd","endOf","docTasks","filter","task","value","hasTasks","event","isSame","length","_jsxs","Widget","name","children","_jsx","WidgetHeader","elRef","CustomSelect","variant","changeHandler","WidgetBody","style","display","flexDirection","className","Swiper","slidesPerView","spaceBetween","loop","centeredSlides","onSwiper","initialSlide","map","_ref","monthNumber","format","monthName","isSelected","SwiperSlide","onClick","as","Calendar","locale","activeStartDate","minDate","maxDate","showDoubleView","showNavigation","showFixedNumberOfWeeks","tileClassName","_ref2","tileContent","onClickDay","Backdrop","sx","backgroundColor","zIndex","concat","color","tasksColors","find","cat","Badge","nanoid","ref","Legend","_ref3","LegendItem","legend","Wrapper","useTheme","width","useWindowSize","sizes","flexGrow","ReactSpeedometer","maxValue","needleColor","text","needleTransitionDuration","needleHeightRatio","segments","startColor","green","endColor","red","ringWidth","textColor","labelFontSize","maxSegmentLabels","valueFormat","forceRender","_Fragment","Sidebar","Panel","Page","TaskScheduler","PatientsGenderLineChart","RadarAreaChart","BloodTest","Container","highlight","y2019","men","women","y2020","y2021","y2022","isMobile","_useArrayNav","useArrayNav","navigate","common","strokeWidth","dot","chartElems","_objectSpread","dataKey","stroke","azure","activeDot","r","fill","rgba","peach","data","currentData","mobile","Navigator","handler","margin","padding","overflow","CartesianChart","elems","LegendList","overlay","_excluded","usePeriodNav","ResponsiveContainer","RadarChart","outerRadius","PolarGrid","PolarAngleAxis","tick","payload","x","y","cx","cy","rest","_objectWithoutProperties","Text","verticalAnchor","textAnchor","renderPolarAngleAxis","textTransform","fontFamily","fontSize","Radar","fillOpacity","Tooltip","content","ChartTooltip","cursor"],"sourceRoot":""}