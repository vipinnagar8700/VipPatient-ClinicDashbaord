{"version":3,"file":"static/js/262.c70b4f18.chunk.js","mappings":"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","sources":["UI/IconLink/index.jsx","UI/Navigator/MonthNavigator/index.jsx","UI/SearchBar/index.jsx","components/TestItem/style.js","components/TestItem/index.jsx","constants/options.js","db/patient_tests.js","widgets/PatientsTests/style.js","widgets/PatientsTests/index.jsx","pages/Tests.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, textSizes} from '@styles/vars';\nimport {darken} from 'polished';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Link = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  font-size: ${textSizes['14']};\n  color: ${colors.blue};\n  line-height: 1;\n  transition: color var(--transition);\n  width: fit-content;\n  \n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &:hover, &:focus {\n    color: ${darken(0.1, colors.blue)};\n  }\n\n  .icon {\n    font-size: ${textSizes['12']};\n    color: ${colors.gray};\n  }\n`\n\nconst IconLink = ({href = '#', title}) => {\n    return (\n        <Link href={href}>\n            <i className=\"icon icon-link\"></i>\n            <span>{title}</span>\n        </Link>\n    )\n}\n\nIconLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    href: PropTypes.string\n}\n\nexport default IconLink;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst MonthNavigator = ({state, handler, loop = true}) => {\n\n    const navigate = e => {\n        const direction = e.currentTarget.dataset.direction;\n        let current = state.number;\n\n        if (direction === 'prev') {\n            current !== 0 ? current-- : current = 11;\n        } else {\n            current !== 11 ? current++ : current = 0;\n        }\n        handler(prevState => {\n            return {...prevState, number: current}\n        });\n\n        let currentMonth = new Date().getMonth(),\n            prevMonth = currentMonth - 1,\n            nextMonth = currentMonth + 1;\n\n        let label = '';\n        const dateObj = new Date(2022, current, 1);\n\n        if (current === currentMonth) {\n            label = 'This month'\n        } else if (current === prevMonth) {\n            label = 'Previous month';\n        } else if (current === nextMonth) {\n            label = 'Next month';\n        } else {\n            label = dateObj.toLocaleString('en-US', {month: 'long'})\n        }\n        handler(prevState => {\n            return {...prevState, label: label}\n        });\n    }\n\n    return (\n        <Navigator handler={navigate}\n                   text={state.label}\n                   prevDisabled={!loop && state.number === 0}\n                   nextDisabled={!loop && state.number === new Date().getMonth()}\n        />\n    )\n}\n\nMonthNavigator.propTypes = {\n    state: PropTypes.shape(\n        {\n            number: PropTypes.number.isRequired,\n            label: PropTypes.string.isRequired\n        }).isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default MonthNavigator;","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, textSizes, colors, fonts, breakpoints} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst SearchBarForm = styled.form`\n  height: 40px;\n  margin: 0 24px;\n  border-radius: 8px;\n  padding: 0 22px;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  \n  ${breakpoints.tablet} {\n    height: 60px;\n    margin: 0 2px;\n  }\n  \n  label {\n    font-size: ${textSizes['12']};\n    margin-right: 24px;\n    color: ${colors.gray};\n  }\n  \n  input {\n    width: 100%;\n    font-size: ${textSizes['16']};\n    font-family: ${fonts.accent};\n    &::placeholder {\n      color: ${light.text};\n    }\n  }\n  \n  button[type=\"reset\"] {\n    opacity: 0;\n    transition: opacity var(--transition);\n    \n    &.visible {\n        opacity: 1;\n    }\n  }\n`\n\nconst SearchBar = ({placeholder, handler, value}) => {\n    const window = useWindowSize();\n    const isMobile = window.width < 767.98;\n\n    const handleReset = () => handler('');\n\n    return (\n        <SearchBarForm action=\"#\" method=\"get\">\n            <label className=\"search_bar-label\" htmlFor=\"widgetSearch\">\n                <i className=\"icon icon-search\"></i>\n            </label>\n            <input type=\"search\"\n                   id=\"widgetSearch\"\n                   value={value}\n                   placeholder={!isMobile ? placeholder : 'Search'}\n                   onChange={e => handler(e.target.value)} />\n            <button className={value !== '' ? 'visible' : ''} type=\"reset\" onClick={handleReset}>\n                <i className=\"icon icon-close\" />\n            </button>\n        </SearchBarForm>\n    )\n}\n\nSearchBar.propTypes = {\n    placeholder: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default SearchBar;","import styled from 'styled-components/macro';\nimport {colors, dark, breakpoints, effects, flex, fonts, light, textSizes} from '@styles/vars';\nimport theme from 'styled-theming';\n\nexport const ListItem = styled.li`\n  ${flex.col};\n  padding: 20px;\n  gap: 20px;\n  border-radius: 8px;\n  background-color: ${theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n  })};\n  transform-origin: center center;\n  will-change: transform;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  ${flex.between};\n  border-bottom: ${theme('theme', {\n    light: effects.dashedLight,\n    dark: effects.dashedDark\n  })};\n  padding-bottom: 20px;\n  gap: 20px;\n`;\n\nexport const Main = styled.div`\n  ${flex.col};\n  gap: 20px;\n\n  .info {\n    ${flex.col};\n    gap: 10px;\n\n    .title {\n      font-weight: 500;\n    }\n\n    .timestamp {\n      font-size: ${textSizes['12']};\n      font-family: ${fonts.accent};\n    }\n  }\n  \n  ${breakpoints.tablet} {\n    flex-direction: row;\n    ${flex.between};\n  }\n`;\n\nexport const Button = styled.button`\n  height: 40px;\n  border-radius: 20px;\n  background-color: ${theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n  })};\n  color: ${theme('theme', {\n    light: colors.blue,\n    dark: '#fff'\n  })};\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  padding: 0 25px;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n  }\n`;","// styled components\nimport {ListItem, Main, Header, Button} from '@components/TestItem/style';\n\n// components\nimport IconLink from '@ui/IconLink';\nimport MenuDots from '@ui/MenuDots';\nimport {motion, AnimatePresence} from 'framer-motion';\n\n// utils\nimport moment from 'moment';\nimport {fadePresence} from '@constants/framer';\n\nconst TestItem = ({data}) => {\n    const {doctor, title, date} = data;\n\n    return (\n        <AnimatePresence>\n            <ListItem as={motion.div} {...fadePresence}>\n                <Header>\n                    <IconLink title={`Dr. ${doctor}`}/>\n                    <MenuDots/>\n                </Header>\n                <Main>\n                    <div className=\"info\">\n                        <span className=\"title\">{title}</span>\n                        <span className=\"timestamp\">{moment(date).format('hh:mm A')}</span>\n                    </div>\n                    <Button>View result</Button>\n                </Main>\n            </ListItem>\n        </AnimatePresence>\n    )\n}\n\nexport default TestItem;","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","import moment from 'moment';\n\nexport const patient_tests = [\n    {\n        id: 'LRmwlkTmRiv',\n        type: \"blood\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'EDkfK2u',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Adam Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: '97SbXo',\n        type: \"blood\",\n        date: moment().subtract(3, 'hour'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Hepatitis B surface antigen\"\n    },\n    {\n        id: 'RYXnQSf',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'VeOJuSBvq',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: 'aN6wcKSaUMgY',\n        type: \"mri\",\n        date: moment(),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'ukMuBJSL',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'wMch17',\n        type: \"ct\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'pkMHKe',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: '5EkV9OZ',\n        type: \"xray\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'vYMB5V564wE',\n        type: \"ecg\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'WdUbK4OW4Vn',\n        type: \"mri\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'kLYqsk',\n        type: \"mri\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'IftpHTw4p',\n        type: \"xray\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'oCnZPQKY',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: 'Y4RjFwyJn3y',\n        type: \"ct\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'JojvuH7',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'Si1B9W',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: '6zXfLNFdo',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'nPE75vNSE1Ya',\n        type: \"ecg\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'hEUJrTG',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'WCHC85b2on2',\n        type: \"ct\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: '0zVMPZO8s',\n        type: \"blood\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'g0ral9eA',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herbert Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: 'SyUtrFzCKe',\n        type: \"xray\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'NjQR8EIcGBR',\n        type: \"ultrasound\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n];","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, breakpoints, flex, light} from '@styles/vars';\n\nexport const Header = styled.div`\n  margin-bottom: 20px;\n  ${flex.col};\n  gap: 20px;\n  \n  .wrapper {\n    padding: 20px 24px 0;\n    ${flex.col};\n    gap: 20px;\n    \n    .navigator {\n      background-color: ${theme('theme', {\n        light: light.highlight,\n        dark: dark.highlight\n      })};\n    }\n  }\n  \n  ${breakpoints.tablet} {\n    .wrapper {\n      flex-direction: row;\n        ${flex.between};\n      \n      .navigator {\n        width: 250px;\n      }\n    }\n  }\n`;\n\nexport const List = styled.div`\n  padding: 0 24px 20px;\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: minmax(0, 1fr);\n  \n  ${breakpoints.laptopL} {\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n  }\n`;","// styled components\nimport {List, Header} from '@widgets/PatientsTests/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport CustomSelect from '@ui/Select';\nimport MonthNavigator from '@ui/Navigator/MonthNavigator';\nimport SearchBar from '@ui/SearchBar';\nimport TestItem from '@components/TestItem';\nimport GroupSeparator from '@ui/GroupSeparator';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\n\n// utils\nimport {testsOptions} from '@constants/options';\nimport moment from 'moment';\n\n// hooks\nimport {useEffect, useRef, useState} from 'react';\n\n// data placeholder\nimport {patient_tests} from '@db/patient_tests';\n\nconst PatientsTests = () => {\n    const contentRef = useRef(null);\n    const currentMonth = new Date().getMonth();\n    const [category, setCategory] = useState(testsOptions[0]);\n    const [month, setMonth] = useState({label: 'This month', number: currentMonth});\n    const [search, setSearch] = useState('');\n    const uniqueDates = [...new Set(patient_tests.map(item => moment(item.date).format('DD MMM YYYY')))];\n\n    const filteredTests = patient_tests.filter(test => {\n        const testDate = new Date(test.date);\n        const testMonth = testDate.getMonth();\n        const testName = test.title.toLowerCase();\n        const testCategory = test.type.toLowerCase();\n        const doctorName = test.doctor.toLowerCase();\n        const queryMatch = testName.includes(search.toLowerCase()) || doctorName.includes(search.toLowerCase());\n        const categoryMatch = category.value === 'all' || testCategory === category.value;\n\n        return (\n            testMonth === month.number\n            && queryMatch\n            && categoryMatch\n        );\n    })\n\n    const drawTests = () => {\n        return uniqueDates.map(date => {\n            const tests = filteredTests.filter(test => moment(test.date).format('DD MMM YYYY') === date);\n            const isToday = moment(date).isSame(new Date(), 'day');\n\n            return (\n                tests.length !== 0 && new Date(date).getMonth() === month.number && (\n                    <div key={date}>\n                        <GroupSeparator text={isToday ? 'Today\\'s visit' : date}/>\n                        <List>\n                            {tests.map(test => <TestItem key={`${test.id}-${search}-${category.value}`} data={test}/>)}\n                        </List>\n                    </div>\n                )\n            )\n        })\n    }\n\n    useEffect(() => {\n        contentRef.current?.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    }, [month, search])\n\n    return (\n        <Widget name=\"PatientsTests\">\n            <Header>\n                <div className=\"wrapper\">\n                    <CustomSelect options={testsOptions}\n                                  variant=\"minimal\"\n                                  value={category}\n                                  changeHandler={e => setCategory(e)}\n                    />\n                    <MonthNavigator state={month} handler={setMonth} loop={false}/>\n                </div>\n                <SearchBar placeholder=\"Search a doctor or medical test\" handler={setSearch} value={search}/>\n            </Header>\n            <WidgetBody style={{padding: 0}} elRef={contentRef}>\n                {filteredTests.length !== 0 ? drawTests() : <NoDataPlaceholder/>}\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsTests;","// components\nimport Page from '@layout/Page';\nimport Panel from '@layout/Panel';\nimport Sidebar from '@layout/Sidebar';\nimport PatientsTests from '@widgets/PatientsTests';\n\nconst Tests = () => {\n    return (\n        <>\n        <Sidebar/>\n        <Panel/>\n        <Page title=\"Medical Test Results\">\n            <PatientsTests/>\n        </Page>\n        </>\n        \n    )\n}\n\nexport default Tests;"],"names":["Link","styled","a","withConfig","componentId","textSizes","colors","blue","darken","gray","_ref","_ref$href","href","title","_jsxs","children","_jsx","className","state","handler","_ref$loop","loop","Navigator","e","direction","currentTarget","dataset","current","number","prevState","_objectSpread","currentMonth","Date","getMonth","prevMonth","nextMonth","label","dateObj","toLocaleString","month","text","prevDisabled","nextDisabled","SearchBarForm","form","theme","light","bodyBg","dark","breakpoints","tablet","fonts","accent","placeholder","value","isMobile","useWindowSize","width","action","method","htmlFor","type","id","onChange","target","onClick","ListItem","li","flex","col","highlight","Header","div","between","effects","dashedLight","dashedDark","Main","Button","button","widgetBg","data","doctor","date","AnimatePresence","as","motion","fadePresence","IconLink","concat","MenuDots","moment","format","tasksOptions","depsOptions","testsOptions","doctorsOptions","options","doctors","forEach","push","Avatar","avatar","alt","name","size","patient_tests","subtract","List","laptopL","contentRef","useRef","_useState","useState","_useState2","_slicedToArray","category","setCategory","_useState3","_useState4","setMonth","_useState5","_useState6","search","setSearch","uniqueDates","_toConsumableArray","Set","map","item","filteredTests","filter","test","testMonth","testName","toLowerCase","testCategory","doctorName","queryMatch","includes","categoryMatch","useEffect","_contentRef$current","scrollTo","top","behavior","Widget","CustomSelect","variant","changeHandler","MonthNavigator","SearchBar","WidgetBody","style","padding","elRef","length","tests","isToday","isSame","GroupSeparator","TestItem","NoDataPlaceholder","_Fragment","Sidebar","Panel","Page","PatientsTests"],"sourceRoot":""}