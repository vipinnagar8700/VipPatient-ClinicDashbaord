{"version":3,"file":"static/js/44.2596ac19.chunk.js","mappings":"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","sources":["components/AppointmentsCalendar/DailyNavigation/index.jsx","assets/dashed.svg","assets/dashed_dark.svg","components/AppointmentsCalendar/DoctorPopup/style.js","components/AppointmentsCalendar/DoctorPopup/index.jsx","components/AppointmentsCalendar/Event/index.jsx","components/AppointmentsCalendar/TimeSlot/index.jsx","components/AppointmentsCalendar/DailyToolbar/index.jsx","components/AppointmentsCalendar/WeeklyNavigation/index.jsx","components/AppointmentsCalendar/WeekSelector/index.jsx","components/AppointmentsCalendar/MonthlyNavigation/index.jsx","components/AppointmentsCalendar/MonthSelector/index.jsx","db/calendar_appointments.js","components/AppointmentsCalendar/index.jsx","assets/add.svg","components/AppointmentsCalendar/style.js","utils/numbers.js"],"sourcesContent":["// components\nimport {Wrapper} from '@ui/Navigator/style';\n\n// utils\nimport moment from 'moment/moment';\n\nconst DailyNavigation = ({onNavigate, label, date}) => {\n    const handleDayNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            onNavigate('PREV', date)\n        } else {\n            onNavigate('NEXT', date)\n        }\n    }\n\n    const startOfYear = moment(date).startOf('year').format('YYYY-MM-DD') === moment(date).format('YYYY-MM-DD'),\n        endOfYear = moment(date).endOf('year').format('YYYY-MM-DD') === moment(date).format('YYYY-MM-DD');\n\n    return (\n        <Wrapper className=\"navigator navigator--daily\">\n            <div className=\"arrows\">\n                <button onClick={handleDayNavigation} data-direction=\"prev\" disabled={startOfYear} aria-label=\"Previous date\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handleDayNavigation} data-direction=\"next\" disabled={endOfYear} aria-label=\"Next date\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </div>\n            <div className=\"label\">{label}</div>\n        </Wrapper>\n    )\n}\n\nexport default DailyNavigation;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDashed(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 140,\n    viewBox: \"0 0 2 140\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 0.384615V139.462\",\n    stroke: \"#A2C0D4\",\n    strokeLinecap: \"round\",\n    strokeDasharray: \"3 5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDashed);\nexport default __webpack_public_path__ + \"static/media/dashed.e8807695deb0ac9b5486cdad4debfd42.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDashedDark(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 140,\n    viewBox: \"0 0 2 140\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 0.384615V139.462\",\n    stroke: \"#636D73\",\n    strokeLinecap: \"round\",\n    strokeDasharray: \"3 5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDashedDark);\nexport default __webpack_public_path__ + \"static/media/dashed_dark.5b0662d7b0c867bc981bdd45e49eba46.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components/macro';\nimport {flex, breakpoints, light, colors, textSizes, fonts} from '@styles/vars'\nimport theme from 'styled-theming';\nimport dashed from '@assets/dashed.svg'\nimport dashed_dark from '@assets/dashed_dark.svg'\n\nconst bg = theme('theme', {\n    light: '#fff',\n    dark: '#2a2f32'\n});\n\nexport const Container = styled.div`\n  position: absolute;\n  background: ${bg};\n  box-shadow: 0 1px 16px rgba(20, 46, 110, 0.4);\n  border-radius: 8px;\n  padding: 20px;\n  top: calc(50% + ${props => props.top}px - 40px);\n  left: 50%;\n  transform: translate(-50%, calc(-50% - ${props => props.top / 2}px));\n  width: 260px;\n  transition: opacity var(--transition);\n  opacity: 0;\n  visibility: hidden;\n  margin-left: 32px;\n  \n  ${breakpoints.tablet} {\n    margin-left: 42px;\n    top: calc(50% + ${props => props.top}px - 60px);\n  }\n\n  &.visible {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  .header {\n    display: flex;\n    ${flex.between};\n    gap: 20px;\n\n    .user .user-option {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      span {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        max-width: 100px;\n      }\n    }\n  }\n\n  .main {\n    height: 80px;\n    background: ${theme('theme', {\n        light: `url(${dashed})`,\n        dark: `url(${dashed_dark})`\n    })};\n    position: relative;\n    padding-top: 25px;\n    ${flex.col};\n    gap: 6px;\n\n    &:before, &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      width: 100%;\n      height: 20px;\n      background: ${theme('theme', {\n          light: 'linear-gradient(180deg, rgba(255, 255, 255, 0.5) 0%, #fff 100%)',\n            dark: 'linear-gradient(180deg, rgba(42, 47, 50, 0.5) 0%, #2a2f32 100%)'\n      })};\n    }\n\n    &:before {\n      top: 0;\n      transform: rotate(180deg);\n    }\n\n    &:after {\n      bottom: 0;\n    }\n\n    .track {\n      height: 8px;\n      position: relative;\n      border-radius: 4px;\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: light.text\n      })};\n\n      span {\n        position: absolute;\n        height: 8px;\n        border-radius: 4px;\n        background-color: ${colors.blue};\n        top: 0;\n\n        &:first-of-type {\n          width: 20%;\n          left: 0;\n        }\n\n        &:last-of-type {\n          width: 15%;\n          right: 10%;\n        }\n      }\n    }\n\n    .hours {\n      display: flex;\n      ${flex.between};\n      margin: 0 -10px;\n\n      span {\n        width: 16px;\n        height: 20px;\n        border-radius: 8px;\n        background: ${bg};\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        display: flex;\n        ${flex.center};\n      }\n    }\n  }\n\n  ${breakpoints.tablet} {\n    width: 374px;\n\n    .header {\n      .user .user-option span {\n        max-width: 200px;\n      }\n    }\n  }\n`;","// styled components\nimport { Container } from './style';\n\n// components\nimport ShapeButton from '@ui/ShapeButton';\nimport Btn from '@ui/Btn';\nimport ModalWindow from '@components/ModalWindow';\nimport { Autocomplete, InputLabel, Select, TextField, Typography, Button, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Stack } from '@mui/material';\nimport { Form } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport Url from '../../../url/Allurl'\nimport useContentHeight from '@hooks/useContentHeight';\nimport { GetTypeAppointment } from '@components/Api/AllApi';\n\n\nconst DoctorPopup = ({ name, open, handler, elemsHeight }) => {\n    const [type, setType] = useState(''); // Initialize with appropriate values\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [note, setNote] = useState('');\n    const [appointmentColor, setAppointmentColor] = useState('');\n    const [pro, setPro] = useState({ name: 'Pending' });\n    const todos = useSelector(state => state['todos'].todos);\n    const [isFormVisible, setFormVisible] = useState(false);\n    const [optionsData, setOptions] = useState([]);\n    const [count, setCount] = useState(0)\n    const [ttt, setTTT] = useState(false)\n    const [GetLoc, setGetLoc] = useState(false)\n    const [GetEmpl, setGetEmp] = useState(false)\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const listRef = useRef(null);\n    const height = useContentHeight(headerRef, footerRef);\n    const dataFromLocalStorage = localStorage.getItem(\"provider\");\n\n    // Parse the JSON data back to an object\n    const parsedData = JSON.parse(dataFromLocalStorage);\n\n    // Now, \"parsedData\" will contain the full object with all the properties that were originally present in the `data` object\n    console.log(parsedData, \"AL Data AAAAAAAAAAAAAAAAAAAAA\");\n\n    const ValueID = parsedData.id;\n    const ClinicID = parsedData.company_id;\n\n\n    const [task, setTask] = useState('');\n    const [category, setCategory] = useState(null);\n    const dispatch = useDispatch();\n    const timestamp = Date.now();\n\n    const handleTaskChange = (e) => {\n        setTask(e.target.value);\n    }\n\n    const handleCategoryChange = e => {\n        setCategory(e);\n    }\n\n    const resetForm = () => {\n        setTask('');\n        setCategory(null);\n    }\n\n\n    const handleSubmit = (event) => {\n        let token = Cookies.get(\"clinic\");\n        console.log(token, \"This Is token for all Api's\");\n        event.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Accept\", \"application/json\");\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        var formdata = new FormData();\n        formdata.append(\"id\", \"70\");\n        formdata.append(\"type_id\", type);\n        formdata.append(\"start_date\", startDate);\n        formdata.append(\"end_date\", startDate);\n        formdata.append(\"note\", note);\n        formdata.append(\"appointment_color\", appointmentColor);\n        formdata.append(\"status\", pro.name);\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        };\n\n        return fetch(`${Url}/api/update_appointment_inprovider`, requestOptions)\n            .then((res) => res.json())\n            .then((json) => {\n                console.log(json, \"anjkhgdchjm\");\n                alert(json.messege)\n                window.reload()\n\n            })\n            .catch((e) =>\n                console.log(e)\n            );\n\n    };\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n        GetAllTypeAppointmentData();\n    }, [count]);\n\n\n\n    const GetAllTypeAppointmentData = () => {\n        let TyoeData = GetTypeAppointment()\n        if (TyoeData) {\n            TyoeData.then((data) => {\n                console.log(data.result)\n                setTTT(data.result)\n            })\n        }\n    }\n\n\n\n\n\n    const [selectedDate, setSelectedDate] = useState(null);\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const openModal = (id) => {\n        setIsModalOpen(true);\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n    };\n\n\n\n    return (\n        <ModalWindow isVisible={open} visibilityHandler={handler}>\n            <Container className={open ? 'visible' : ''} top={elemsHeight}>\n                {/* <Form onSubmit={(event) => handleSubmit(event)} >\n\n                    <Typography>Patient Nagar</Typography>\n                    <InputLabel sx={{ margin: 1 }}>Select Status</InputLabel>\n                    <select style={{ width: '100%', padding: 10 }} onChange={(e) => {\n                        setpro({\n                            ...pro, name: e.target.value\n                        })\n                    }}\n                        labelId=\"dropdown-label\"\n                        fullWidth\n                        size='small'\n                        required\n                    >\n\n                        <option value=\"Pending\">Pending</option>\n                        <option value=\"Seen\">Seen</option>\n                        <option value=\"Cancel\">Cancel</option>\n                        <option value=\"Not-Show\">Not-Show</option>\n\n\n                    </select>\n\n\n\n                    <InputLabel sx={{ margin: 1 }}>Type</InputLabel>\n                    <select style={{ width: '100%', padding: 10 }}\n                        labelId=\"dropdown-label\"\n                        fullWidth\n                        size='small'\n                        value={type}\n                        required\n                    >\n                        {\n                            ttt && ttt?.map((data) => {\n                                return (\n\n                                    <option value={data.id}>{data.name}{data.length}</option>\n                                )\n                            })\n                        }\n\n                    </select>\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment Date/Time</InputLabel>\n                    <TextField\n                        // onChange={handleDateChange}\n                        value={startDate}\n                        required\n\n                        type=\"date-local\"\n\n                        placeholder=\"Select Start Date\"\n                        fullWidth size=\"small\"\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment End Date/Time</InputLabel>\n                    <TextField\n                        required\n                        value={endDate}\n\n                        type=\"date-local\"\n\n                        placeholder=\"Select End Date\"\n                        fullWidth size=\"small\"\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Notes</InputLabel>\n                    <TextField size=\"small\" value={note} fullWidth required />\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment Color</InputLabel>\n                    <TextField\n                        size=\"small\"\n                        value={appointmentColor}\n                        fullWidth\n                        required\n\n                        type=\"color\"\n\n                        placeholder=\"#RRGGBB\"\n                    />\n                </Form> */}\n                <Form onSubmit={handleSubmit}>\n                    <Typography>Patient Nagar</Typography>\n                    <InputLabel sx={{ margin: 1 }}>Select Status</InputLabel>\n                    <select\n                        style={{ width: '100%', padding: 10 }}\n                        onChange={(e) => {\n                            setPro({\n                                ...pro,\n                                name: e.target.value\n                            });\n                        }}\n                        labelId=\"dropdown-label\"\n                        fullWidth\n                        size='small'\n                        required\n                    >\n                        <option value=\"pending\">pending</option>\n                        <option value=\"seen\">seen</option>\n                        <option value=\"cancel\">cancel</option>\n                        <option value=\"not-show\">not-show</option>\n                    </select>\n\n                    <InputLabel sx={{ margin: 1 }}>Type</InputLabel>\n                    <select\n                        style={{ width: '100%', padding: 10 }}\n                        labelId=\"dropdown-label\"\n                        fullWidth\n                        size='small'\n                        value={type}\n                        onChange={(e) => setType(e.target.value)}\n                        required\n                    >\n                        {\n                            ttt && ttt?.map((data) => {\n                                return (\n\n                                    <option value={data.id}>{data.name}{data.length}</option>\n                                )\n                            })\n                        }\n                    </select>\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment Date/Time</InputLabel>\n                    <TextField\n                        value={startDate}\n                        onChange={(e) => setStartDate(e.target.value)}\n                        required\n                        type=\"datetime-local\"\n                        placeholder=\"Select Start Date\"\n                        fullWidth\n                        size=\"small\"\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment End Date/Time</InputLabel>\n                    <TextField\n                        value={endDate}\n                        onChange={(e) => setEndDate(e.target.value)}\n                        required\n                        type=\"datetime-local\"\n                        placeholder=\"Select End Date\"\n                        fullWidth\n                        size=\"small\"\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Notes</InputLabel>\n                    <TextField\n                        size=\"small\"\n                        value={note}\n                        onChange={(e) => setNote(e.target.value)}\n                        fullWidth\n                        required\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment Color</InputLabel>\n                    <TextField\n                        size=\"small\"\n                        value={appointmentColor}\n                        onChange={(e) => setAppointmentColor(e.target.value)}\n                        fullWidth\n                        required\n                        type=\"color\"\n                        placeholder=\"#RRGGBB\"\n                    />\n\n                    <Stack direction='row' sx={{ justifyContent: 'space-between', gap: 5, marginTop: '20px' }} gap={4} mt={2}>\n                        <button\n                            style={{ backgroundColor: 'red', padding: 10, color: 'white', borderRadius: 3 }}\n                            onClick={() => window.location.reload()}\n                        >\n                            Cancel\n                        </button>\n\n                        <button style={{ marginLeft: '20px', backgroundColor: 'green', padding: 10, color: 'white', borderRadius: 3 }} type='submit'>Save Change</button>\n                    </Stack>\n                </Form>\n\n\n            </Container>\n        </ModalWindow>\n    )\n}\n\nexport default DoctorPopup;","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { useTheme } from 'styled-components';\nimport useWindowSize from '@hooks/useWindowSize';\nimport { AllAppointmentDetails } from '@components/Api/AllApi';\nimport ModalWindow from '@components/ModalWindow';\n\nconst Event = ({ event, variant }) => {\n    const [appointments, setAppointments] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [hoveredDay, setHoveredDay] = useState(null);\n    const { theme } = useTheme();\n    const isDesktop = useWindowSize().width >= 1280;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const data = await AllAppointmentDetails();\n                console.log(data?.result, \"Appointment Data\");\n                setAppointments(data?.result || []);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    // New state to track which dates have their appointment list expanded\n    const [expandedDates, setExpandedDates] = useState({});\n\n    const formattedTime = (datetimeString) => {\n        const dateObject = new Date(datetimeString);\n        const hours = dateObject.getHours();\n        const minutes = dateObject.getMinutes();\n        const ampm = hours >= 12 ? 'PM' : 'AM';\n        const formattedHours = (hours % 12 || 12).toString().padStart(2, '0');\n        return `${formattedHours}:${minutes.toString().padStart(2, '0')} ${ampm}`;\n    };\n\n    const groupAppointmentsByDay = () => {\n        const groupedAppointments = {};\n        appointments.forEach((appointment) => {\n            const day = moment(appointment.end_date).format('YYYY-MM-DD');\n            if (!groupedAppointments[day]) {\n                groupedAppointments[day] = [];\n            }\n            groupedAppointments[day].push(appointment);\n        });\n        return groupedAppointments;\n    };\n\n    const handleDayMouseEnter = (day) => {\n        setHoveredDay(day);\n    };\n\n    const handleDayMouseLeave = () => {\n        setHoveredDay(null);\n    };\n\n    // Function to toggle the appointment list for a date\n    const toggleAppointmentList = (day) => {\n        setExpandedDates((prevState) => ({\n            ...prevState,\n            [day]: !prevState[day],\n        }));\n    };\n\n    const renderAppointments = () => {\n        const groupedAppointments = groupAppointmentsByDay();\n        return Object.keys(groupedAppointments).map((day) => {\n            const appointmentsForDay = groupedAppointments[day];\n            const shouldShowBadge = appointmentsForDay.length > 2;\n\n            return (\n                <div\n                    key={day}\n                    className={`event event-${variant} ${shouldShowBadge ? 'has-badge' : ''}`}\n                    onMouseEnter={() => handleDayMouseEnter(day)}\n                    onMouseLeave={handleDayMouseLeave}\n                >\n                    <span className=\"event-title\" style={{ direction: 'ltr', color: 'green', fontSize: 12 }}>\n                        {formattedTime(appointmentsForDay[0].end_date)} {appointmentsForDay[0].patient[0].name}{' '}\n                        {appointmentsForDay[0].patient[0].lname}\n                    </span>\n                    {shouldShowBadge && (\n                        <div\n                            className=\"badge\"\n                            onClick={() => toggleAppointmentList(day)} // Add onClick to toggle the list\n                        >\n                            {appointmentsForDay.length}\n                        </div>\n                    )}\n                    {/* Render appointment list if expanded */}\n                    {expandedDates[day] && (\n                        <div className=\"appointment-list\">\n                            {appointmentsForDay.map((appointment, index) => (\n                                <div key={index} className=\"appointment-item\">\n                                    {/* Display appointment details here */}\n                                    <span>{formattedTime(appointment.end_date)}</span>\n                                    <span>\n                                        {appointment.patient[0].name} {appointment.patient[0].lname}\n                                    </span>\n                                    {/* Additional appointment details can be added here */}\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            );\n        });\n    };\n\n    return (\n        <>\n            {renderAppointments()}\n            {/* You can add your modal window code here */}\n        </>\n    );\n};\n\nEvent.propTypes = {\n    event: PropTypes.object.isRequired,\n    variant: PropTypes.oneOf(['day', 'week', 'month']).isRequired,\n};\n\nexport default Event;\n","// utils\nimport {cloneElement} from 'react';\nimport moment from 'moment';\nimport {addZero} from '@utils/numbers';\n\nconst TimeSlot = (props, step, day, isRender) => {\n    const differenceMs = moment() - moment(props.value)\n    const isCurrentTimeSlot = (differenceMs / (60 * 1000)) > 0 && (differenceMs / (60 * 1000)) < step;\n    let hours = new Date().getHours(),\n        minutes = new Date().getMinutes();\n    const currentTime = hours + ':' + addZero(minutes);\n\n    let timeIndicator = {}\n    let addStyle = {}\n\n    function calculateIndicatorPosition() {\n        let minutesFromProps = props.value.getMinutes(),\n            indicatorPosition;\n        switch (minutesFromProps) {\n            default:\n            case 0:\n                indicatorPosition = minutesFromProps + minutes;\n                break;\n            case 30:\n                indicatorPosition = Math.abs(minutesFromProps - minutes);\n                break;\n        }\n        return indicatorPosition;\n    }\n\n    if (isCurrentTimeSlot && isRender) {\n        timeIndicator.className = 'current-time'\n        timeIndicator.children =\n            <span className=\"time-indicator\" style={{top: `${100 / step * calculateIndicatorPosition()}%`}}>\n                <span className=\"label\">{currentTime}</span>\n            </span>\n    }\n\n    return cloneElement(\n        props.children,\n        {\n            style: {...addStyle},\n            'data-time': moment(props.value).format('HH:mm'),\n            ...timeIndicator\n        })\n}\n\nexport default TimeSlot;","const DailyToolbar = ({label}) => {\n    return (\n        <>\n            <h2>{label}</h2>\n        </>\n    )\n}\n\nexport default DailyToolbar;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst WeeklyNavigation = ({date, setter}) => {\n    const calendarWeek = moment(date).week();\n    const currentWeek = moment().week();\n\n    const handleWeekNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'week').startOf('week').toDate());\n        } else {\n            setter(moment(date).add(1, 'week').startOf('week').toDate());\n        }\n    }\n\n    const firstWeek = moment(date).startOf('year').week(),\n        lastWeek = moment(date).endOf('year').week();\n\n    let label;\n    if (currentWeek === calendarWeek) label = 'This week';\n    else if (currentWeek + 1 === calendarWeek) label = 'Next week';\n    else if (currentWeek - 1 === calendarWeek) label = 'Last week';\n    else label = 'Week ' + calendarWeek;\n\n    return (\n        <Navigator handler={handleWeekNavigation}\n                   text={label}\n                   prevDisabled={calendarWeek === firstWeek}\n                   nextDisabled={calendarWeek === lastWeek}/>\n    )\n}\n\nexport default WeeklyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getWeekArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst WeekSelector = ({date, setter}) =>{\n    const options = getWeekArray().map((item, i) => {\n        return {\n            value: i,\n            label: `${item.startLong} - ${item.endLong}`,\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).week() - 1]);\n\n    const handleWeekChange = e => {\n        setSelected(e);\n        setter(moment(date).week(e.value + 1).startOf('week').toDate());\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleWeekChange}/>\n}\n\nexport default WeekSelector;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst MonthlyNavigation = ({date, setter}) => {\n    const calendarMonth = moment(date).month();\n    const currentMonth = moment().month();\n\n    const handleMonthNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'month').toDate());\n        } else {\n            setter(moment(date).add(1, 'month').toDate());\n        }\n    }\n\n    let label;\n    if (currentMonth === calendarMonth) label = 'This month';\n    else if (currentMonth + 1 === calendarMonth) label = 'Next month';\n    else if (currentMonth - 1 === calendarMonth) label = 'Last month';\n    else label = `${moment(date).format('MMMM')}`;\n\n    return (\n        <Navigator handler={handleMonthNavigation}\n                   text={label}\n                   prevDisabled={calendarMonth === 0}\n                   nextDisabled={calendarMonth === 11}/>\n    )\n}\n\nexport default MonthlyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getMonthArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst MonthSelector = ({date, setter}) => {\n    const options = getMonthArray().map(item => {\n        return {\n            value: item.month,\n            label: item.formatted\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).month()]);\n\n    const handleMonthChange = e => {\n        setSelected(e);\n        const month =  moment(e.value).month();\n        setter(moment(date).set({month: month, date: 1}));\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleMonthChange}/>\n}\n\nexport default MonthSelector;","import moment from 'moment';\n\nexport const disabled = [\n    {\n        start: moment().set({ hour: 12, minute: 30, second: 0 }).toDate(),\n        end: moment().set({ hour: 13, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(1, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n        end: moment().add(1, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(1, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n        end: moment().add(1, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(2, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n        end: moment().add(2, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(2, 'day').set({ hour: 12, minute: 30, second: 0 }).toDate(),\n        end: moment().add(2, 'day').set({ hour: 13, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(4, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n        end: moment().add(4, 'day').set({ hour: 15, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n];\n\nexport const events = {\n    doctor: [\n        {\n            name: 'MRI',\n            start: moment().set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Runny nose',\n            start: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Keeping pregnant',\n            start: moment().set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Ultrasound diagnostics',\n            start: moment().set({ hour: 13, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 14, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'EEG',\n            start: moment().set({ hour: 15, minute: 0, second: 0 }).toDate(),\n            end: moment().set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Routine checkup',\n            start: moment().set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'checkup'\n        },\n        {\n            name: 'Blood test',\n            start: moment().add(1, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Family appointment',\n            start: moment().add(1, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Heartache',\n            start: moment().add(1, 'day').set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 12, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n        {\n            name: 'First visit',\n            start: moment().add(1, 'day').set({ hour: 13, minute: 0, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 13, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Gastritis',\n            start: moment().add(2, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Cardio checkup',\n            start: moment().add(2, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'checkup'\n        },\n        {\n            name: 'Stomachache',\n            start: moment().add(2, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 15, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n        {\n            name: 'MRI',\n            start: moment().add(2, 'day').set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 16, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'MRI',\n            start: moment().add(4, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Family appointment',\n            start: moment().add(4, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Keeping pregnant',\n            start: moment().add(4, 'day').set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Runny nose',\n            start: moment().add(4, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Heartache',\n            start: moment().add(4, 'day').set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n    ],\n    patient: {\n        general: [\n            {\n                name: 'Bone Density Scan',\n                start: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n                end: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n                allDay: false,\n                type: 'test'\n            },\n            {\n                name: 'Surgeon consultation',\n                start: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n                end: moment().set({ hour: 11, minute: 0, second: 0 }).toDate(),\n                allDay: false,\n                type: 'consultation'\n            },\n            {\n                name: 'Calcium Blood Test',\n                start: moment().add(1, 'day').set({ hour: 13, minute: 30, second: 0 }).toDate(),\n                end: moment().add(1, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n                allDay: false,\n                type: 'test'\n            },\n        ],\n        disabled: disabled\n    }\n}","// styles\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// styled components\nimport { Container, Header, StyledCalendar, Footer } from './style';\nimport { Container as Tabs, Item, Button } from '@ui/TabNav/style';\n\n// components\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport Event from '@components/AppointmentsCalendar/Event';\nimport TimeSlot from '@components/AppointmentsCalendar/TimeSlot';\nimport DailyToolbar from '@components/AppointmentsCalendar/DailyToolbar';\nimport DailyNavigation from '@components/AppointmentsCalendar/DailyNavigation';\nimport WeeklyNavigation from '@components/AppointmentsCalendar/WeeklyNavigation';\nimport WeekSelector from '@components/AppointmentsCalendar/WeekSelector';\nimport MonthlyNavigation from '@components/AppointmentsCalendar/MonthlyNavigation';\nimport MonthSelector from '@components/AppointmentsCalendar/MonthSelector';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport DoctorPopup from '@components/AppointmentsCalendar/DoctorPopup';\n\n// utils\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { colorTypes } from '@constants/colors';\nimport { doctorsOptions } from '@constants/options';\n\n// hooks\nimport { useState, useRef, useEffect } from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport { events, disabled } from '@db/calendar_appointments';\nimport CustomSelect from '@ui/Select';\nimport { GetAppointmtentREwie } from '@components/Api/AllApi';\n\nconst AppointmentsCalendar = ({ viewChangeHandler, current, type }) => {\n    const width = useWindowSize().width;\n    const localizer = momentLocalizer(moment);\n\n    const footerRef = useRef(null);\n    const headerRef = useRef(null);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        setHeight(headerRef.current.offsetHeight + footerRef.current.offsetHeight);\n    }, [headerRef, footerRef]);\n\n    const options = doctorsOptions();\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    const [post, setPost] = useState(false)\n\n    useEffect(() => {\n\n        const AppShed = GetAppointmtentREwie();\n        if (AppShed) {\n            AppShed.then((data) => {\n                console.log(data, \"App ShedulerA\")\n                setPost(data?.result, \"App ShedulerA\")\n            })\n        }\n\n\n    }, [])\n\n\n    const getDayFormat = () => {\n        switch (true) {\n            case width < 768:\n                return 'D';\n            case width < 1600:\n                return 'ddd, D';\n            default:\n                return 'dddd D MMMM';\n        }\n    }\n\n    const [currentDate, setCurrentDate] = useState(moment().toDate());\n    const views = ['month', 'week', 'day'];\n    const Navigation = () => {\n        return (\n            <Tabs className=\"tabs\">\n                {\n                    views.map(view => {\n                        return (\n                            <Item key={view}>\n                                <Button className={current === view ? 'active' : null}\n                                    onClick={() => viewChangeHandler(view)}>\n                                    {view}\n                                </Button>\n                            </Item>\n                        )\n                    })\n                }\n            </Tabs>\n        )\n    }\n\n    const handleNavigation = (action, date) => {\n        switch (action) {\n            case 'NEXT':\n                setCurrentDate(moment(currentDate).add(1, 'day').toDate());\n                break;\n            case 'PREV':\n                setCurrentDate(moment(currentDate).subtract(1, 'day').toDate());\n                break;\n            default:\n                setCurrentDate(date);\n        }\n    }\n\n    const handleDayClick = (date) => {\n        setCurrentDate(date);\n        viewChangeHandler('day');\n    }\n\n    const config = {\n        as: Calendar,\n        localizer: localizer,\n        startAccessor: 'start',\n        endAccessor: 'end',\n        views: views,\n        view: current,\n        date: currentDate,\n        onView: viewChangeHandler,\n        onNavigate: handleNavigation,\n        onDrillDown: (date) => handleDayClick(date),\n        events: type === 'doctor' ? events['doctor'] : current === 'day' ? events['patient'].general : events['patient'].disabled,\n        backgroundEvents: type === 'doctor' ? disabled : [],\n        min: moment().startOf('year').set({ hour: 9, minute: 30 }).toDate(),\n        max: moment().endOf('year').set({ hour: 16, minute: 30 }).toDate(),\n        timeslots: 1,\n        step: 30,\n        formats: {\n            dayHeaderFormat: width < 414 ? 'dddd, MMM DD' : 'dddd, MMMM DD',\n            dayFormat: getDayFormat(),\n            timeGutterFormat: 'HH:mm',\n        },\n        components: {\n            toolbar: ({ label, date }) =>\n                <Header ref={headerRef} view={current}>\n                    {current === 'day' &&\n                        <DailyToolbar label={type === 'doctor' ? label : 'Daily appointments scheduler'} />}\n                    <Navigation />\n                    {current === 'day' && <DailyNavigation onNavigate={handleNavigation} date={date} label={label} />}\n                    {current === 'week' && (\n                        <>\n\n                            <WeekSelector date={date} setter={setCurrentDate} />\n                            {/* <DocSelect /> */}\n                            <WeeklyNavigation date={date} setter={setCurrentDate} />\n                        </>\n                    )}\n                    {current === 'month' && (\n                        <>\n                            <MonthSelector date={date} setter={setCurrentDate} />\n                            <MonthlyNavigation date={date} setter={setCurrentDate} />\n                        </>\n                    )}\n                </Header>,\n            event: ({ event }) => <Event event={event} variant={current} />,\n            timeSlotWrapper: (props) => TimeSlot(props, 30, 1, true),\n        },\n        className: `calendar-${current} calendar-${type}`,\n        messages: {\n            showMore: (total) => `+ ${total}`,\n        },\n        popup: true,\n        selectable: type === 'patient' && current !== 'day',\n        onSelectSlot: type === 'patient' && current !== 'day' && (() => setPopupOpen(true))\n    }\n\n    return (\n        <>\n            <Container>\n                <StyledCalendar {...config} />\n                {\n                    type === 'patient' && current !== 'day' &&\n                    <DoctorPopup elemsHeight={height} name={selectedDoctor.label || null} open={popupOpen}\n                        handler={setPopupOpen} />\n                }\n            </Container>\n            <Footer ref={footerRef}>\n                <Legend>\n                    {\n                        colorTypes.map(({ cat, color, label }) => {\n                            return (\n                                <LegendItem key={cat} color={color} legend={label} />\n                            )\n                        })\n                    }\n                </Legend>\n            </Footer>\n        </>\n    )\n}\n\nAppointmentsCalendar.propTypes = {\n    type: PropTypes.oneOf(['doctor', 'patient']).isRequired,\n}\n\nexport default AppointmentsCalendar;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAdd(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#2662F0\",\n    d: \"M232 344V280H168C154.7 280 144 269.3 144 256C144 242.7 154.7 232 168 232H232V168C232 154.7 242.7 144 256 144C269.3 144 280 154.7 280 168V232H344C357.3 232 368 242.7 368 256C368 269.3 357.3 280 344 280H280V344C280 357.3 269.3 368 256 368C242.7 368 232 357.3 232 344zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.be44164966837f502be564a65704d0f9.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components/macro';\nimport {flex, colors, textSizes, dark, light, fonts, breakpoints} from '@styles/vars';\nimport theme from 'styled-theming';\nimport add from '@assets/add.svg';\n\nconst borderColor = theme('theme', {\n    light: '#DCE2E8',\n    dark: '#25292D'\n});\n\nconst navColor = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n});\n\nconst labelColor = theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n});\n\n// Calendar container\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  flex-grow: 1;\n  position: relative;\n`\n\n// Calendar header\nexport const Header = styled.div`\n  padding: 20px 24px 0;\n  ${flex.col};\n  gap: 20px;\n\n  .navigator {\n    margin: 0 0 20px;\n    background-color: ${navColor};\n\n    .label {\n      font-size: ${textSizes['12']};\n    }\n\n    &--daily {\n      margin: 0 -22px;\n      display: flex;\n      align-items: center;\n      gap: 0;\n      padding: 0;\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n\n      .arrows {\n        width: 63px;\n        gap: 8px;\n      }\n\n      .label {\n        flex-grow: 1;\n        border-left: 1px solid ${borderColor};\n        height: 100%;\n      }\n\n      .arrows, .label {\n        display: flex;\n        ${flex.center};\n      }\n\n      ${breakpoints.tablet} {\n        .arrows {\n          width: 83px;\n        }\n      }\n    }\n  }\n\n  ${breakpoints.tablet} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    ${flex.between};\n\n    .tabs {\n      order: ${props => props.view !== 'day' && 2};\n    }\n\n    .select-user,\n    .select-basic,\n    .tabs {\n      width: 300px;\n    }\n\n    .navigator {\n      flex-grow: 1;\n      width: 100%;\n      order: ${props => props.view !== 'day' && 3};\n      height: ${props => props.view === 'day' && 60}px;\n\n      ${breakpoints.tablet} {\n        .label {\n          font-size: ${textSizes['14']};\n        }\n      }\n    }\n  };\n\n  ${breakpoints.laptop} {\n    margin-bottom: ${props => props.view !== 'day' && 20}px;\n\n    .navigator {\n      width: ${props => props.view !== 'day' && '200px'};\n      flex-grow: ${props => props.view !== 'day' && 'unset'};\n      margin-bottom: 0;\n    }\n\n    .tabs {\n      margin-left: auto;\n    }\n  }\n\n`;\n\n// Calendar footer (legend)\nexport const Footer = styled.div`\n  padding: 20px 24px;\n`;\n\n// Time gutter (time) labels\nconst labelStyle = `\n${flex.col};\n${flex.center};\nfont-size: ${textSizes['10']};\nfont-family: ${fonts.accent};\nheight: 20px;\nwidth: 47px;\nmargin: 0 auto;\nborder-radius: 8px;\n`;\n\n\n// Main styling wrapper for the calendar\nexport const StyledCalendar = styled.div`\n  flex-grow: 1;\n\n  ${props => props.view === 'day' && `\n    .rbc-time-header {\n        display: none;\n    }\n    .rbc-day-slot .rbc-timeslot-group .current-time .time-indicator {\n        left: -64px !important;\n        width: calc(100% + 64px) !important;\n    }\n    \n    ${breakpoints.tablet} {\n         .rbc-day-slot .rbc-timeslot-group .current-time .time-indicator {\n        left: -84px !important;\n        width: calc(100% + 84px) !important;\n    }\n    }\n  `}\n    // hide the time indicator for the week/month view\n  &.calendar-week,\n  &.calendar-month {\n    .current-time {\n      display: none !important;\n    }\n  }\n\n  // week view\n\n  &.calendar-week {\n    &.calendar-patient .rbc-time-column {\n      cursor: pointer;\n    }\n\n    .rbc {\n      &-event-content {\n        ${flex.col};\n        ${flex.center};\n      }\n\n      &-time-header-gutter {\n        width: 65px !important;\n        max-width: 65px !important;\n        min-width: 65px !important;\n      }\n\n      &-time-content {\n        border-top: 1px dashed ${borderColor};\n        padding-top: 0;\n        margin-top: 20px;\n      }\n\n      &-header {\n        font-size: ${textSizes['12']};\n      }\n\n      ${breakpoints.tablet} {\n        &-header {\n          font-size: ${textSizes['14']};\n        }\n\n        &-time-header-gutter {\n          width: 85px !important;\n          max-width: 85px !important;\n          min-width: 85px !important;\n        }\n      }\n    }\n  }\n\n  // month view\n\n  &.calendar-month {\n    &.calendar-patient {\n      .rbc-day-bg {\n        background: url(${add}) no-repeat center center / 16px 16px;\n      }\n\n      .rbc-month-row {\n        cursor: pointer;\n      }\n    }\n\n    .rbc {\n      &-month-header {\n        margin: 0 2px;\n        height: 40px;\n        border-radius: 8px;\n        overflow: hidden;\n        background-color: ${theme('theme', {\n          light: light.bodyBg,\n          dark: dark.bodyBg\n        })};\n\n        .rbc-header {\n          ${flex.col};\n          ${flex.center};\n          line-height: 1;\n          font-weight: 400;\n          font-size: ${textSizes['12']};\n          border-bottom: none;\n\n          & + .rbc-header {\n            border-color: ${borderColor};\n          }\n        }\n\n        ${breakpoints.tablet} {\n          .rbc-header {\n            font-size: ${textSizes['14']};\n          }\n\n          height: 60px;\n        }\n      }\n\n      &-month-row {\n        margin: 0 2px;\n\n        + .rbc-month-row,\n        .rbc-day-bg + .rbc-day-bg {\n          border-color: ${borderColor};\n        }\n\n        .rbc {\n          &-row-content {\n            flex-grow: 1;\n          }\n\n          &-date-cell {\n            font-family: ${fonts.accent};\n            font-size: ${textSizes['10']};\n            padding: 5px;\n            text-align: center;\n\n            &.rbc-now {\n              color: ${theme('theme', {\n                light: colors.blue,\n                dark: '#fff'\n              })};\n            }\n          }\n\n          &-row .event {\n            margin: 0 auto;\n          }\n\n          &-off-range-bg {\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            background-image: none;\n          }\n        }\n      }\n\n      &-show-more {\n        background-color: ${colors.blue};\n        font-size: ${textSizes['10']};\n        color: #fff;\n        font-family: ${fonts.accent};\n        font-weight: 400;\n        padding: 6px;\n        border-radius: 50%;\n        margin: 4px auto 0;\n      }\n    }\n\n    ${breakpoints.tablet} {\n      .rbc {\n        &-month-row .rbc-date-cell {\n          padding: 10px;\n          text-align: right;\n          font-size: ${textSizes['12']};\n        }\n      }\n    }\n\n    ${breakpoints.laptopL} {\n      .rbc {\n        &-show-more {\n          width: 100%;\n          border-radius: 4px;\n          margin: 2px 0 0;\n        }\n      }\n    }\n  }\n\n  .rbc {\n    &-time-view,\n    &-month-view {\n      padding-bottom: 11px;\n      border: none;\n    }\n\n    &-time-view {\n      margin: 0 2px;\n      width: auto;\n    }\n\n    &-month-view {\n      flex: 1;\n      min-height: 670px;\n    }\n\n    &-time-content {\n      border: none;\n      width: unset;\n      padding-top: 20px;\n      overflow: visible;\n      height: 100%;\n      align-items: stretch;\n\n      .rbc-time-gutter:first-of-type {\n        border-top: 1px ${borderColor} dashed;\n      }\n\n      & > * + * > * {\n        border-left: 1px ${borderColor} solid !important;\n        border-right: none !important;\n      }\n    }\n\n    &-time-gutter {\n      width: 63px;\n      position: relative;\n\n      &:before {\n        ${labelStyle};\n        content: '16:30';\n        position: absolute;\n        bottom: -10px;\n        left: 8px;\n        background-color: ${labelColor};\n      }\n\n      .time-indicator {\n        display: none;\n      }\n\n      ${breakpoints.tablet} {\n        width: 83px !important;\n        &:before {\n          left: 18px;\n        }\n      }\n    }\n\n    &-event-content {\n      backface-visibility: visible;\n    }\n\n    &-time-header {\n      border-radius: 8px;\n      overflow: hidden;\n      height: 40px;\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n\n      &.rbc-overflowing {\n        border: none;\n      }\n\n      &-cell {\n        height: 100%;\n      }\n\n      &-content {\n        border-color: ${borderColor};\n        margin-left: -2px;\n      }\n\n      .rbc-allday-cell {\n        display: none;\n      }\n\n      .rbc-header {\n        ${flex.col};\n        justify-content: center;\n        border-bottom: none;\n\n        & + .rbc-header {\n          border-color: ${borderColor};\n        }\n\n        &.rbc-today {\n          background-color: ${light.text};\n          color: #fff;\n        }\n      }\n\n      ${breakpoints.tablet} {\n        height: 60px;\n      }\n    }\n\n    &-today,\n    &-off-range-bg {\n      background-color: transparent;\n    }\n\n    &-events-container {\n      margin: 0;\n    }\n\n    &-time-slot {\n      min-height: 40px;\n\n      .rbc-label {\n        ${labelStyle};\n        position: relative;\n        top: -10px;\n        background-color: ${labelColor};\n      }\n    }\n\n    &-timeslot-group {\n      position: relative;\n\n      .current-time {\n        &:before {\n          content: attr(data-time);\n          ${labelStyle};\n          position: relative;\n          top: -10px;\n        }\n\n        .time-indicator {\n          .label {\n            ${labelStyle};\n            color: #fff;\n            box-shadow: 0 1px 8px rgba(38, 98, 240, 0.4);\n          }\n        }\n      }\n\n      &:last-of-type {\n        border: none;\n\n        .rbc-time-slot {\n          border: none;\n        }\n      }\n    }\n\n    &-day-slot {\n      &:before {\n        content: '';\n        display: block;\n        position: absolute;\n        left: 0;\n        height: 20px;\n        top: -20px;\n        border-left: 1px solid ${borderColor};\n      }\n\n      .rbc-time-slot {\n        border: none;\n      }\n\n      .rbc-timeslot-group {\n        .current-time {\n          position: relative;\n          height: 40px;\n\n          &:before {\n            display: none;\n          }\n\n          .time-indicator {\n            top: 14%;\n            display: block;\n            height: 1px;\n            background-color: ${colors.blue};\n            position: absolute;\n            z-index: 10;\n            left: 0;\n            width: 100%;\n            transition: top 0.3s ease;\n\n            .label {\n              position: absolute;\n              left: 8px;\n            }\n\n            ${breakpoints.tablet} {\n              .label {\n                left: 18px;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    &-event {\n      border: none;\n      border-radius: 0;\n      padding: 0;\n      background: transparent;\n      outline: none;\n\n      &-label {\n        display: none !important;\n      }\n    }\n\n    &-background-event {\n      padding: 0;\n      pointer-events: none;\n      background-color: transparent;\n      border: none;\n    }\n\n    &-current-time-indicator {\n      display: none;\n    }\n  }\n\n\n  .rbc-timeslot-group {\n\n\n    .current-time {\n\n\n      .time-indicator, .time-indicator .label {\n        position: absolute;\n      }\n\n      .time-indicator .label {\n        background-color: ${colors.blue};\n        top: 50%;\n        left: 20px;\n        transform: translateY(-50%);\n      }\n    }\n  }\n\n\n  .rbc-timeslot-group {\n    border-bottom: 1px dashed ${theme('theme', {\n      light: '#DCE2E8',\n      dark: '#25292D'\n    })};\n  }\n\n`;\n","export function numFormatter(num) {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(1) + 'k';\n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(1) + 'm';\n    } else if (num < 900) {\n        return num;\n    }\n}\n\nexport function addZero(num) {\n    return num < 10 ? '0' + num : num;\n}"],"names":["_ref","onNavigate","label","date","handleDayNavigation","e","currentTarget","dataset","direction","startOfYear","moment","startOf","format","endOfYear","endOf","_jsxs","Wrapper","className","children","_jsx","onClick","disabled","bg","theme","light","dark","Container","styled","div","withConfig","componentId","props","top","breakpoints","tablet","flex","between","concat","dashed","dashed_dark","col","bodyBg","text","colors","blue","textSizes","fonts","accent","center","name","open","handler","elemsHeight","_useState","useState","_useState2","_slicedToArray","type","setType","_useState3","_useState4","startDate","setStartDate","_useState5","_useState6","endDate","setEndDate","_useState7","_useState8","note","setNote","_useState9","_useState10","appointmentColor","setAppointmentColor","_useState11","_useState12","pro","setPro","_useState13","useSelector","state","todos","_useState14","_useState15","_useState16","_useState17","_useState18","count","_useState19","_useState20","ttt","setTTT","_useState21","_useState22","_useState23","_useState24","headerRef","useRef","footerRef","dataFromLocalStorage","useContentHeight","localStorage","getItem","parsedData","JSON","parse","console","log","id","company_id","_useState25","_useState26","_useState27","_useState28","useDispatch","Date","now","useEffect","GetAllTypeAppointmentData","TyoeData","GetTypeAppointment","then","data","result","_useState29","_useState30","_useState31","_useState32","ModalWindow","isVisible","visibilityHandler","Form","onSubmit","event","token","Cookies","get","preventDefault","myHeaders","Headers","append","formdata","FormData","requestOptions","method","headers","body","redirect","fetch","Url","res","json","alert","messege","window","reload","catch","Typography","InputLabel","sx","margin","style","width","padding","onChange","_objectSpread","target","value","labelId","fullWidth","size","required","map","length","TextField","placeholder","Stack","justifyContent","gap","marginTop","mt","backgroundColor","color","borderRadius","location","marginLeft","variant","appointments","setAppointments","setHoveredDay","useTheme","useWindowSize","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","AllAppointmentDetails","sent","t0","error","stop","apply","arguments","expandedDates","setExpandedDates","formattedTime","datetimeString","dateObject","hours","getHours","minutes","getMinutes","ampm","formattedHours","toString","padStart","handleDayMouseLeave","_Fragment","groupedAppointments","forEach","appointment","day","end_date","push","groupAppointmentsByDay","Object","keys","appointmentsForDay","shouldShowBadge","onMouseEnter","handleDayMouseEnter","onMouseLeave","fontSize","patient","lname","prevState","_defineProperty","toggleAppointmentList","index","renderAppointments","step","isRender","differenceMs","isCurrentTimeSlot","currentTime","addZero","timeIndicator","indicatorPosition","minutesFromProps","Math","abs","calculateIndicatorPosition","cloneElement","setter","calendarWeek","week","currentWeek","firstWeek","lastWeek","Navigator","subtract","toDate","add","prevDisabled","nextDisabled","options","getWeekArray","item","i","startLong","endLong","selected","setSelected","CustomSelect","changeHandler","calendarMonth","month","currentMonth","getMonthArray","formatted","set","start","hour","minute","second","end","events","doctor","allDay","general","viewChangeHandler","current","localizer","momentLocalizer","height","setHeight","offsetHeight","doctorsOptions","selectedDoctor","popupOpen","setPopupOpen","setPost","AppShed","GetAppointmtentREwie","currentDate","setCurrentDate","views","Navigation","Tabs","view","Item","Button","handleNavigation","action","config","as","Calendar","startAccessor","endAccessor","onView","onDrillDown","handleDayClick","backgroundEvents","min","max","timeslots","formats","dayHeaderFormat","dayFormat","getDayFormat","timeGutterFormat","components","toolbar","Header","ref","DailyToolbar","DailyNavigation","WeekSelector","WeeklyNavigation","MonthSelector","MonthlyNavigation","_ref3","Event","timeSlotWrapper","TimeSlot","messages","showMore","total","popup","selectable","onSelectSlot","StyledCalendar","DoctorPopup","Footer","Legend","colorTypes","_ref4","cat","LegendItem","legend","borderColor","navColor","highlight","labelColor","widgetBg","laptop","labelStyle","laptopL","numFormatter","num","toFixed"],"sourceRoot":""}