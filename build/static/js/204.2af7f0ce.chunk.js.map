{"version":3,"file":"static/js/204.2af7f0ce.chunk.js","mappings":"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","sources":["components/PeriodNav/index.jsx","components/Widget/WidgetNav/index.jsx","hooks/usePeriodNav.js","pages/ChangePassword.jsx","widgets/ConfirmedDiagnoses/List/style.js"],"sourcesContent":["// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// utils\nimport {nanoid} from 'nanoid';\n\nconst PeriodNav = ({current, handler}) => {\n    const {periods} = usePeriodNav();\n\n    return (\n        <Container>\n            {\n                periods.map(p =>\n                    <Item key={nanoid(4)}>\n                        <Button className={current === p && 'active'} onClick={() => handler(p)}>{p}</Button>\n                    </Item>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default PeriodNav;","// styled components\nimport {Nav} from '../style';\n\n// components\nimport WidgetHeader from '../WidgetHeader';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst WidgetNav = ({title, handler, sidePadding, children, disabled, ...props}) => {\n    return (\n        <WidgetHeader title={title} sidePadding={sidePadding} style={props.style} className=\"nav\">\n            <Nav>\n                <button onClick={handler} data-direction=\"prev\" className={disabled ? 'disabled' : ''} aria-label=\"Previous\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handler} data-direction=\"next\" className={disabled ? 'disabled' : ''} aria-label=\"Next\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </Nav>\n            {children}\n        </WidgetHeader>\n    )\n}\n\nWidgetNav.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n}\n\nexport default WidgetNav;","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","// components\r\nimport Widget from '@components/Widget';\r\nimport WidgetHeader from '@components/Widget/WidgetHeader';\r\nimport WidgetNav from '@components/Widget/WidgetNav';\r\nimport WidgetBody from '@components/Widget/WidgetBody';\r\nimport ConfirmedDiagnosesList from '@widgets/ConfirmedDiagnoses/List';\r\nimport PeriodNav from '@components/PeriodNav';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\n// hooks\r\nimport usePeriodNav from '@hooks/usePeriodNav';\r\nimport useArrayNav from '@hooks/useArrayNav';\r\n\r\n// data placeholder\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport { confirmed } from '@db/confirmed';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Badge from '@mui/material/Badge';\r\nimport { InputLabel, Stack } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport DoctorMessenger from '@pages/DoctorMessenger';\r\nimport { ChangePasswordPatient, SingleProductProvider } from '@components/Api/AllApi';\r\nimport { useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport Sidebar from '@layout/Sidebar';\r\nimport Panel from '@layout/Panel';\r\n\r\n\r\n\r\n\r\n\r\nconst ChangePassword = ({ nav }) => {\r\n    const { period, periods, setPeriod } = usePeriodNav();\r\n    const { index, navigate } = useArrayNav(periods);\r\n\r\n    const columns = [\r\n\r\n        {\r\n            name: 'Date/Time',\r\n            selector: 'director',\r\n            sortable: true,\r\n            minWidth: '70px',\r\n            maxWidth: '35%',\r\n        },\r\n        {\r\n            name: 'IP Address',\r\n            selector: 'genres',\r\n            sortable: true,\r\n            cell: d => <span>{d.genres.join(', ')}</span>,\r\n            minWidth: '70px',\r\n            maxWidth: '35%',\r\n        },\r\n        {\r\n            name: 'User Agent',\r\n            selector: 'year',\r\n            sortable: true,\r\n            minWidth: '70px',\r\n            maxWidth: '100%',\r\n        },\r\n    ];\r\n\r\n\r\n    const data = [\r\n        {\r\n            title: 'Beetlejuice',\r\n            year: '1988',\r\n            genres: [\r\n                'Comedy',\r\n                'Fantasy',\r\n            ],\r\n            director: 'Tim Burton',\r\n        },\r\n    ];\r\n\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        if (name === 'currentPassword') {\r\n            setCurrentPassword(value);\r\n        } else if (name === 'newPassword') {\r\n            setNewPassword(value);\r\n        } else if (name === 'confirmNewPassword') {\r\n            setConfirmNewPassword(value);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (newPassword === confirmNewPassword) {\r\n            ChangePasswordPatient({ current_password: currentPassword, password: newPassword, password_confirmation: confirmNewPassword })\r\n                .then((response) => {\r\n                    // Handle the API response here, display success or error message\r\n                    // For example:\r\n                    if (response.status === \"Success\") {\r\n                        alert(response.message);\r\n                    } else {\r\n                        alert(response.message);\r\n                        setErrorMessage('Failed to change password. Please try again.');\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Error:', error);\r\n                    setErrorMessage('An error occurred. Please try again later.');\r\n                });\r\n        } else {\r\n            setErrorMessage('Passwords do not match.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <Sidebar/>\r\n        <Panel/>\r\n        \r\n        \r\n\r\n        <Box mt={2}>\r\n            <Widget name=\"ChangePassword\" mt={2}>\r\n                <Box mt={3}>\r\n                    <Card sx={{ maxWidth: 1145 }}>\r\n                        <Card sx={{ maxWidth: 1100, maxHeight: 40, margin: 3, padding: 1 }} >\r\n                            <div role=\"presentation\">\r\n                                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                    <Link underline=\"hover\" color=\"inherit\" to=\"/settings/ChangePassword\">\r\n                                        Change Password\r\n                                    </Link>\r\n                                    <Link\r\n                                        underline=\"hover\"\r\n                                        color=\"inherit\"\r\n                                    >\r\n                                        Two Factor Authentication\r\n                                    </Link>\r\n                                    <Link\r\n                                        underline=\"hover\"\r\n                                        color=\"text.primary\"\r\n                                        to=\"#\"\r\n                                        aria-current=\"page\"\r\n                                    >\r\n                                        Login History\r\n                                    </Link>\r\n                                </Breadcrumbs>\r\n                            </div>\r\n                        </Card>\r\n\r\n\r\n                    </Card>\r\n                </Box>\r\n                <WidgetBody style={{ paddingBottom: 26 }}>\r\n\r\n                    <Card sx={{ minWidth: 645, '@media screen and (max-width: 1200px)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                        <CardContent>\r\n\r\n                            <div className=\"Order Page\">\r\n                                <form style={{ marginTop: 8 }}>\r\n                                    <Typography my={3}>Change Account Password</Typography>\r\n                                    <InputLabel>Current Password</InputLabel>\r\n                                    <TextField\r\n                                        sx={{ marginTop: 1 }}\r\n                                        size=\"small\"\r\n                                        fullWidth\r\n                                        type=\"text\"\r\n                                        name=\"currentPassword\"\r\n                                        value={currentPassword}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <InputLabel>New Password</InputLabel>\r\n                                    <TextField\r\n                                        sx={{ marginTop: 1 }}\r\n                                        size=\"small\"\r\n                                        fullWidth\r\n                                        type=\"text\"\r\n                                        name=\"newPassword\"\r\n                                        value={newPassword}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <InputLabel>Confirm New Password</InputLabel>\r\n                                    <TextField\r\n                                        sx={{ marginTop: 1 }}\r\n                                        size=\"small\"\r\n                                        fullWidth\r\n                                        type=\"text\"\r\n                                        name=\"confirmNewPassword\"\r\n                                        value={confirmNewPassword}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n                                    <button\r\n                                        style={{\r\n                                            backgroundColor: 'green',\r\n                                            margin: 1,\r\n                                            marginTop: 20,\r\n                                            borderRadius: 6,\r\n                                            color: 'white',\r\n                                            width: '120px',\r\n                                            height: 40,\r\n                                        }}\r\n                                        onClick={handleSubmit}\r\n                                    >\r\n                                        Save Changes\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n\r\n                </WidgetBody>\r\n                <WidgetBody style={{ paddingBottom: 26 }}>\r\n\r\n                    <Card sx={{ minWidth: 645, '@media screen and (max-width: 1200px)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                        <CardContent>\r\n\r\n                            <div className=\"Order Page\">\r\n                                <form style={{ marginTop: 8 }}>\r\n                                    <Typography my={3}>Two Factor Authentication</Typography>\r\n                                    <Typography my={3}>More than 93% of all stolen patient EMR data is due to compromised clinic accounts. Two factor authentication (2FA) prevents that by requiring access to your phone.\r\n                                    </Typography>\r\n                                    <Typography my={3}>Please fill out the form to get started on securing your account!</Typography>\r\n                                    <InputLabel  >Phone Number</InputLabel>\r\n                                    <TextField sx={{ marginTop: 1 }} size=\"small\" fullWidth />\r\n                                    <button style={{ backgroundColor: 'green', margin: 1, marginTop: 20, borderRadius: 6, color: 'white', width: '120px', height: 40 }}>Continue</button>\r\n                                </form>\r\n\r\n                            </div>\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n\r\n                </WidgetBody>\r\n                <WidgetBody style={{ paddingBottom: 26 }}>\r\n\r\n                    <Card sx={{ minWidth: 645, '@media screen and (max-width: 1200px)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                        <CardContent>\r\n\r\n                            <div className=\"Order Page\">\r\n                                <Typography sx={{ fontSize: 18, fontWeight: 400 }} color=\"text.secondary\" gutterBottom>\r\n                                    Login History\r\n                                </Typography>\r\n                                <Card sx={{ minWidth: 1145, '@media screen and (max-width: 1200px)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                                    <CardContent>\r\n\r\n                                        <div className=\"Order Page\">\r\n                                            <DataTableExtensions\r\n                                                {...tableData}\r\n                                            >\r\n                                                <DataTable\r\n                                                    noHeader\r\n                                                    defaultSortField=\"id\"\r\n                                                    defaultSortAsc={false}\r\n                                                    pagination\r\n                                                    highlightOnHover\r\n                                                />\r\n                                            </DataTableExtensions>\r\n                                        </div>\r\n\r\n                                    </CardContent>\r\n\r\n                                </Card>\r\n\r\n                            </div>\r\n                        </CardContent>\r\n\r\n                    </Card>\r\n\r\n                </WidgetBody>\r\n            </Widget>\r\n        </Box>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nChangePassword.propTypes = {\r\n    nav: PropTypes.oneOf(['arrows', 'tabs']).isRequired\r\n}\r\n\r\nexport default ChangePassword;","import styled from 'styled-components/macro';\nimport {flex, textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  gap: 22px;\n  margin-top: 20px;\n  ${flex.col}\n`\n\nexport const Block = styled.div`\n  display: flex;\n  ${flex.between}\n  margin-bottom: 7px;\n  font-size: ${textSizes['14']};\n`\n\nexport const Text = styled.div`\n  display: flex;\n  gap: 4px;\n  font-family: ${fonts.accent};\n  \n  .num {\n    font-weight: 500;\n  }\n  & + .label {\n    text-transform: capitalize;\n  }\n`"],"names":["_ref","current","handler","periods","usePeriodNav","_jsx","Container","children","map","p","Item","Button","className","onClick","nanoid","title","sidePadding","disabled","props","_objectWithoutProperties","_excluded","_jsxs","WidgetHeader","style","Nav","_useState","useState","_useState2","_slicedToArray","period","setPeriod","setPeriodIndex","index","nav","_usePeriodNav","_useArrayNav","useArrayNav","tableData","navigate","columns","name","selector","sortable","minWidth","maxWidth","cell","d","genres","join","data","year","director","currentPassword","setCurrentPassword","_useState3","_useState4","newPassword","setNewPassword","_useState5","_useState6","confirmNewPassword","setConfirmNewPassword","_useState7","_useState8","errorMessage","setErrorMessage","handleChange","event","_event$target","target","value","_Fragment","Sidebar","Panel","Box","mt","Widget","Card","sx","maxHeight","margin","padding","role","Breadcrumbs","Link","underline","color","to","WidgetBody","paddingBottom","backgroundColor","CardContent","marginTop","Typography","my","InputLabel","TextField","size","fullWidth","type","onChange","borderRadius","width","height","preventDefault","ChangePasswordPatient","current_password","password","password_confirmation","then","response","status","alert","message","catch","error","console","log","fontSize","fontWeight","gutterBottom","DataTableExtensions","_objectSpread","DataTable","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","styled","ul","withConfig","componentId","flex","col","div","between","textSizes","fonts","accent"],"sourceRoot":""}