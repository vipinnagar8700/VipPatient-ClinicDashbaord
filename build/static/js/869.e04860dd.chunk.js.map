{"version":3,"file":"static/js/869.e04860dd.chunk.js","mappings":"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","sources":["UI/Legend/LegendItem/index.jsx","UI/Legend/index.jsx","UI/Legend/style.js","components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Tooltip/index.jsx","components/PeriodNav/index.jsx","components/Widget/WidgetNav/index.jsx","constants/options.js","hooks/usePeriodNav.js","widgets/DoctorRatingList/index.jsx","db/cure.js","widgets/DoctorCureRate/index.jsx","pages/DashboardG.jsx","widgets/HealthIndexChart/style.js","db/health.js","widgets/HealthIndexChart/index.jsx"],"sourcesContent":["// styled components\nimport {ListItem} from '../style';\nimport {LegendBadge} from '@ui/Badge/style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst LegendItem = ({color, legend}) => {\n    return (\n        <ListItem>\n            <LegendBadge color={color} /> {legend}\n        </ListItem>\n    )\n}\n\nLegendItem.propTypes = {\n    color: PropTypes.string.isRequired,\n    legend: PropTypes.string.isRequired\n}\n\nexport default LegendItem;","// styled components\nimport {List} from './style';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Legend = ({children, overlay}) => {\n    return <List overlay={overlay}>{children}</List>\n}\n\nLegend.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    overlay: PropTypes.bool,\n}\n\nexport default Legend;","import styled from 'styled-components/macro';\nimport {textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px 16px;\n  ${props => props.overlay && `\n    position: absolute;\n    bottom: 22px;\n    left: 24px\n  `}\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-transform: uppercase;\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`","// styling\nimport {colors} from '@styles/vars';\nimport {StyledTooltip} from '@components/Chart/Tooltip';\n\n// components\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useLayoutEffect, useState} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport {generateGridPoints} from '@utils/recharts';\n\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\n    const {width} = useWindowSize();\n    const {theme} = useTheme();\n    const [points, setPoints] = useState([]);\n    const isTablet = width >= 768;\n\n    // generate grid points based on the container width\n    useLayoutEffect(() => {\n        setPoints(generateGridPoints(id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width]);\n\n    // custom tooltip\n    const renderTooltip = (props) => {\n        const {active, payload} = props;\n        if (active && payload && payload.length) {\n            return (\n                <StyledTooltip className=\"multiple\">\n                    {payload.map((item, index) => (\n                        <div className=\"item\" key={index}>\n                            <div className=\"color\" style={{background: item.stroke}} />\n                            <div className=\"value\">{item.value}</div>\n                        </div>\n                    ))}\n                </StyledTooltip>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\n            {\n                variant === 'line' ?\n                    <LineChart margin={false} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Line key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </LineChart>\n                    :\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            {props.children}\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Area key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </AreaChart>\n            }\n        </ResponsiveContainer>\n    )\n}\n\nexport default CartesianChart;","// cartesian grid points generator\nexport const generateGridPoints = (id, gutter = 20) => {\n    const gridWidth = document.getElementById(id).offsetWidth;\n\n    let points = [];\n    for (let i = 0; i < gridWidth; i += gutter) {\n        points.push(i);\n    }\n    return points;\n}","// styling\nimport styled from 'styled-components/macro';\nimport {light, textSizes, fonts, flex} from '@styles/vars';\n\nexport const StyledTooltip = styled.div`\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  color: #fff;\n  box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n  border-radius: 8px;\n  background-color: ${light.text};\n  height: 20px;\n  padding: 0 8px;\n  display: flex;\n  ${flex.center}\n  line-height: 1;\n  position: relative;\n  text-transform: uppercase;\n  \n  &.multiple {\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    height: auto;\n    \n    .item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      \n      .color {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n      }\n    }\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -3px;\n    transform: translateX(-50%) rotate(-45deg);\n    width: 8px;\n    height: 8px;\n    background-color: ${light.text};\n    display: ${props => props.arrow ? 'block' : 'none'};\n  }\n`;\n\nconst ChartTooltip = ({active, payload, tooltip, arrow = false, multi = false, ...props}) => {\n    if (multi) {\n        if (!active || !tooltip) return null\n        for (const item of payload)\n            if (item.dataKey === tooltip)\n                return <StyledTooltip arrow={arrow}>{item.value}</StyledTooltip>\n        return null\n    } else {\n        if (!active || !payload[0]) return null\n        return (\n            <StyledTooltip arrow={arrow}> {payload[0].value} {props.right && payload[0].dataKey}</StyledTooltip>\n        )\n    }\n}\n\nexport default ChartTooltip;\n","// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// utils\nimport {nanoid} from 'nanoid';\n\nconst PeriodNav = ({current, handler}) => {\n    const {periods} = usePeriodNav();\n\n    return (\n        <Container>\n            {\n                periods.map(p =>\n                    <Item key={nanoid(4)}>\n                        <Button className={current === p && 'active'} onClick={() => handler(p)}>{p}</Button>\n                    </Item>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default PeriodNav;","// styled components\nimport {Nav} from '../style';\n\n// components\nimport WidgetHeader from '../WidgetHeader';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst WidgetNav = ({title, handler, sidePadding, children, disabled, ...props}) => {\n    return (\n        <WidgetHeader title={title} sidePadding={sidePadding} style={props.style} className=\"nav\">\n            <Nav>\n                <button onClick={handler} data-direction=\"prev\" className={disabled ? 'disabled' : ''} aria-label=\"Previous\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handler} data-direction=\"next\" className={disabled ? 'disabled' : ''} aria-label=\"Next\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </Nav>\n            {children}\n        </WidgetHeader>\n    )\n}\n\nWidgetNav.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n}\n\nexport default WidgetNav;","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ScrollContainer from '@components/ScrollContainer';\nimport PeriodNav from '@components/PeriodNav';\nimport Tab from 'react-bootstrap/Tab';\nimport DoctorRatingItem from '@components/DoctorRatingItem';\n\n// hooks\nimport useContentHeight from '@hooks/useContentHeight';\nimport {useRef, useState, useEffect} from 'react';\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// data placeholder\nimport {doctors} from '@db/doctors';\n\nconst DoctorsRatingList = () => {\n    const [current, setCurrent] = useState(usePeriodNav().period);\n    const headerRef = useRef(null);\n    const contentRef = useRef(null);\n    const height = useContentHeight(headerRef);\n\n    useEffect(() => {\n        contentRef.current.scrollTop = 0;\n    }, [current]);\n\n    const List = ({period}) => {\n        return (\n            <>\n                {\n                    doctors.map(doctor => <DoctorRatingItem key={doctor.id} data={doctor} period={period}/>)\n                }\n            </>\n        )\n    }\n\n    return (\n        <Widget name=\"DoctorsRatingList\" mobile={600}>\n            <WidgetHeader title=\"Doctors rating\" flex=\"column\" style={{paddingBottom: 4}} elRef={headerRef}>\n                <PeriodNav current={current} handler={setCurrent} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0}}>\n                <ScrollContainer height={height}>\n                    <div className=\"track\" ref={contentRef}>\n                        <Tab.Container activeKey={current} transition={true}>\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"year\">\n                                    <List period=\"year\"/>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"month\">\n                                    <List period=\"month\"/>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"week\">\n                                    <List period=\"week\"/>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Tab.Container>\n                    </div>\n                </ScrollContainer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default DoctorsRatingList;","export const data = [\n    {\n        id: 'marvin_park',\n        stats: [\n            {sick: 154, cured: 97},\n            {sick: 205, cured: 300},\n            {sick: 369, cured: 207},\n            {sick: 250, cured: 344},\n            {sick: 200, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 80, cured: 150},\n            {sick: 366, cured: 211},\n            {sick: 600, cured: 400},\n            {sick: 200, cured: 500},\n            {sick: 160, cured: 200},\n            {sick: 650, cured: 480}\n        ]\n    },\n    {\n        id: 'norman_munoz',\n        stats: [\n            {sick: 352, cured: 469},\n            {sick: 488, cured: 610},\n            {sick: 120, cured: 80},\n            {sick: 250, cured: 344},\n            {sick: 200, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 80, cured: 200},\n            {sick: 740, cured: 400},\n            {sick: 500, cured: 100},\n            {sick: 200, cured: 156},\n            {sick: 500, cured: 80},\n            {sick: 100, cured: 20}\n        ]\n    },\n    {\n        id: 'tillie_mathis',\n        stats: [\n            {sick: 154, cured: 97},\n            {sick: 205, cured: 300},\n            {sick: 369, cured: 207},\n            {sick: 250, cured: 344},\n            {sick: 700, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 400, cured: 150},\n            {sick: 366, cured: 211},\n            {sick: 100, cured: 800},\n            {sick: 200, cured: 500},\n            {sick: 20, cured: 200},\n            {sick: 650, cured: 480}\n        ]\n    },\n    {\n        id: 'cornelia_phillips',\n        stats: [\n            {sick: 97, cured: 154},\n            {sick: 300, cured: 205},\n            {sick: 207, cured: 369},\n            {sick: 250, cured: 344},\n            {sick: 500, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 400, cured: 150},\n            {sick: 366, cured: 211},\n            {sick: 100, cured: 500},\n            {sick: 200, cured: 500},\n            {sick: 20, cured: 200},\n            {sick: 650, cured: 480}\n        ]\n    },\n    {\n        id: 'isaiah_goodman',\n        stats: [\n            {sick: 352, cured: 469},\n            {sick: 488, cured: 610},\n            {sick: 120, cured: 80},\n            {sick: 250, cured: 344},\n            {sick: 200, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 80, cured: 200},\n            {sick: 300, cured: 400},\n            {sick: 500, cured: 100},\n            {sick: 200, cured: 156},\n            {sick: 500, cured: 800},\n            {sick: 700, cured: 1000}\n        ]\n    },\n    {\n        id: 'claudia_turner',\n        stats: [\n            {sick: 100, cured: 469},\n            {sick: 488, cured: 610},\n            {sick: 120, cured: 80},\n            {sick: 250, cured: 344},\n            {sick: 200, cured: 100},\n            {sick: 120, cured: 400},\n            {sick: 800, cured: 200},\n            {sick: 300, cured: 400},\n            {sick: 500, cured: 100},\n            {sick: 200, cured: 156},\n            {sick: 500, cured: 20},\n            {sick: 100, cured: 50}\n        ]\n    },\n    {\n        id: 'emily_rivera',\n        stats: [\n            {sick: 800, cured: 400},\n            {sick: 400, cured: 800},\n            {sick: 250, cured: 500},\n            {sick: 500, cured: 250},\n            {sick: 800, cured: 400},\n            {sick: 400, cured: 800},\n            {sick: 250, cured: 500},\n            {sick: 500, cured: 250},\n            {sick: 800, cured: 400},\n            {sick: 400, cured: 800},\n            {sick: 250, cured: 500},\n            {sick: 500, cured: 250},\n        ]\n    }\n]","// styling\nimport {rgba} from 'polished';\nimport {colors, light, dark} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport CustomSelect from '@ui/Select';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport CartesianChart from '@components/CartesianChart';\n\n// hooks\nimport {useState} from 'react';\nimport {useTheme} from 'styled-components';\n\n// utils\nimport {doctorsOptions} from '@constants/options';\n\n// data placeholder\nimport {data} from '@db/cure';\n\nconst DoctorCureRate = () => {\n    const {theme} = useTheme();\n    const options = doctorsOptions();\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n\n    const chartData = data.find(item => item.id === selectedDoctor.value).stats;\n\n    const common = {\n        type: 'monotone',\n        strokeWidth: 3,\n        activeDot: {r: 4},\n        fillOpacity: .8\n    }\n\n    const chartElems = [\n        {\n            ...common,\n            dataKey: 'cured',\n            stroke: colors.teal,\n            fill: theme === 'light' ? 'url(#cure_light)' : 'url(#cure)',\n            activeDot: {r: 5, fill: colors.teal, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 4px ${rgba(colors.teal, .5)})`\n            }\n        },\n        {\n            ...common,\n            dataKey: 'sick',\n            stroke: colors.red,\n            fill: 'none',\n            activeDot: {r: 5, fill: colors.red, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 4px ${rgba(colors.red, .5)})`\n            }\n        }\n    ]\n\n    return (\n        <Widget name=\"DoctorCureRate\">\n            <WidgetHeader title=\"Cure rate\" flex=\"column\">\n                <CustomSelect options={options} value={selectedDoctor} variant=\"user\" changeHandler={e => setSelectedDoctor(e)} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflowY: 'hidden'}}>\n                <CartesianChart id=\"DoctorCureRate\" data={chartData} elems={chartElems} variant=\"area\" height={265}>\n                    <defs>\n                        <linearGradient id=\"cure_light\" x1=\"0\" y1=\"-0.5\" x2=\"0\" y2=\"240\" gradientUnits=\"userSpaceOnUse\">\n                            <stop stopColor=\"#53F5E8\"/>\n                            <stop offset=\"1\" stopColor=\"#29E7CD\" stopOpacity=\"0.01\"/>\n                        </linearGradient>\n                        <linearGradient id=\"cure\" x1=\"1.83382\" y1=\"-0.5\" x2=\"1.83382\" y2=\"238.857\" gradientUnits=\"userSpaceOnUse\">\n                            <stop stopColor=\"#53F5E8\"/>\n                            <stop offset=\"1\" stopColor=\"#171819\"/>\n                        </linearGradient>\n                    </defs>\n                </CartesianChart>\n                <Legend overlay={true}>\n                    <LegendItem color=\"red\" legend=\"sick\" />\n                    <LegendItem color=\"teal\" legend=\"cured\" />\n                </Legend>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default DoctorCureRate;","// components\nimport Page from '@layout/Page';\nimport DoctorsRatingList from '@widgets/DoctorRatingList';\nimport HealthIndexChart from '@widgets/HealthIndexChart';\nimport DoctorCureRate from '@widgets/DoctorCureRate';\n\nconst DashboardG = () => {\n    return (\n        <Page title=\"Dashboard\">\n            <div key=\"doctors-rating\">\n                <DoctorsRatingList type=\"tabs\"/>\n            </div>\n            <div key=\"health-index\">\n                <HealthIndexChart variant=\"both\"/>\n            </div>\n            <div key=\"cure-rate\">\n                <DoctorCureRate/>\n            </div>\n        </Page>\n    )\n}\n\nexport default DashboardG;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, textSizes, breakpoints, flex} from '@styles/vars';\n\nexport const HealthIndexChartWrapper = styled.div`\n  height: 100%;\n  ${flex.col};\n  justify-content: space-between;\n\n  .total {\n    display: flex;\n    gap: 40px;\n    margin: -4px 24px 0;\n    position: relative;\n\n    &_block {\n      font-size: ${textSizes['12']};\n\n      .counter {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n\n      .spacer {\n        opacity: 0;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      &--cured .h1 {\n        color: ${colors.azure};\n      }\n\n      &--sick {\n        position: relative;\n\n        .h1 {\n          color: ${colors.peach};\n        }\n\n        &:before {\n          content: '';\n          height: 100%;\n          width: 1px;\n          background: ${theme('theme', {\n            light: '#A2C0D4',\n            dark: '#383D40',\n          })};\n          position: absolute;\n          top: 0;\n          left: -20px;\n        }\n      }\n    }\n\n    ${breakpoints.tablet} {\n      .total_block {\n        font-size: ${textSizes['14']};\n\n        .hidden {\n          display: inline;\n        }\n      }\n    }\n\n    ${breakpoints.laptop} {\n      .total_block {\n        font-size: ${textSizes['16']};\n      }\n    }\n  }\n`;","export const y2020 = [\n    {cured: 314, sick: 200},\n    {cured: 200, sick: 400},\n    {cured: 265, sick: 120},\n    {cured: 156, sick: 300},\n    {cured: 412, sick: 200},\n    {cured: 280, sick: 500},\n    {cured: 251, sick: 130},\n    {cured: 180, sick: 300},\n    {cured: 304, sick: 150},\n    {cured: 505, sick: 408},\n    {cured: 328, sick: 200},\n    {cured: 254, sick: 90},\n    {cured: 301, sick: 566},\n    {cured: 459, sick: 189},\n    {cured: 354, sick: 480},\n    {cured: 264, sick: 400},\n    {cured: 309, sick: 200},\n    {cured: 185, sick: 500},\n];\n\nexport const y2021 = [\n    {cured: 450, sick: 250},\n    {cured: 150, sick: 380},\n    {cured: 370, sick: 200},\n    {cured: 300, sick: 180},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 600},\n    {cured: 200, sick: 300},\n    {cured: 400, sick: 150},\n    {cured: 348, sick: 130},\n    {cured: 400, sick: 280},\n    {cured: 200, sick: 400},\n    {cured: 300, sick: 241},\n    {cured: 380, sick: 480},\n    {cured: 200, sick: 380},\n    {cured: 400, sick: 200},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 300},\n    {cured: 300, sick: 450},\n];\n\nexport const y2022 = [\n    {cured: 200, sick: 300},\n    {cured: 250, sick: 350},\n    {cured: 390, sick: 240},\n    {cured: 450, sick: 320},\n    {cured: 550, sick: 250},\n    {cured: 420, sick: 200},\n    {cured: 368, sick: 198},\n    {cured: 250, sick: 370},\n    {cured: 322, sick: 200},\n    {cured: 450, sick: 270},\n    {cured: 210, sick: 394},\n    {cured: 180, sick: 270},\n    {cured: 380, sick: 480},\n    {cured: 390, sick: 550},\n    {cured: 450, sick: 210},\n    {cured: 470, sick: 360},\n    {cured: 360, sick: 190},\n    {cured: 300, sick: 250},\n];\n","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport {HealthIndexChartWrapper} from '@widgets/HealthIndexChart/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {ScatterChart, Scatter, ResponsiveContainer, Tooltip, Cell} from 'recharts';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport ChartTooltip from '@components/Chart/Tooltip';\nimport CountUp from 'react-countup';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport {useTheme} from 'styled-components';\n\n// data placeholder\nimport {y2020, y2021, y2022} from '@db/health';\n\nconst HealthIndexChart = ({variant}) => {\n    const {theme} = useTheme();\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n\n    const averages = [\n        {cured: 75.08, sick: 45.27},\n        {cured: 84.51, sick: 33.12},\n        {cured: 67.14, sick: 48.65},\n    ]\n\n    const getCurrentData = () => {\n        switch (index) {\n            default:\n            case 0:\n                return y2020;\n            case 1:\n                return y2021;\n            case 2:\n                return y2022;\n        }\n    }\n    const data = getCurrentData();\n\n    const CustomScatterShape = ({cx, cy, fill, ...props}) => {\n        const isDominant = variant === 'both' ? props.dom === props.dataKey : props.dataKey === 'cured';\n\n        return (\n            <svg width=\"10\" height=\"222\" viewBox=\"0 0 10 222\" x={cx} y={cy} fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n                {\n                    isDominant &&\n                    <path opacity=\"0.5\" d=\"M5 28.3799V220.38\"\n                          stroke={`url(#scatter_${props.dataKey})`} strokeWidth=\"2\"\n                          strokeLinecap=\"round\"/>\n                }\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                      d=\"M5 10C7.76142 10 10 7.76142 10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10Z\"\n                      fill={fill}/>\n                <defs>\n                    <linearGradient id=\"scatter_cured\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.azure}/>\n                    </linearGradient>\n                    <linearGradient id=\"scatter_sick\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.peach}/>\n                    </linearGradient>\n                </defs>\n            </svg>\n        );\n    }\n\n    return (\n        <Widget name=\"HealthIndexChart\">\n            <WidgetNav sx={{fontSize:22,fontWeight:600}} title=\"Clinic Growth\" handler={navigate}/>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <HealthIndexChartWrapper>\n                    <div className=\"total\">\n                        <div className=\"total_block total_block--cured\">\n                            <span className=\"spacer h1\">{averages[index].cured}</span>\n                            <CountUp className=\"counter h1\" end={averages[index].cured} duration={2} decimals={2} />\n                            <span><span className=\"hidden\">New</span> Patients</span>\n                        </div>\n                        {\n                            variant === 'both' && (\n                                <div className=\"total_block total_block--sick\">\n                                    <span className=\"spacer h1\">{averages[index].sick}</span>\n                                    <CountUp className=\"counter h1\" end={averages[index].sick} duration={2} decimals={2} />\n                                    <span><span className=\"hidden\">New</span> Certificates</span>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                        <ScatterChart margin={false} data={data}>\n                            {\n                                variant === 'both' &&\n                                <Scatter dataKey=\"sick\" shape={CustomScatterShape}>\n                                    {data.map((entry, i) => {\n                                        return (\n                                            <Cell key={`cell-${i}`}\n                                                  fill={colors.peach}\n                                                  dom={entry.sick > entry.cured ? 'sick' : 'cured'}\n                                                  dataKey=\"sick\"/>\n                                        )\n                                    })}\n                                </Scatter>\n                            }\n                            <Scatter dataKey=\"cured\" shape={CustomScatterShape}>\n                                {data.map((entry, i) => {\n                                    return (\n                                        <Cell key={`cell-${i}`}\n                                              fill={colors.azure}\n                                              dom={entry.cured > entry.sick ? 'cured' : 'sick'}\n                                              dataKey=\"cured\"/>\n                                    )\n                                })}\n                            </Scatter>\n                            <Tooltip cursor={false} content={<ChartTooltip right/>}/>\n                        </ScatterChart>\n                    </ResponsiveContainer>\n                    <Legend overlay={true}>\n                        <LegendItem color=\"azure\" legend=\"New Patients\"/>\n                        {variant === 'both' && <LegendItem color=\"peach\" legend=\"New Certificates\"/>}\n                    </Legend>\n                </HealthIndexChartWrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nHealthIndexChart.propTypes = {\n    variant: PropTypes.oneOf(['health', 'both']).isRequired\n}\n\nexport default HealthIndexChart;"],"names":["_ref","color","legend","_jsxs","ListItem","children","_jsx","LegendBadge","overlay","List","styled","ul","withConfig","componentId","props","li","fonts","accent","textSizes","variant","id","data","elems","_objectWithoutProperties","_excluded","width","useWindowSize","theme","useTheme","_useState","useState","_useState2","_slicedToArray","points","setPoints","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","i","push","generateGridPoints","renderTooltip","active","payload","StyledTooltip","className","map","item","index","style","background","stroke","value","ResponsiveContainer","height","LineChart","_objectSpread","margin","x1","y1","x2","y2","gradientUnits","stopColor","colors","dark","stopOpacity","offset","light_gray","CartesianGrid","concat","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","top","Area","div","light","text","flex","center","arrow","tooltip","_ref$arrow","_ref$multi","multi","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","right","current","handler","periods","usePeriodNav","Container","p","Item","Button","onClick","nanoid","title","sidePadding","disabled","WidgetHeader","Nav","tasksOptions","label","depsOptions","testsOptions","doctorsOptions","options","doctors","forEach","doctor","Avatar","avatar","alt","name","size","period","setPeriod","setPeriodIndex","setCurrent","headerRef","useRef","contentRef","useContentHeight","useEffect","scrollTop","_Fragment","DoctorRatingItem","Widget","mobile","paddingBottom","elRef","PeriodNav","WidgetBody","padding","ScrollContainer","ref","Tab","activeKey","transition","Content","Pane","eventKey","stats","sick","cured","selectedDoctor","setSelectedDoctor","chartData","find","common","type","strokeWidth","activeDot","r","fillOpacity","chartElems","teal","fill","widgetBg","filter","rgba","red","CustomSelect","changeHandler","overflowY","CartesianChart","Legend","LegendItem","Page","DoctorsRatingList","HealthIndexChart","DoctorCureRate","HealthIndexChartWrapper","col","azure","peach","breakpoints","tablet","laptop","y2020","y2021","y2022","_useArrayNav","useArrayNav","navigate","averages","getCurrentData","CustomScatterShape","_ref2","cx","cy","isDominant","dom","viewBox","x","y","xmlns","opacity","d","fillRule","clipRule","WidgetNav","sx","fontSize","fontWeight","overflow","CountUp","end","duration","decimals","ScatterChart","Scatter","shape","entry","Cell","ChartTooltip"],"sourceRoot":""}