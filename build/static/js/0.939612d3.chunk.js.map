{"version":3,"file":"static/js/0.939612d3.chunk.js","mappings":"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","sources":["UI/IconLink/index.jsx","components/Chart/Labels/index.jsx","components/TestItem/style.js","components/TestItem/index.jsx","components/Widget/WidgetNav/index.jsx","db/patient_tests.js","hooks/usePeriodNav.js","widgets/Statistics/style.js","widgets/Statistics/index.jsx","widgets/RecentTests/index.jsx","pages/ClinicActivity.jsx","pages/UpcommingAppointment.jsx","pages/DashboardK.jsx","components/ModalWindow/CloseBtn/index.jsx","widgets/EventsCompactCalendar/index.jsx","widgets/EventsCompactCalendar/style.js","widgets/HealthIndexChart/style.js","db/health.js","widgets/HealthIndexChart/index.jsx","widgets/PatientCalendar/index.jsx","db/gender.js","widgets/PatientsGenderLineChart/index.jsx","components/PaymentItem/style.js","components/PaymentItem/index.jsx","db/payments_history.js","widgets/PaymentsHistory/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, textSizes} from '@styles/vars';\nimport {darken} from 'polished';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Link = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  font-size: ${textSizes['14']};\n  color: ${colors.blue};\n  line-height: 1;\n  transition: color var(--transition);\n  width: fit-content;\n  \n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &:hover, &:focus {\n    color: ${darken(0.1, colors.blue)};\n  }\n\n  .icon {\n    font-size: ${textSizes['12']};\n    color: ${colors.gray};\n  }\n`\n\nconst IconLink = ({href = '#', title}) => {\n    return (\n        <Link href={href}>\n            <i className=\"icon icon-link\"></i>\n            <span>{title}</span>\n        </Link>\n    )\n}\n\nIconLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    href: PropTypes.string\n}\n\nexport default IconLink;","import styled from 'styled-components/macro';\nimport {flex, fonts, textSizes} from '@styles/vars';\n\nconst Labels = styled.div`\n  text-transform: uppercase;\n  margin: 0 24px;\n  display: flex;\n  ${flex.between}\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`\n\nexport default Labels","import styled from 'styled-components/macro';\nimport {colors, dark, breakpoints, effects, flex, fonts, light, textSizes} from '@styles/vars';\nimport theme from 'styled-theming';\n\nexport const ListItem = styled.li`\n  ${flex.col};\n  padding: 20px;\n  gap: 20px;\n  border-radius: 8px;\n  background-color: ${theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n  })};\n  transform-origin: center center;\n  will-change: transform;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  ${flex.between};\n  border-bottom: ${theme('theme', {\n    light: effects.dashedLight,\n    dark: effects.dashedDark\n  })};\n  padding-bottom: 20px;\n  gap: 20px;\n`;\n\nexport const Main = styled.div`\n  ${flex.col};\n  gap: 20px;\n\n  .info {\n    ${flex.col};\n    gap: 10px;\n\n    .title {\n      font-weight: 500;\n    }\n\n    .timestamp {\n      font-size: ${textSizes['12']};\n      font-family: ${fonts.accent};\n    }\n  }\n  \n  ${breakpoints.tablet} {\n    flex-direction: row;\n    ${flex.between};\n  }\n`;\n\nexport const Button = styled.button`\n  height: 40px;\n  border-radius: 20px;\n  background-color: ${theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n  })};\n  color: ${theme('theme', {\n    light: colors.blue,\n    dark: '#fff'\n  })};\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  padding: 0 25px;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n  }\n`;","// styled components\nimport {ListItem, Main, Header, Button} from '@components/TestItem/style';\n\n// components\nimport IconLink from '@ui/IconLink';\nimport MenuDots from '@ui/MenuDots';\nimport {motion, AnimatePresence} from 'framer-motion';\n\n// utils\nimport moment from 'moment';\nimport {fadePresence} from '@constants/framer';\n\nconst TestItem = ({data}) => {\n    const {doctor, title, date} = data;\n\n    return (\n        <AnimatePresence>\n            <ListItem as={motion.div} {...fadePresence}>\n                <Header>\n                    <IconLink title={`Dr. ${doctor}`}/>\n                    <MenuDots/>\n                </Header>\n                <Main>\n                    <div className=\"info\">\n                        <span className=\"title\">{title}</span>\n                        <span className=\"timestamp\">{moment(date).format('hh:mm A')}</span>\n                    </div>\n                    <Button>View result</Button>\n                </Main>\n            </ListItem>\n        </AnimatePresence>\n    )\n}\n\nexport default TestItem;","// styled components\nimport {Nav} from '../style';\n\n// components\nimport WidgetHeader from '../WidgetHeader';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst WidgetNav = ({title, handler, sidePadding, children, disabled, ...props}) => {\n    return (\n        <WidgetHeader title={title} sidePadding={sidePadding} style={props.style} className=\"nav\">\n            <Nav>\n                <button onClick={handler} data-direction=\"prev\" className={disabled ? 'disabled' : ''} aria-label=\"Previous\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handler} data-direction=\"next\" className={disabled ? 'disabled' : ''} aria-label=\"Next\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </Nav>\n            {children}\n        </WidgetHeader>\n    )\n}\n\nWidgetNav.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n}\n\nexport default WidgetNav;","import moment from 'moment';\n\nexport const patient_tests = [\n    {\n        id: 'LRmwlkTmRiv',\n        type: \"blood\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'EDkfK2u',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'hour'),\n        doctor: \"Adam Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: '97SbXo',\n        type: \"blood\",\n        date: moment().subtract(3, 'hour'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Hepatitis B surface antigen\"\n    },\n    {\n        id: 'RYXnQSf',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'VeOJuSBvq',\n        type: \"blood\",\n        date: moment(),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: 'aN6wcKSaUMgY',\n        type: \"mri\",\n        date: moment(),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'ukMuBJSL',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'wMch17',\n        type: \"ct\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'pkMHKe',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: '5EkV9OZ',\n        type: \"xray\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'vYMB5V564wE',\n        type: \"ecg\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'WdUbK4OW4Vn',\n        type: \"mri\",\n        date: moment().subtract(1, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'kLYqsk',\n        type: \"mri\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"MRI\"\n    },\n    {\n        id: 'IftpHTw4p',\n        type: \"xray\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'oCnZPQKY',\n        type: \"ultrasound\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n    {\n        id: 'Y4RjFwyJn3y',\n        type: \"ct\",\n        date: moment().subtract(1, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: 'JojvuH7',\n        type:  \"prenatal\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'Si1B9W',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(2, 'day'),\n        doctor: \"Miranda Mccoy\",\n        title: \"Antibiotic Sensitivity Test\"\n    },\n    {\n        id: '6zXfLNFdo',\n        type: \"blood\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Bella Levine\",\n        title: \"Allergy testing\"\n    },\n    {\n        id: 'nPE75vNSE1Ya',\n        type: \"ecg\",\n        date: moment().subtract(1, 'month').subtract(4, 'day'),\n        doctor: \"Heleen Carter\",\n        title: \"Cardiovascular ECG\"\n    },\n    {\n        id: 'hEUJrTG',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"DNA Testing\"\n    },\n    {\n        id: 'WCHC85b2on2',\n        type: \"ct\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Anna Richardson\",\n        title: \"CT Scan\"\n    },\n    {\n        id: '0zVMPZO8s',\n        type: \"blood\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herman Ryan\",\n        title: \"Cephalin-cholesterol flocculation\"\n    },\n    {\n        id: 'g0ral9eA',\n        type:  \"prenatal\",\n        date: moment().subtract(2, 'month').subtract(3, 'day'),\n        doctor: \"Herbert Reynolds\",\n        title: \"Mammography\"\n    },\n    {\n        id: 'SyUtrFzCKe',\n        type: \"xray\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Katherine Wilson\",\n        title: \"Lungs X-Ray\"\n    },\n    {\n        id: 'NjQR8EIcGBR',\n        type: \"ultrasound\",\n        date: moment().subtract(2, 'month'),\n        doctor: \"Jeffery Nichols\",\n        title: \"Ultrasound diagnostic\"\n    },\n];","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","import styled from 'styled-components/macro';\nimport {colors, textSizes, flex, fonts, breakpoints} from '@styles/vars';\n\nexport const Card = styled.div`\n  background-color: ${props => colors[props.className]};\n  border-radius: 8px;\n  color: #fff;\n  font-size: ${textSizes['40']};\n  height: 80px;\n  ${flex.col};\n  ${flex.center};\n`;\n\nexport const Info = styled.div`\n  ${flex.col};\n  gap: 10px;\n\n  .value {\n    font-family: ${fonts.accent};\n    font-size: ${textSizes['40']};\n    font-weight: 300;\n    flex-grow: 1;\n  }\n`;\n\nexport const Content = styled.div`\n  padding-top: 24px;\n  ${flex.col};\n  gap: 20px;\n\n  ${breakpoints.mobileL} {\n    flex-direction: row;\n\n    ${Card} {\n      height: 134px;\n      width: 94px;\n    }\n\n    ${Info} {\n      width: calc(100% - 114px);\n\n      .h3 {\n        max-width: 200px;\n        flex-grow: unset;\n      }\n    }\n  }\n`;\n\n","// styled components\nimport {Card, Info, Content} from './style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport CountUp from 'react-countup';\n\nconst Statistics = ({data}) => {\n    const Icon = () => {\n        switch (data.type) {\n            default:\n            case 'cause':\n                return <i className=\"icon-stomach\"/>;\n            case 'teeth':\n                return <i className=\"icon-tooth\"/>;\n            case 'heart':\n                return <i className=\"icon-monitor\"/>;\n        }\n    }\n\n    const color = () => {\n        switch (data.type) {\n            default:\n            case 'cause':\n                return 'peach';\n            case 'teeth':\n                return 'teal';\n            case 'heart':\n                return 'green';\n        }\n    }\n\n    return (\n        <Widget name=\"Statistics\">\n            <WidgetBody>\n                <Content>\n                    <Card className={color()}>\n                        <Icon/>\n                    </Card>\n                    <Info>\n                        <CountUp className=\"value\" start={0} end={data.value} delay={0} duration={1} enableScrollSpy />\n                        <p className=\"h3\">{data.text}</p>\n                    </Info>\n                </Content>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default Statistics;","// styling\nimport styled from 'styled-components/macro';\nimport {flex} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport TestItem from '@components/TestItem';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\nimport ScrollContainer from '@components/ScrollContainer';\n\n// utils\nimport {getYearDaysArray} from '@utils/dates';\nimport moment from 'moment';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useEffect, useRef} from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport {patient_tests} from '@db/patient_tests';\n\nconst List = styled.div`\n  ${flex.col};\n  gap: 20px;\n`;\n\nconst RecentTests = () => {\n    const isXS = useWindowSize().width < 414;\n    const days = getYearDaysArray();\n    const todayIndex = moment().diff(moment().startOf('year'), 'days');\n    const {index, setIndex, navigate} = useArrayNav(days);\n\n    const headerRef = useRef(null);\n    const listRef = useRef(null);\n    const height = useContentHeight(headerRef);\n\n    useEffect(() => {\n        setIndex(todayIndex);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [todayIndex]);\n\n    useEffect(() => {\n        if (listRef.current) {\n            listRef.current.scrollTo(0, 0);\n        }\n    }, [index]);\n\n    const tests = patient_tests.filter((test) => {\n        const dayIndex = moment(test.date).diff(moment().startOf('year'), 'days');\n        return dayIndex === index;\n    })\n\n    return (\n        <Widget name=\"RecentTests\" mobile={600}>\n            <WidgetHeader title=\"Recent laboratory tests\" flex=\"column\" elRef={headerRef}>\n                <Navigator text={isXS ? days[index].short : days[index].long} handler={navigate} nextDisabled={index === todayIndex}/>\n            </WidgetHeader>\n            <WidgetBody>\n                <ScrollContainer height={height}>\n                    <List className=\"track\" ref={listRef}>\n                        {\n                            tests.length !== 0 ?\n                                tests.map((test) => <TestItem key={test.id} data={test}/>)\n                                :\n                                <NoDataPlaceholder/>\n                        }\n                    </List>\n                </ScrollContainer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default RecentTests;","// components\r\nimport Page from '@layout/Page';\r\nimport ModalWindow from '@components/ModalWindow';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Content from '@components/Reviews/Content';\r\nimport ReviewsRatingList from '@components/Reviews/List';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Stack } from '@mui/material';\r\n\r\n// hooks\r\nimport { useState, useEffect } from 'react';\r\nimport { GetAllPatientData } from '@components/Api/AllApi';\r\nimport { Link } from 'react-router-dom';\r\nimport Sidebar from '@layout/Sidebar';\r\nimport Panel from '@layout/Panel';\r\n\r\nconst ClinicActivity = () => {\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const smallScreen = window.matchMedia('(max-width: 1038.98px)').matches;\r\n    const [PatientSData, setPatientSData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n\r\n    const handleModalClose = () => {\r\n        setOpenModal(false);\r\n        setSelectedTab('');\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n        if (smallScreen) {\r\n            handleModalClose();\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTemplateData = async () => {\r\n            try {\r\n                const data = await GetAllPatientData();\r\n                console.log(data, \"This Is all Patinet Data!\");\r\n                setPatientSData(data.result || []);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchTemplateData();\r\n    }, [count]);\r\n\r\n    console.log(PatientSData, \"AAAAAAAAAAAAAAAAA\")\r\n    const columns = [\r\n        {\r\n            name: 'Patient Image',\r\n            selector: (row) => row.id,\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Message',\r\n            selector: (row) => row.name,\r\n            sortable: true,\r\n        },\r\n\r\n\r\n        {\r\n            name: 'Created',\r\n            selector: (row) => {\r\n                const createdAt = new Date(row.created_at);\r\n                const options = {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                    hour12: false,\r\n                };\r\n                return createdAt.toLocaleString('en-US', options);\r\n            },\r\n            sortable: true,\r\n        },\r\n\r\n\r\n\r\n    ];\r\n\r\n\r\n    const data = PatientSData.map((item) => ({\r\n        id: item?.id || '',\r\n        name: item?.name || '',\r\n        mname: item?.mname || '',\r\n        lname: item?.lname || '',\r\n        city: item?.city || '',\r\n        state: item?.state || '',\r\n        created_at: item?.created_at || '',\r\n        updated_at: item?.updated_at || '',\r\n    }));\r\n\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n    return (\r\n        // <Tab.Container transition={true} activeKey={selectedTab} onSelect={setSelectedTab}>\r\n        //     <Page title=\"My Order\">\r\n        <>\r\n            <div key=\"balance\">\r\n                <Card sx={{ minWidth: 455, '@media screen and (max-width: 555px)': { minWidth: '100%' } }}>\r\n                    <CardContent>\r\n                        <Typography sx={{ fontSize: 18, fontWeight: 400 }} color=\"text.secondary\" gutterBottom>\r\n                            Latest Activity\r\n                        </Typography>\r\n                        <Card sx={{ minWidth: 455, '@media screen and (max-width: 555px)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                            <CardContent>\r\n                                <Typography sx={{ fontSize: 16, fontWeight: 300 }} color=\"text.secondary\" gutterBottom>\r\n                                    {PatientSData.length}  total Latest Activity found\r\n                                </Typography>\r\n                                <div className=\"Order Page\">\r\n                                    <DataTableExtensions export={false} print={false}\r\n                                        {...tableData}\r\n                                    >\r\n                                        <DataTable\r\n                                            noHeader\r\n                                            defaultSortField=\"id\"\r\n                                            defaultSortAsc={false}\r\n                                            pagination\r\n                                            highlightOnHover\r\n                                        />\r\n                                    </DataTableExtensions>\r\n                                </div>\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </CardContent>\r\n\r\n                </Card>\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ClinicActivity","// components\r\nimport Page from '@layout/Page';\r\nimport ModalWindow from '@components/ModalWindow';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Content from '@components/Reviews/Content';\r\nimport ReviewsRatingList from '@components/Reviews/List';\r\nimport DataTable from 'react-data-table-component';\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Badge from '@mui/material/Badge';\r\nimport { Stack } from '@mui/material';\r\n\r\n// hooks\r\nimport { useState, useEffect } from 'react';\r\nimport { GetAllPatientData, GetUpcommingAppointment } from '@components/Api/AllApi';\r\nimport { Link } from 'react-router-dom';\r\nimport Sidebar from '@layout/Sidebar';\r\nimport Panel from '@layout/Panel';\r\n\r\nconst UpcommingAppointment = () => {\r\n    const [selectedTab, setSelectedTab] = useState('');\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const smallScreen = window.matchMedia('(max-width: 1038.98px)').matches;\r\n    const [PatientSData, setPatientSData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n\r\n    const handleModalClose = () => {\r\n        setOpenModal(false);\r\n        setSelectedTab('');\r\n    }\r\n\r\n    window.addEventListener('resize', () => {\r\n        if (smallScreen) {\r\n            handleModalClose();\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchTemplateData = async () => {\r\n            try {\r\n                const data = await GetUpcommingAppointment();\r\n                console.log(data, \"This Is all GetUpcommingAppointment Data!\");\r\n                setPatientSData(data.data || []);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchTemplateData();\r\n    }, [count]);\r\n\r\n    console.log(PatientSData, \"AAAAAAAAAAAAAAAAA\")\r\n    const columns = [\r\n\r\n        {\r\n            name: 'Date/Time',\r\n            selector: (row) => {\r\n                const createdAt = new Date(row.created_at);\r\n                const options = {\r\n                    year: 'numeric',\r\n                    month: '2-digit',\r\n                    day: '2-digit',\r\n                    hour: '2-digit',\r\n                    minute: '2-digit',\r\n                    second: '2-digit',\r\n                    hour12: false,\r\n                };\r\n                return createdAt.toLocaleString('en-US', options);\r\n            },\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Appointment Details',\r\n            selector: (row) => `${row.city + row.mname},w/ ${row.state + row.lname}`,\r\n            sortable: true,\r\n        },\r\n\r\n\r\n\r\n    ];\r\n\r\n\r\n    const data = PatientSData.map((item) => ({\r\n        id: item?.id || '',\r\n        name: item?.name || '',\r\n        mname: item?.patient?.[0]?.lname || '',\r\n        lname: item?.doctor?.[0]?.lname || '',\r\n        city: item?.patient?.[0]?.name || '',\r\n        state: item?.doctor?.[0]?.name || '',\r\n        created_at: item?.created_at || '',\r\n        updated_at: item?.updated_at || '',\r\n    }));\r\n\r\n\r\n    const tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n    return (\r\n        // <Tab.Container transition={true} activeKey={selectedTab} onSelect={setSelectedTab}>\r\n        //     <Page title=\"My Order\">\r\n        <>\r\n            <div key=\"balance\">\r\n                <Card sx={{ minWidth: '100%', '@media screen and (max-width: 555px,)': { minWidth: '100%' } }}>\r\n                    <CardContent>\r\n                        <Typography sx={{ fontSize: 18, fontWeight: 400 }} color=\"text.secondary\" gutterBottom>\r\n                            Upcoming Appointments\r\n                        </Typography>\r\n                        <Card sx={{ minWidth: '100%', '@media screen and (max-width: 555px,)': { minWidth: '100%' }, backgroundColor: '#F1F5F8' }}>\r\n                            <CardContent>\r\n                                <Typography sx={{ fontSize: 16, fontWeight: 300 }} color=\"text.secondary\" gutterBottom>\r\n                                    {PatientSData.length}  total Upcoming Appointments found\r\n                                </Typography>\r\n                                <div className=\"Order Page\">\r\n                                    <DataTableExtensions export={false} print={false}\r\n                                        {...tableData}\r\n                                    >\r\n                                        <DataTable\r\n                                            noHeader\r\n                                            defaultSortField=\"id\"\r\n                                            defaultSortAsc={false}\r\n                                            pagination\r\n                                            highlightOnHover\r\n                                        />\r\n                                    </DataTableExtensions>\r\n                                </div>\r\n\r\n                            </CardContent>\r\n\r\n                        </Card>\r\n                    </CardContent>\r\n\r\n                </Card>\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UpcommingAppointment","// components\nimport Page from '@layout/Page';\nimport Statistics from '@widgets/Statistics';\nimport PaymentsHistory from '@widgets/PaymentsHistory';\nimport RecentTests from '@widgets/RecentTests';\nimport Sidebar from '@layout/Sidebar';\nimport Panel from '@layout/Panel';\nimport { Grid } from '@mui/material';\nimport PatientCalendar from '@widgets/PatientCalendar';\nimport { useState } from 'react';\nimport PatientsGenderLineChart from '@widgets/PatientsGenderLineChart';\nimport EventsCompactCalendar from '@widgets/EventsCompactCalendar';\nimport HealthIndexChart from '@widgets/HealthIndexChart';\nimport { useEffect } from 'react';\nimport { GetAllPatientData, GetAppointmtentREwie } from '@components/Api/AllApi';\nimport ClinicActivity from './ClinicActivity';\nimport UpcommingAppointment from './UpcommingAppointment';\n\nconst DashboardK = () => {\n\n    const [currentView, setView] = useState('day');\n\n    let pageTitle = '';\n    switch (currentView) {\n        case 'week':\n            pageTitle = 'Available Appointments Time';\n            break;\n        case 'month':\n            pageTitle = 'Appointments Schedule';\n            break;\n        default:\n            pageTitle = 'Your appointments';\n            break;\n    }\n\n\n    const [PatientData, setPatientData] = useState(false)\n    const [AppointmentRequestData, setAppointmentRequestData] = useState(false)\n\n\n    useEffect(() => {\n        let TotalPatientData = GetAllPatientData()\n        if (TotalPatientData) {\n            TotalPatientData.then((data) => {\n                console.log(data, \"Total Active Patient!\")\n                setPatientData(data?.result || '')\n            })\n        }\n        let TotalAppointmentRequest = GetAppointmtentREwie()\n        if (TotalAppointmentRequest) {\n            TotalAppointmentRequest.then((data) => {\n                console.log(data, \"  Total Appointment Request!\")\n                setAppointmentRequestData(data?.result || '')\n            })\n        }\n\n    }, [])\n\n\n    return (\n        <>\n            <Sidebar />\n            <Panel />\n            <Page title=\" Clinic Dashboard\">\n                <Grid container >\n                    <Grid items xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-cause\">\n                            <Statistics data={{ type: 'cause', value: PatientData.length, text: 'Total Active Patients' }} />\n                        </div>\n                    </Grid>\n                    <Grid items  xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-teeth\">\n                            <Statistics data={{ type: 'teeth', value: '5', text: 'Today Valid Certifications' }} />\n                        </div>\n                    </Grid>\n                    <Grid items  xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: '5', text: 'Certifications Expiring soon' }} />\n                        </div>\n                    </Grid>\n                    <Grid items  xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-cause\">\n                            <Statistics data={{ type: 'cause', value: '2', text: 'Total Appointments Today' }} />\n                        </div>\n                    </Grid>\n                    <Grid items  xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-teeth\">\n                            <Statistics data={{ type: 'teeth', value: '0', text: 'Unread Messages' }} />\n                        </div>\n                    </Grid>\n                    <Grid items  xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: '0', text: 'New Tasks' }} />\n                        </div>\n                    </Grid>\n                    <Grid items  xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: '0', text: 'New Appointment Requests' }} />\n                        </div>\n                    </Grid>\n                    <Grid items  xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: '0', text: 'New Appointment Requests' }} />\n                        </div>\n                    </Grid>\n                    <Grid items  xs={12} sm={6} md={4}>\n                        <div style={{ margin: '4px' }} key=\"stat-heart\">\n                            <Statistics data={{ type: 'heart', value: AppointmentRequestData.length, text: 'New Appointment Requests' }} />\n                        </div>\n                    </Grid>\n\n                </Grid>\n                <Grid container>\n                    <Grid items xs={12} sm={6} md={3}>\n\n                        <div style={{ margin: '4px' }} key=\"events-compact\">\n                            <EventsCompactCalendar />\n                        </div>\n                    </Grid>\n                    <Grid items xs={12} sm={6} md={9}>\n\n                        <div style={{ margin: '4px' }} key=\"health-index\">\n                            <HealthIndexChart variant=\"both\" />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid items xs={12} md={6} >\n\n                        <div style={{ margin: '4px' }} key=\"events-compact\">\n                            <ClinicActivity />\n                        </div>\n                    </Grid>\n                    <Grid items xs={12} md={6}>\n\n                        <div style={{ margin: '4px' }} key=\"health-index\">\n                            <UpcommingAppointment />\n                        </div>\n                    </Grid>\n                </Grid>\n\n                {/* <div key=\"payments-history\">\n                <PaymentsHistory variant=\"compact\"/>\n            </div>\n            <div key=\"recent-tests\">\n                <RecentTests/>\n            </div> */}\n            </Page>\n        </>\n\n    )\n}\n\nexport default DashboardK;","// styling\nimport {colors, flex, textSizes} from '@styles/vars';\nimport styled from 'styled-components/macro';\nimport {darken} from 'polished';\n\nconst Btn = styled.button`\n  min-width: 20px;\n  min-height: 20px;\n  padding: 2px;\n  border-radius: 50%;\n  background-color: ${colors.error};\n  color: #fff;\n  display: flex;\n  ${flex.center};\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  font-size: ${textSizes[12]};\n  line-height: 1;\n  will-change: transform;\n  z-index: 10;\n  transition: background-color var(--transition), transform var(--transition);\n\n  &:hover {\n    background-color: ${darken(0.1, colors.error)};\n    transform: scale(1.1);\n  }\n  \n  .icon {\n    margin-top: -1px;\n  }\n`;\n\nconst CloseBtn = ({handler}) => {\n    return (\n        <Btn onClick={handler}>\n            <i className=\"icon icon-close\"/>\n        </Btn>\n    )\n}\n\nexport default CloseBtn;","// styled components\nimport { EventsCalendar, Container, Popup, Backdrop } from '@widgets/EventsCompactCalendar/style';\n\n// components\nimport Widget from '@components/Widget';\nimport Calendar from 'react-calendar';\nimport Timestamp from '@ui/Timestamp';\nimport Grow from '@mui/material/Grow';\nimport CloseBtn from '@components/ModalWindow/CloseBtn';\n\n// hooks\nimport { useState, useRef } from 'react';\n\n// utils\nimport { nanoid } from 'nanoid';\nimport moment from 'moment';\nimport { Typography } from '@mui/material';\n\nconst EventsCompactCalendar = () => {\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [popupVisible, setPopupVisible] = useState(false);\n    const popupRef = useRef(null);\n\n    const events = [\n        {\n            date: moment(),\n            title: 'Medical conference',\n        },\n        \n    ]\n\n\n    const isToday = (date) => {\n        return moment(date).isSame(moment(), 'day');\n    };\n    const hasEvents = date => events.filter(event => moment(event.date).isSame(date, 'day')).length > 0;\n\n    const drawPopup = date => {\n        const eventsOnDate = events.filter(event => moment(event.date).isSame(date, 'day'));\n        return eventsOnDate.map(event => {\n            return (\n                <div key={nanoid(5)}>\n                    <Timestamp date={date} time={true} />\n                    <h3>{event.title}</h3>\n                </div>\n            )\n        });\n    }\n\n    const config = {\n        as: Calendar,\n        locale: 'en-US',\n\n        navigationLabel: ({ date }) => `${moment(date).format('MMMM, YYYY')}`,\n        navigationAriaLabel: 'Current month',\n        prevLabel: <i className=\"icon icon-chevron-left\" />,\n        nextLabel: <i className=\"icon icon-chevron-right\" />,\n        prev2Label: null,\n        next2Label: null,\n        nextAriaLabel: 'Next month',\n        prevAriaLabel: 'Previous month',\n        tileContent: ({ date }) => hasEvents(date) ? <span className=\"bar\" /> : null,\n        tileClassName: ({ date }) => hasEvents(date) ? 'active' : null,\n        onClickDay: (value) => {\n            setSelectedDate(value);\n            setPopupVisible(true);\n        },\n    }\n\n    return (\n        <Widget name=\"EventsCompactCalendar\">\n            <Container>\n                <Typography m={1} sx={{ fontSize: 22, fontWeight: 600 }}>Quick Calender</Typography>\n                <EventsCalendar {...config} />\n\n            </Container>\n        </Widget>\n    )\n}\n\nexport default EventsCompactCalendar;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from '@styles/vars';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100%;\n  ${flex.col};\n  align-items: center;\n`;\n\nexport const Popup = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg,\n  })};\n  padding: 20px;\n  border-radius: 8px;\n  ${flex.col};\n  gap: 16px;\n  margin: auto;\n  width: calc(100% - 40px);\n  max-width: 320px;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 40px);\n`;\n\nexport const EventsCalendar = styled.div`\n  ${flex.col};\n  gap: 8px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin: 2px;\n  flex-grow: 1;\n\n  .react-calendar {\n    flex-grow: 1;\n    height: 100%;\n\n    &__navigation {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n      border-radius: 8px;\n      min-height: 40px;\n      padding: 10px 22px;\n      display: flex;\n      ${flex.between};\n      font-size: ${textSizes['14']};\n      margin: 0 2px;\n\n      &__label {\n        pointer-events: none;\n      }\n    }\n\n    &__viewContainer {\n      ${flex.col};\n      flex-grow: 1;\n    }\n\n    &__tile {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n\n      .bar {\n        opacity: 0;\n        transition: opacity var(--transition);\n      }\n    }\n\n    &__year-view__months {\n      gap: 20px 0;\n      margin-top: 20px;\n    }\n\n    &__month-view {\n      height: 100%;\n\n      & > div {\n        height: 100%;\n        align-items: stretch;\n      }\n\n      & > div > div {\n        ${flex.col};\n        gap: 8px;\n        justify-content: space-between;\n        height: 100%;\n        padding: 0 24px 20px;\n      }\n\n      &__weekdays {\n        text-transform: uppercase;\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        text-align: center;\n        order: 1;\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        justify-items: center;\n\n        abbr {\n          text-decoration: none;\n        }\n\n        ${breakpoints.mobileL} {\n          gap: 8px;\n\n          &__weekday {\n            width: 40px;\n          }\n        }\n      }\n\n      &__days {\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        grid-gap: 20px 0;\n        justify-items: center;\n\n        &__day {\n          &.active {\n            color: ${colors.blue};\n            cursor: pointer;\n          }\n\n          &:not(&.active) {\n            pointer-events: none;\n          }\n\n          &--neighboringMonth {\n            opacity: .5;\n          }\n        }\n\n        ${breakpoints.mobileL} {\n          grid-gap: 8px;\n\n          &__day {\n            width: 40px;\n            height: 40px;\n            border-radius: 4px;\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            position: relative;\n\n            &.active {\n              color: inherit;\n\n              .bar {\n                opacity: 1;\n                display: block;\n                position: absolute;\n                left: 50%;\n                bottom: 8px;\n                border-radius: 2px;\n                width: 16px;\n                height: 2px;\n                background-color: ${colors.blue};\n                transform: translateX(-50%);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, textSizes, breakpoints, flex} from '@styles/vars';\n\nexport const HealthIndexChartWrapper = styled.div`\n  height: 100%;\n  ${flex.col};\n  justify-content: space-between;\n\n  .total {\n    display: flex;\n    gap: 40px;\n    margin: -4px 24px 0;\n    position: relative;\n\n    &_block {\n      font-size: ${textSizes['12']};\n\n      .counter {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n\n      .spacer {\n        opacity: 0;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      &--cured .h1 {\n        color: ${colors.azure};\n      }\n\n      &--sick {\n        position: relative;\n\n        .h1 {\n          color: ${colors.peach};\n        }\n\n        &:before {\n          content: '';\n          height: 100%;\n          width: 1px;\n          background: ${theme('theme', {\n            light: '#A2C0D4',\n            dark: '#383D40',\n          })};\n          position: absolute;\n          top: 0;\n          left: -20px;\n        }\n      }\n    }\n\n    ${breakpoints.tablet} {\n      .total_block {\n        font-size: ${textSizes['14']};\n\n        .hidden {\n          display: inline;\n        }\n      }\n    }\n\n    ${breakpoints.laptop} {\n      .total_block {\n        font-size: ${textSizes['16']};\n      }\n    }\n  }\n`;","export const y2020 = [\n    {cured: 314, sick: 200},\n    {cured: 200, sick: 400},\n    {cured: 265, sick: 120},\n    {cured: 156, sick: 300},\n    {cured: 412, sick: 200},\n    {cured: 280, sick: 500},\n    {cured: 251, sick: 130},\n    {cured: 180, sick: 300},\n    {cured: 304, sick: 150},\n    {cured: 505, sick: 408},\n    {cured: 328, sick: 200},\n    {cured: 254, sick: 90},\n    {cured: 301, sick: 566},\n    {cured: 459, sick: 189},\n    {cured: 354, sick: 480},\n    {cured: 264, sick: 400},\n    {cured: 309, sick: 200},\n    {cured: 185, sick: 500},\n];\n\nexport const y2021 = [\n    {cured: 450, sick: 250},\n    {cured: 150, sick: 380},\n    {cured: 370, sick: 200},\n    {cured: 300, sick: 180},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 600},\n    {cured: 200, sick: 300},\n    {cured: 400, sick: 150},\n    {cured: 348, sick: 130},\n    {cured: 400, sick: 280},\n    {cured: 200, sick: 400},\n    {cured: 300, sick: 241},\n    {cured: 380, sick: 480},\n    {cured: 200, sick: 380},\n    {cured: 400, sick: 200},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 300},\n    {cured: 300, sick: 450},\n];\n\nexport const y2022 = [\n    {cured: 200, sick: 300},\n    {cured: 250, sick: 350},\n    {cured: 390, sick: 240},\n    {cured: 450, sick: 320},\n    {cured: 550, sick: 250},\n    {cured: 420, sick: 200},\n    {cured: 368, sick: 198},\n    {cured: 250, sick: 370},\n    {cured: 322, sick: 200},\n    {cured: 450, sick: 270},\n    {cured: 210, sick: 394},\n    {cured: 180, sick: 270},\n    {cured: 380, sick: 480},\n    {cured: 390, sick: 550},\n    {cured: 450, sick: 210},\n    {cured: 470, sick: 360},\n    {cured: 360, sick: 190},\n    {cured: 300, sick: 250},\n];\n","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport {HealthIndexChartWrapper} from '@widgets/HealthIndexChart/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {ScatterChart, Scatter, ResponsiveContainer, Tooltip, Cell} from 'recharts';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport ChartTooltip from '@components/Chart/Tooltip';\nimport CountUp from 'react-countup';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport {useTheme} from 'styled-components';\n\n// data placeholder\nimport {y2020, y2021, y2022} from '@db/health';\n\nconst HealthIndexChart = ({variant}) => {\n    const {theme} = useTheme();\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n\n    const averages = [\n        {cured: 75.08, sick: 45.27},\n        {cured: 84.51, sick: 33.12},\n        {cured: 67.14, sick: 48.65},\n    ]\n\n    const getCurrentData = () => {\n        switch (index) {\n            default:\n            case 0:\n                return y2020;\n            case 1:\n                return y2021;\n            case 2:\n                return y2022;\n        }\n    }\n    const data = getCurrentData();\n\n    const CustomScatterShape = ({cx, cy, fill, ...props}) => {\n        const isDominant = variant === 'both' ? props.dom === props.dataKey : props.dataKey === 'cured';\n\n        return (\n            <svg width=\"10\" height=\"222\" viewBox=\"0 0 10 222\" x={cx} y={cy} fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n                {\n                    isDominant &&\n                    <path opacity=\"0.5\" d=\"M5 28.3799V220.38\"\n                          stroke={`url(#scatter_${props.dataKey})`} strokeWidth=\"2\"\n                          strokeLinecap=\"round\"/>\n                }\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                      d=\"M5 10C7.76142 10 10 7.76142 10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10Z\"\n                      fill={fill}/>\n                <defs>\n                    <linearGradient id=\"scatter_cured\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.azure}/>\n                    </linearGradient>\n                    <linearGradient id=\"scatter_sick\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.peach}/>\n                    </linearGradient>\n                </defs>\n            </svg>\n        );\n    }\n\n    return (\n        <Widget name=\"HealthIndexChart\">\n            <WidgetNav sx={{fontSize:22,fontWeight:600}} title=\"Clinic Growth\" handler={navigate}/>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <HealthIndexChartWrapper>\n                    <div className=\"total\">\n                        <div className=\"total_block total_block--cured\">\n                            <span className=\"spacer h1\">{averages[index].cured}</span>\n                            <CountUp className=\"counter h1\" end={averages[index].cured} duration={2} decimals={2} />\n                            <span><span className=\"hidden\">New</span> Patients</span>\n                        </div>\n                        {\n                            variant === 'both' && (\n                                <div className=\"total_block total_block--sick\">\n                                    <span className=\"spacer h1\">{averages[index].sick}</span>\n                                    <CountUp className=\"counter h1\" end={averages[index].sick} duration={2} decimals={2} />\n                                    <span><span className=\"hidden\">New</span> Certificates</span>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                        <ScatterChart margin={false} data={data}>\n                            {\n                                variant === 'both' &&\n                                <Scatter dataKey=\"sick\" shape={CustomScatterShape}>\n                                    {data.map((entry, i) => {\n                                        return (\n                                            <Cell key={`cell-${i}`}\n                                                  fill={colors.peach}\n                                                  dom={entry.sick > entry.cured ? 'sick' : 'cured'}\n                                                  dataKey=\"sick\"/>\n                                        )\n                                    })}\n                                </Scatter>\n                            }\n                            <Scatter dataKey=\"cured\" shape={CustomScatterShape}>\n                                {data.map((entry, i) => {\n                                    return (\n                                        <Cell key={`cell-${i}`}\n                                              fill={colors.azure}\n                                              dom={entry.cured > entry.sick ? 'cured' : 'sick'}\n                                              dataKey=\"cured\"/>\n                                    )\n                                })}\n                            </Scatter>\n                            <Tooltip cursor={false} content={<ChartTooltip right/>}/>\n                        </ScatterChart>\n                    </ResponsiveContainer>\n                    <Legend overlay={true}>\n                        <LegendItem color=\"azure\" legend=\"New Patients\"/>\n                        {variant === 'both' && <LegendItem color=\"peach\" legend=\"New Certificates\"/>}\n                    </Legend>\n                </HealthIndexChartWrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nHealthIndexChart.propTypes = {\n    variant: PropTypes.oneOf(['health', 'both']).isRequired\n}\n\nexport default HealthIndexChart;","// components\nimport Widget from '@components/Widget';\nimport AppointmentsCalendar from '@components/AppointmentsCalendar';\n\nconst PatientCalendar = ({handler, current}) => {\n    return (\n        <Widget name=\"PatientCalendar\">\n            <AppointmentsCalendar current={current} viewChangeHandler={handler} type=\"patient\"/>\n        </Widget>\n    )\n}\n\nexport default PatientCalendar;","export const y2019 = [\n    {\n        name: 'January',\n        men: 220,\n        women: 350\n    },\n    {\n        name: 'February',\n        men: 185,\n        women: 214\n    },\n    {\n        name: 'March',\n        men: 294,\n        women: 305\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 214\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 288,\n        women: 265\n    },\n    {\n        name: 'July',\n        men: 355,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 218,\n        women: 301\n    },\n    {\n        name: 'September',\n        men: 180,\n        women: 250\n    },\n    {\n        name: 'October',\n        men: 274,\n        women: 145\n    },\n    {\n        name: 'November',\n        men: 387,\n        women: 218\n    },\n    {\n        name: 'December',\n        men: 281,\n        women: 311\n    },\n];\n\nexport const y2020 = [\n    {\n        name: 'January',\n        men: 311,\n        women: 205\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 199,\n        women: 288\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 511,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 300,\n        women: 220\n    },\n];\n\nexport const y2021 = [\n    {\n        name: 'January',\n        men: 566,\n        women: 309\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 381,\n        women: 240\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 480,\n        women: 355\n    },\n    {\n        name: 'December',\n        men: 500,\n        women: 600\n    },\n];\n\nexport const y2022 = [\n    {\n        name: 'January',\n        men: 303,\n        women: 260\n    },\n    {\n        name: 'February',\n        men: 283,\n        women: 344\n    },\n    {\n        name: 'March',\n        men: 400,\n        women: 350\n    },\n    {\n        name: 'April',\n        men: 340,\n        women: 220\n    },\n    {\n        name: 'May',\n        men: 374,\n        women: 300\n    },\n    {\n        name: 'June',\n        men: 200,\n        women: 250\n    },\n    {\n        name: 'July',\n        men: 399,\n        women: 200\n    },\n    {\n        name: 'August',\n        men: 366,\n        women: 415\n    },\n    {\n        name: 'September',\n        men: 220,\n        women: 180\n    },\n    {\n        name: 'October',\n        men: 155,\n        women: 280\n    },\n    {\n        name: 'November',\n        men: 202,\n        women: 140\n    },\n    {\n        name: 'December',\n        men: 70,\n        women: 140\n    },\n];","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport CartesianChart from '@components/CartesianChart';\nimport LegendList from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components'\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport moment from 'moment';\nimport {getMonthArray} from '@utils/dates';\n\n// data placeholder\nimport {y2019, y2020, y2021, y2022} from '@db/gender';\nimport {rgba} from 'polished';\n\nconst PatientsGenderLineChart = () => {\n    const isMobile = useWindowSize().width < 768;\n    const {theme} = useTheme();\n    const periods = ['2019', '2020', '2021', '2022'];\n    const {index, navigate} = useArrayNav(periods);\n\n    // common line props\n    const common = {\n        type:\"monotone\",\n        strokeWidth: 3,\n        dot: false\n    }\n\n    const chartElems = [\n        {\n            ...common,\n            dataKey: \"men\",\n            stroke: colors.azure,\n            activeDot: {r: 4, fill: colors.azure, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.azure, .5)})`\n            }\n        },\n        {\n            ...common,\n            dataKey: \"women\",\n            stroke: colors.peach,\n            activeDot: {r: 4, fill: colors.peach, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.peach, .5)})`\n            }\n        }\n    ];\n\n    const currentData = () => {\n        switch (periods[index]) {\n            case '2019':\n                return y2019\n            case '2020':\n                return y2020\n            case '2021':\n                return y2021\n            default:\n            case '2022':\n                return y2022\n        }\n    }\n\n    const data = currentData();\n\n    return (\n        <Widget name=\"PatientsGenderLineChart\" mobile={400}>\n            <WidgetHeader title=\"Patients gender\" flex=\"column\">\n                <Navigator handler={navigate} text={periods[index]} style={{margin: '0 -22px 0'}} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <Labels>\n                    {\n                        getMonthArray().map(({month}) => (\n                            <div key={moment(month).format('MMM')}>\n                                {isMobile ? moment(month).month() + 1 : moment(month).format('MMM')}\n                            </div>\n                        ))\n                    }\n                </Labels>\n                <CartesianChart variant=\"line\" id=\"patientsGender\" data={data} elems={chartElems} />\n                <LegendList overlay={true}>\n                    <LegendItem color=\"azure\" legend=\"men\" />\n                    <LegendItem color=\"peach\" legend=\"women\" />\n                </LegendList>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsGenderLineChart;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, effects, flex, fonts, textSizes} from '@styles/vars';\n\nexport const ListItem = styled.div`\n  border-bottom: ${theme('theme', {\n    light: effects.dashedLight,\n    dark: effects.dashedDark,\n})};\n  padding-bottom: 20px;\n\n  &:not(.bordered):last-of-type {\n    border-bottom: none;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  ${flex.between};\n  margin-bottom: 12px;\n  gap: 20px;\n\n  .main {\n    ${flex.col};\n    gap: 8px;\n\n    .title {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      font-weight: 500;\n    }\n  }\n\n  .payment {\n    align-self: flex-end;\n    font-family: ${fonts.accent};\n    font-weight: 500;\n    display: flex;\n    gap: 8px;\n    font-size: ${textSizes['14']};\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  ${flex.between};\n`;\n\nexport const Date = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  .date {\n    font-size: ${textSizes['14']};\n  }\n\n  .icon {\n    color: ${colors.gray};\n  }\n`;","// styled components\nimport {ListItem, Wrapper, Footer, Date} from './style';\n\n// components\nimport IconLink from '@ui/IconLink';\nimport MenuDots from '@ui/MenuDots';\n\n// utils\nimport moment from 'moment';\n\nconst PaymentItem = ({data, className}) => {\n    const {doctor, title, payment, date} = data;\n    const formattedDate = moment(date).format('dddd, DD MMMM');\n    return (\n        <ListItem className={`list-item ${className ? className : ''}`}>\n            <Wrapper>\n                <div className=\"main\">\n                    <IconLink title={`Dr. ${doctor}`}/>\n                    <span className=\"title\">{title}</span>\n                </div>\n                <span className=\"payment\">\n                    <span className=\"icon\">€</span> {payment.toFixed(2)}\n                </span>\n            </Wrapper>\n            <Footer>\n                <Date>\n                    <i className=\"icon icon-clock\"/>\n                    <span className=\"date\">{formattedDate}</span>\n                </Date>\n                <MenuDots/>\n            </Footer>\n        </ListItem>\n    )\n}\n\nexport default PaymentItem;","const dayBefore = new Date(new Date().getTime() - 24 * 60 * 60 * 1000);\nconst twoDaysBefore = new Date(new Date().getTime() - 2 * 24 * 60 * 60 * 1000);\n\nexport const paymentsHistory = [\n    {\n        doctor: 'John Doe',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'MRI',\n        payment: 99.30,\n        date: new Date()\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'USG + Consultation',\n        payment: 35,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: new Date()\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Keeney Test',\n        payment: 150.95,\n        date: new Date()\n    },\n    {\n        doctor: 'Robert Miller',\n        title: 'Family Planning',\n        payment: 540,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'X-Ray',\n        payment: 70,\n        date: dayBefore\n    },\n    {\n        doctor: 'Samantha Berry',\n        title: 'Psychotherapy',\n        payment: 200,\n        date: dayBefore\n    },\n    {\n        doctor: 'Samantha Berry',\n        title: 'Art therapy session',\n        payment: 80.50,\n        date: dayBefore\n    },\n    {\n        doctor: 'Lucas Bell',\n        title: 'Gastroscopy',\n        payment: 50.90,\n        date: dayBefore\n    },\n    {\n        doctor: 'Elizabeth Jones',\n        title: 'Consultation',\n        payment: 15,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Kimbra Lee',\n        title: 'Vision Test',\n        payment: 20.90,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Kimbra Lee',\n        title: 'Glaucoma Test',\n        payment: 90.95,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Robert Miller',\n        title: 'Family Planning',\n        payment: 450.87,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'John Doe',\n        title: 'USG + Consultation',\n        payment: 40.15,\n        date: twoDaysBefore\n    },\n    {\n        doctor: 'Caren Smith',\n        title: 'Blood Test',\n        payment: 12.70,\n        date: twoDaysBefore\n    },\n]","// styling\nimport styled from 'styled-components/macro';\nimport {flex, breakpoints} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport PaymentItem from '@components/PaymentItem';\nimport Navigator from '@ui/Navigator';\nimport ScrollContainer from '@components/ScrollContainer';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport {getYearDaysArray} from '@utils/dates';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useEffect, useRef} from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport {paymentsHistory} from '@db/payments_history';\n\nconst Container = styled.div`\n  .list {\n    ${flex.col};\n    gap: 20px 24px;\n    padding: 20px 24px;\n\n    .column {\n      ${flex.col};\n      gap: 20px;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .list {\n      ${props => props.variant === 'large' && `\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n      `}\n    }\n  }\n`;\n\nconst PaymentsHistory = ({variant}) => {\n    const days = getYearDaysArray();\n    const todayIndex = moment().diff(moment().startOf('year'), 'days');\n    const {index, setIndex, navigate} = useArrayNav(days);\n    const paymentsByDate = paymentsHistory.filter(payment => moment(payment.date).isSame(days[index].date, 'day'));\n    const payments = variant === 'large' ? paymentsByDate : paymentsHistory;\n    const isTablet = useWindowSize().width >= 768;\n\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const height = useContentHeight(headerRef, footerRef);\n\n    useEffect(() => {\n        setIndex(todayIndex);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [todayIndex]);\n\n    return (\n        <Widget name=\"PaymentsHistory\" mobile={600}>\n            {variant === 'compact' &&\n                <WidgetHeader title=\"Payments history\" elRef={headerRef} style={{paddingBottom: 0}}/>\n            }\n            <WidgetBody style={{padding: 0}}>\n                <ScrollContainer height={height}>\n                    <Container className=\"track\" variant={variant}>\n                        {\n                            payments.length !== 0 ?\n                                <div className=\"list\">\n                                    {\n                                        payments.map((payment, i) => (\n                                            i % 3 === 0 &&\n                                            <div className=\"column\" key={nanoid()}>\n                                                {\n                                                    payments.slice(i, i + 3).map(payment => (\n                                                        <PaymentItem data={payment}\n                                                                     key={nanoid()}\n                                                                     className={isTablet && variant === 'large'}/>\n                                                    ))\n                                                }\n                                            </div>\n                                        ))\n                                    }\n                                </div> : <NoDataPlaceholder/>\n                        }\n                    </Container>\n                </ScrollContainer>\n                {\n                    variant === 'large' &&\n                    <div ref={footerRef} style={{padding: '0 2px 2px'}}>\n                        <Navigator text={days[index].long} handler={e => navigate(e)}\n                                   nextDisabled={index === todayIndex}/>\n                    </div>\n                }\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nPaymentsHistory.propTypes = {\n    variant: PropTypes.oneOf(['compact', 'large']).isRequired\n}\n\nexport default PaymentsHistory;"],"names":["Link","styled","a","withConfig","componentId","textSizes","colors","blue","darken","gray","_ref","_ref$href","href","title","_jsxs","children","_jsx","className","Labels","div","flex","between","fonts","accent","ListItem","li","col","theme","light","highlight","dark","Header","effects","dashedLight","dashedDark","Main","breakpoints","tablet","Button","button","widgetBg","data","doctor","date","AnimatePresence","_objectSpread","as","motion","fadePresence","IconLink","concat","MenuDots","moment","format","handler","sidePadding","disabled","props","_objectWithoutProperties","_excluded","WidgetHeader","style","Nav","onClick","patient_tests","id","type","subtract","periods","_useState","useState","_useState2","_slicedToArray","period","setPeriod","setPeriodIndex","index","Card","center","Info","Content","mobileL","Icon","Widget","name","WidgetBody","color","CountUp","start","end","value","delay","duration","enableScrollSpy","text","setSelectedTab","_useState3","_useState4","setOpenModal","smallScreen","window","matchMedia","matches","_useState5","_useState6","PatientSData","setPatientSData","_useState7","_useState8","count","addEventListener","useEffect","fetchTemplateData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data","wrap","_context","prev","next","GetAllPatientData","sent","console","log","result","t0","error","stop","apply","arguments","tableData","columns","selector","row","sortable","Date","created_at","toLocaleString","year","month","day","hour","minute","second","hour12","map","item","mname","lname","city","state","updated_at","_Fragment","sx","minWidth","CardContent","Typography","fontSize","fontWeight","gutterBottom","backgroundColor","length","DataTableExtensions","export","print","DataTable","noHeader","defaultSortField","defaultSortAsc","pagination","highlightOnHover","GetUpcommingAppointment","_item$patient","_item$patient$","_item$doctor","_item$doctor$","_item$patient2","_item$patient2$","_item$doctor2","_item$doctor2$","patient","currentView","PatientData","setPatientData","AppointmentRequestData","setAppointmentRequestData","TotalPatientData","then","TotalAppointmentRequest","GetAppointmtentREwie","Sidebar","Panel","Page","Grid","container","items","xs","sm","md","margin","Statistics","EventsCompactCalendar","HealthIndexChart","variant","ClinicActivity","UpcommingAppointment","setSelectedDate","setPopupVisible","events","useRef","hasEvents","filter","event","isSame","config","Calendar","locale","navigationLabel","navigationAriaLabel","prevLabel","nextLabel","prev2Label","next2Label","nextAriaLabel","prevAriaLabel","tileContent","_ref2","tileClassName","_ref3","onClickDay","Container","m","EventsCalendar","bodyBg","HealthIndexChartWrapper","azure","peach","laptop","y2020","cured","sick","y2021","y2022","useTheme","usePeriodNav","_useArrayNav","useArrayNav","navigate","averages","getCurrentData","CustomScatterShape","cx","cy","fill","isDominant","dom","dataKey","width","height","viewBox","x","y","xmlns","opacity","d","stroke","strokeWidth","strokeLinecap","fillRule","clipRule","x1","y1","x2","y2","gradientUnits","stopColor","offset","WidgetNav","padding","overflow","decimals","ResponsiveContainer","ScatterChart","Scatter","shape","entry","i","Cell","Tooltip","cursor","content","ChartTooltip","right","Legend","overlay","LegendItem","legend","current","AppointmentsCalendar","viewChangeHandler","y2019","men","women","isMobile","useWindowSize","common","dot","chartElems","activeDot","r","rgba","currentData","mobile","Navigator","getMonthArray","CartesianChart","elems","LegendList","Wrapper","Footer","payment","formattedDate","toFixed","dayBefore","getTime","twoDaysBefore","paymentsHistory","days","getYearDaysArray","todayIndex","diff","startOf","setIndex","paymentsByDate","payments","isTablet","headerRef","footerRef","useContentHeight","elRef","paddingBottom","ScrollContainer","slice","PaymentItem","nanoid","NoDataPlaceholder","ref","long","e","nextDisabled"],"sourceRoot":""}