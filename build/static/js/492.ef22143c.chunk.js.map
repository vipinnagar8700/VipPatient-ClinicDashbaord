{"version":3,"file":"static/js/492.ef22143c.chunk.js","mappings":"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","sources":["UI/Legend/LegendItem/index.jsx","UI/Legend/index.jsx","UI/Legend/style.js","components/CartesianChart/index.jsx","utils/recharts.js","components/Chart/Labels/index.jsx","db/epi_period.js","widgets/EpiContextAreaChart/index.jsx","pages/DashboardH.jsx","utils/numbers.js","components/ModalWindow/CloseBtn/index.jsx","widgets/EventsCompactCalendar/index.jsx","widgets/EventsCompactCalendar/style.js","widgets/HealthIndexChart/style.js","db/health.js","widgets/HealthIndexChart/index.jsx"],"sourcesContent":["// styled components\nimport {ListItem} from '../style';\nimport {LegendBadge} from '@ui/Badge/style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst LegendItem = ({color, legend}) => {\n    return (\n        <ListItem>\n            <LegendBadge color={color} /> {legend}\n        </ListItem>\n    )\n}\n\nLegendItem.propTypes = {\n    color: PropTypes.string.isRequired,\n    legend: PropTypes.string.isRequired\n}\n\nexport default LegendItem;","// styled components\nimport {List} from './style';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Legend = ({children, overlay}) => {\n    return <List overlay={overlay}>{children}</List>\n}\n\nLegend.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    overlay: PropTypes.bool,\n}\n\nexport default Legend;","import styled from 'styled-components/macro';\nimport {textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px 16px;\n  ${props => props.overlay && `\n    position: absolute;\n    bottom: 22px;\n    left: 24px\n  `}\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-transform: uppercase;\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`","// styling\nimport {colors} from '@styles/vars';\nimport {StyledTooltip} from '@components/Chart/Tooltip';\n\n// components\nimport {LineChart, Line, ResponsiveContainer, CartesianGrid, AreaChart, Area, Tooltip} from 'recharts';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useLayoutEffect, useState} from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport {generateGridPoints} from '@utils/recharts';\n\nconst CartesianChart = ({variant, id, data, elems, ...props}) => {\n    const {width} = useWindowSize();\n    const {theme} = useTheme();\n    const [points, setPoints] = useState([]);\n    const isTablet = width >= 768;\n\n    // generate grid points based on the container width\n    useLayoutEffect(() => {\n        setPoints(generateGridPoints(id));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [width]);\n\n    // custom tooltip\n    const renderTooltip = (props) => {\n        const {active, payload} = props;\n        if (active && payload && payload.length) {\n            return (\n                <StyledTooltip className=\"multiple\">\n                    {payload.map((item, index) => (\n                        <div className=\"item\" key={index}>\n                            <div className=\"color\" style={{background: item.stroke}} />\n                            <div className=\"value\">{item.value}</div>\n                        </div>\n                    ))}\n                </StyledTooltip>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <ResponsiveContainer height={isTablet ? '100%' : props.height} width=\"100%\" id={id}>\n            {\n                variant === 'line' ?\n                    <LineChart margin={false} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Line key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </LineChart>\n                    :\n                    <AreaChart margin={{ top: 5 }} data={data} {...props}>\n                        <defs>\n                            <linearGradient id=\"dark\"\n                                            x1=\"0.00669497\"\n                                            y1=\"1\"\n                                            x2=\"0.00669497\"\n                                            y2=\"327.445\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.512299\" stopColor={colors.dark}/>\n                                <stop offset=\"0.99905\" stopColor={colors.dark} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            <linearGradient id=\"light\"\n                                            x1=\"0.00385257\"\n                                            y1=\"1\"\n                                            x2=\"0.00385257\"\n                                            y2=\"328.377\"\n                                            gradientUnits=\"userSpaceOnUse\">\n                                <stop stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                                <stop offset=\"0.504355\" stopColor={colors.light_gray}/>\n                                <stop offset=\"0.99905\" stopColor={colors.light_gray} stopOpacity=\"0.2\"/>\n                            </linearGradient>\n                            {props.children}\n                        </defs>\n                        <CartesianGrid stroke={`url(#${theme === 'dark' ? 'dark' : 'light'})`}\n                                       strokeDasharray=\"6\"\n                                       strokeLinecap=\"square\"\n                                       horizontal={false}\n                                       verticalPoints={points}\n                                       width=\"100%\"\n                                       height=\"100%\"\n                        />\n                        {\n                            elems.map(el => {\n                                return <Area key={el.dataKey} {...el} />\n                            })\n                        }\n                        <Tooltip cursor={false} content={renderTooltip} />\n                    </AreaChart>\n            }\n        </ResponsiveContainer>\n    )\n}\n\nexport default CartesianChart;","// cartesian grid points generator\nexport const generateGridPoints = (id, gutter = 20) => {\n    const gridWidth = document.getElementById(id).offsetWidth;\n\n    let points = [];\n    for (let i = 0; i < gridWidth; i += gutter) {\n        points.push(i);\n    }\n    return points;\n}","import styled from 'styled-components/macro';\nimport {flex, fonts, textSizes} from '@styles/vars';\n\nconst Labels = styled.div`\n  text-transform: uppercase;\n  margin: 0 24px;\n  display: flex;\n  ${flex.between}\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`\n\nexport default Labels","export const year = [\n    {\n        name: 'January',\n        cured: 100,\n        sick: 80,\n    },\n    {\n        name: 'February',\n        cured: 120,\n        sick: 100,\n    },\n    {\n        name: 'March',\n        cured: 140,\n        sick: 120,\n    },\n    {\n        name: 'April',\n        cured: 190,\n        sick: 170,\n    },\n    {\n        name: 'May',\n        cured: 280,\n        sick: 260,\n    },\n    {\n        name: 'June',\n        cured: 200,\n        sick: 180,\n    },\n    {\n        name: 'July',\n        cured: 180,\n        sick: 160,\n    },\n    {\n        name: 'August',\n        cured: 160,\n        sick: 120,\n    },\n    {\n        name: 'September',\n        cured: 140,\n        sick: 80,\n    },\n    {\n        name: 'October',\n        cured: 90,\n        sick: 150,\n    },\n    {\n        name: 'November',\n        cured: 120,\n        sick: 90,\n    },\n    {\n        name: 'December',\n        cured: 300,\n        sick: 164,\n    }\n];\n\nexport const month = [\n    {\n        name: '1',\n        cured: 90,\n        sick: 135,\n    },\n    {\n        name: '2',\n        cured: 150,\n        sick: 120,\n    },\n    {\n        name: '3',\n        cured: 180,\n        sick: 90,\n    },\n    {\n        name: '4',\n        cured: 190,\n        sick: 170,\n    },\n    {\n        name: '5',\n        cured: 280,\n        sick: 260,\n    },\n    {\n        name: '6',\n        cured: 200,\n        sick: 150,\n    },\n    {\n        name: '7',\n        cured: 180,\n        sick: 160,\n    },\n    {\n        name: '8',\n        cured: 160,\n        sick: 120,\n    },\n    {\n        name: '9',\n        cured: 219,\n        sick: 80,\n    },\n    {\n        name: '10',\n        cured: 90,\n        sick: 150,\n    },\n    {\n        name: '11',\n        cured: 315,\n        sick: 300,\n    },\n    {\n        name: '12',\n        cured: 250,\n        sick: 164,\n    },\n    {\n        name: '13',\n        cured: 210,\n        sick: 75,\n    },\n    {\n        name: '14',\n        cured: 350,\n        sick: 300,\n    },\n    {\n        name: '15',\n        cured: 450,\n        sick: 400,\n    }\n];\n\nexport const week = [\n    {\n        name: 'sun',\n        cured: 450,\n        sick: 350,\n    },\n    {\n        name: 'mon',\n        cured: 300,\n        sick: 250,\n    },\n    {\n        name: 'tue',\n        cured: 200,\n        sick: 150,\n    },\n    {\n        name: 'wed',\n        cured: 278,\n        sick: 198,\n    },\n    {\n        name: 'thu',\n        cured: 189,\n        sick: 99,\n    },\n    {\n        name: 'fri',\n        cured: 239,\n        sick: 139,\n    },\n    {\n        name: 'sat',\n        cured: 349,\n        sick: 249,\n    },\n];","// styling\nimport {colors} from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport CartesianChart from '@components/CartesianChart';\n\n// data placeholder\nimport {week} from '@db/epi_period';\n\nconst EpiContextAreaChart = () => {\n    const common = {\n        type: 'monotone',\n        strokeWidth: 3,\n        fillOpacity: .8\n    }\n    const chartElems = [\n        {\n            ...common,\n            dataKey: 'cured',\n            stroke: colors.peach,\n            fill: colors.peach,\n            activeDot: {r: 5, fill: colors.peach, strokeWidth: 0}\n        },\n        {\n            ...common,\n            dataKey: 'sick',\n            stroke: colors.purple,\n            fill:  colors.purple,\n            activeDot: {r: 5, fill: colors.purple, strokeWidth: 0}\n        }\n    ]\n    return (\n        <Widget name=\"EpiContextAreaChart\">\n            <WidgetHeader title=\"Epidemiological context\">\n                <Legend>\n                    <LegendItem legend=\"sick\" color=\"purple\"/>\n                    <LegendItem legend=\"cured\" color=\"peach\"/>\n                </Legend>\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflow: 'hidden', justifyContent: 'space-between'}}>\n                <Labels>\n                    {\n                        week.map(item => {\n                            return (\n                                <span key={item.name}>{item.name}</span>\n                            )\n                        })\n                    }\n                </Labels>\n                <CartesianChart id=\"EpiContextAreaChart\" data={week} elems={chartElems} variant=\"area\" height={300} />\n            </WidgetBody>\n        </Widget>\n    );\n}\n\nexport default EpiContextAreaChart;","// components\nimport Page from '@layout/Page';\nimport EventsCompactCalendar from '@widgets/EventsCompactCalendar';\nimport EpiContextAreaChart from '@widgets/EpiContextAreaChart';\nimport RadarAreaChart from '@widgets/RadarAreaChart';\nimport HealthIndexChart from '@widgets/HealthIndexChart';\nimport DiagnosesDonut from '@widgets/DiagnosesDonut';\n\nconst DashboardH = () => {\n    return (\n        <Page title=\"Dashboard\">\n            <div key=\"events-compact\">\n                <EventsCompactCalendar />\n            </div>\n            <div key=\"epi-context-area\">\n                <EpiContextAreaChart />\n            </div>\n            <div key=\"radar\">\n                <RadarAreaChart />\n            </div>\n            <div key=\"health-index-compact\">\n                <HealthIndexChart variant=\"health\" />\n            </div>\n            <div key=\"diagnoses-donut\">\n                <DiagnosesDonut variant=\"wide\" />\n            </div>\n        </Page>\n    )\n}\n\nexport default DashboardH;","export function numFormatter(num) {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(1) + 'k';\n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(1) + 'm';\n    } else if (num < 900) {\n        return num;\n    }\n}\n\nexport function addZero(num) {\n    return num < 10 ? '0' + num : num;\n}","// styling\nimport {colors, flex, textSizes} from '@styles/vars';\nimport styled from 'styled-components/macro';\nimport {darken} from 'polished';\n\nconst Btn = styled.button`\n  min-width: 20px;\n  min-height: 20px;\n  padding: 2px;\n  border-radius: 50%;\n  background-color: ${colors.error};\n  color: #fff;\n  display: flex;\n  ${flex.center};\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  font-size: ${textSizes[12]};\n  line-height: 1;\n  will-change: transform;\n  z-index: 10;\n  transition: background-color var(--transition), transform var(--transition);\n\n  &:hover {\n    background-color: ${darken(0.1, colors.error)};\n    transform: scale(1.1);\n  }\n  \n  .icon {\n    margin-top: -1px;\n  }\n`;\n\nconst CloseBtn = ({handler}) => {\n    return (\n        <Btn onClick={handler}>\n            <i className=\"icon icon-close\"/>\n        </Btn>\n    )\n}\n\nexport default CloseBtn;","// styled components\nimport {EventsCalendar, Container, Popup, Backdrop} from '@widgets/EventsCompactCalendar/style';\n\n// components\nimport Widget from '@components/Widget';\nimport Calendar from 'react-calendar';\nimport Timestamp from '@ui/Timestamp';\nimport Grow from '@mui/material/Grow';\nimport CloseBtn from '@components/ModalWindow/CloseBtn';\n\n// hooks\nimport {useState, useRef} from 'react';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport moment from 'moment';\nimport { Typography } from '@mui/material';\n\nconst EventsCompactCalendar = () => {\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [popupVisible, setPopupVisible] = useState(false);\n    const popupRef = useRef(null);\n\n    const events = [\n        {\n            date: moment(),\n            title: 'Medical conference',\n        },\n        {\n            date: moment(),\n            title: 'Enterprise meeting',\n        },\n        {\n            date: moment().add(3, 'hours'),\n            title: 'Meeting with Anna Smith',\n        },\n        {\n            date: moment().add(2, 'days').add(1, 'hours'),\n            title: 'Visit gym',\n        },\n        {\n            date: moment().add(2, 'days').add(2, 'hours'),\n            title: 'Prepare for presentation',\n        }\n    ]\n\n    const hasEvents = date => events.filter(event => moment(event.date).isSame(date, 'day')).length > 0;\n\n    const drawPopup = date => {\n        const eventsOnDate = events.filter(event => moment(event.date).isSame(date, 'day'));\n        return eventsOnDate.map(event => {\n            return (\n                <div key={nanoid(5)}>\n                    <Timestamp date={date} time={true} />\n                    <h3>{event.title}</h3>\n                </div>\n            )\n        });\n    }\n\n    const config = {\n        as: Calendar,\n        locale: 'en-US',\n        navigationLabel: ({date}) => `${moment(date).format('MMMM, YYYY')}`,\n        navigationAriaLabel: 'Current month',\n        prevLabel: <i className=\"icon icon-chevron-left\"/>,\n        nextLabel: <i className=\"icon icon-chevron-right\"/>,\n        prev2Label: null,\n        next2Label: null,\n        nextAriaLabel: 'Next month',\n        prevAriaLabel: 'Previous month',\n        tileContent: ({date}) => hasEvents(date) ? <span className=\"bar\"/> : null,\n        tileClassName: ({date}) => hasEvents(date) ? 'active' : null,\n        onClickDay: (value) => {\n            setSelectedDate(value);\n            setPopupVisible(true);\n        },\n    }\n\n    return (\n        <Widget name=\"EventsCompactCalendar\">\n            <Container>\n                <Typography m={1} sx={{fontSize:22,fontWeight:600}}>Quick Calender</Typography>\n                <EventsCalendar {...config} />\n                <Backdrop>\n                    {\n                        selectedDate &&\n                        <Grow in={popupVisible} timeout={300} style={{transformOrigin: '0 0 0'}}>\n                            <Popup ref={popupRef}>\n                                {drawPopup(selectedDate)}\n                                <CloseBtn handler={() => setPopupVisible(false)}/>\n                            </Popup>\n                        </Grow>\n                    }\n                </Backdrop>\n            </Container>\n        </Widget>\n    )\n}\n\nexport default EventsCompactCalendar;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, flex, textSizes, fonts, colors, breakpoints} from '@styles/vars';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 100%;\n  ${flex.col};\n  align-items: center;\n`;\n\nexport const Popup = styled.div`\n  position: relative;\n  z-index: 2;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg,\n  })};\n  padding: 20px;\n  border-radius: 8px;\n  ${flex.col};\n  gap: 16px;\n  margin: auto;\n  width: calc(100% - 40px);\n  max-width: 320px;\n`;\n\nexport const Backdrop = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  width: 100%;\n  height: calc(100% - 40px);\n`;\n\nexport const EventsCalendar = styled.div`\n  ${flex.col};\n  gap: 8px;\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  margin: 2px;\n  flex-grow: 1;\n\n  .react-calendar {\n    flex-grow: 1;\n    height: 100%;\n\n    &__navigation {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg\n      })};\n      border-radius: 8px;\n      min-height: 40px;\n      padding: 10px 22px;\n      display: flex;\n      ${flex.between};\n      font-size: ${textSizes['14']};\n      margin: 0 2px;\n\n      &__label {\n        pointer-events: none;\n      }\n    }\n\n    &__viewContainer {\n      ${flex.col};\n      flex-grow: 1;\n    }\n\n    &__tile {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n\n      .bar {\n        opacity: 0;\n        transition: opacity var(--transition);\n      }\n    }\n\n    &__year-view__months {\n      gap: 20px 0;\n      margin-top: 20px;\n    }\n\n    &__month-view {\n      height: 100%;\n\n      & > div {\n        height: 100%;\n        align-items: stretch;\n      }\n\n      & > div > div {\n        ${flex.col};\n        gap: 8px;\n        justify-content: space-between;\n        height: 100%;\n        padding: 0 24px 20px;\n      }\n\n      &__weekdays {\n        text-transform: uppercase;\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        text-align: center;\n        order: 1;\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        justify-items: center;\n\n        abbr {\n          text-decoration: none;\n        }\n\n        ${breakpoints.mobileL} {\n          gap: 8px;\n\n          &__weekday {\n            width: 40px;\n          }\n        }\n      }\n\n      &__days {\n        display: grid !important;\n        grid-template-columns: repeat(7, minmax(0, 1fr));\n        grid-gap: 20px 0;\n        justify-items: center;\n\n        &__day {\n          &.active {\n            color: ${colors.blue};\n            cursor: pointer;\n          }\n\n          &:not(&.active) {\n            pointer-events: none;\n          }\n\n          &--neighboringMonth {\n            opacity: .5;\n          }\n        }\n\n        ${breakpoints.mobileL} {\n          grid-gap: 8px;\n\n          &__day {\n            width: 40px;\n            height: 40px;\n            border-radius: 4px;\n            background-color: ${theme('theme', {\n              light: light.highlight,\n              dark: dark.highlight\n            })};\n            position: relative;\n\n            &.active {\n              color: inherit;\n\n              .bar {\n                opacity: 1;\n                display: block;\n                position: absolute;\n                left: 50%;\n                bottom: 8px;\n                border-radius: 2px;\n                width: 16px;\n                height: 2px;\n                background-color: ${colors.blue};\n                transform: translateX(-50%);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, textSizes, breakpoints, flex} from '@styles/vars';\n\nexport const HealthIndexChartWrapper = styled.div`\n  height: 100%;\n  ${flex.col};\n  justify-content: space-between;\n\n  .total {\n    display: flex;\n    gap: 40px;\n    margin: -4px 24px 0;\n    position: relative;\n\n    &_block {\n      font-size: ${textSizes['12']};\n\n      .counter {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n\n      .spacer {\n        opacity: 0;\n      }\n\n      .hidden {\n        display: none;\n      }\n\n      &--cured .h1 {\n        color: ${colors.azure};\n      }\n\n      &--sick {\n        position: relative;\n\n        .h1 {\n          color: ${colors.peach};\n        }\n\n        &:before {\n          content: '';\n          height: 100%;\n          width: 1px;\n          background: ${theme('theme', {\n            light: '#A2C0D4',\n            dark: '#383D40',\n          })};\n          position: absolute;\n          top: 0;\n          left: -20px;\n        }\n      }\n    }\n\n    ${breakpoints.tablet} {\n      .total_block {\n        font-size: ${textSizes['14']};\n\n        .hidden {\n          display: inline;\n        }\n      }\n    }\n\n    ${breakpoints.laptop} {\n      .total_block {\n        font-size: ${textSizes['16']};\n      }\n    }\n  }\n`;","export const y2020 = [\n    {cured: 314, sick: 200},\n    {cured: 200, sick: 400},\n    {cured: 265, sick: 120},\n    {cured: 156, sick: 300},\n    {cured: 412, sick: 200},\n    {cured: 280, sick: 500},\n    {cured: 251, sick: 130},\n    {cured: 180, sick: 300},\n    {cured: 304, sick: 150},\n    {cured: 505, sick: 408},\n    {cured: 328, sick: 200},\n    {cured: 254, sick: 90},\n    {cured: 301, sick: 566},\n    {cured: 459, sick: 189},\n    {cured: 354, sick: 480},\n    {cured: 264, sick: 400},\n    {cured: 309, sick: 200},\n    {cured: 185, sick: 500},\n];\n\nexport const y2021 = [\n    {cured: 450, sick: 250},\n    {cured: 150, sick: 380},\n    {cured: 370, sick: 200},\n    {cured: 300, sick: 180},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 600},\n    {cured: 200, sick: 300},\n    {cured: 400, sick: 150},\n    {cured: 348, sick: 130},\n    {cured: 400, sick: 280},\n    {cured: 200, sick: 400},\n    {cured: 300, sick: 241},\n    {cured: 380, sick: 480},\n    {cured: 200, sick: 380},\n    {cured: 400, sick: 200},\n    {cured: 500, sick: 250},\n    {cured: 400, sick: 300},\n    {cured: 300, sick: 450},\n];\n\nexport const y2022 = [\n    {cured: 200, sick: 300},\n    {cured: 250, sick: 350},\n    {cured: 390, sick: 240},\n    {cured: 450, sick: 320},\n    {cured: 550, sick: 250},\n    {cured: 420, sick: 200},\n    {cured: 368, sick: 198},\n    {cured: 250, sick: 370},\n    {cured: 322, sick: 200},\n    {cured: 450, sick: 270},\n    {cured: 210, sick: 394},\n    {cured: 180, sick: 270},\n    {cured: 380, sick: 480},\n    {cured: 390, sick: 550},\n    {cured: 450, sick: 210},\n    {cured: 470, sick: 360},\n    {cured: 360, sick: 190},\n    {cured: 300, sick: 250},\n];\n","// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport {HealthIndexChartWrapper} from '@widgets/HealthIndexChart/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {ScatterChart, Scatter, ResponsiveContainer, Tooltip, Cell} from 'recharts';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport ChartTooltip from '@components/Chart/Tooltip';\nimport CountUp from 'react-countup';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport {useTheme} from 'styled-components';\n\n// data placeholder\nimport {y2020, y2021, y2022} from '@db/health';\n\nconst HealthIndexChart = ({variant}) => {\n    const {theme} = useTheme();\n    const {periods} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n\n    const averages = [\n        {cured: 75.08, sick: 45.27},\n        {cured: 84.51, sick: 33.12},\n        {cured: 67.14, sick: 48.65},\n    ]\n\n    const getCurrentData = () => {\n        switch (index) {\n            default:\n            case 0:\n                return y2020;\n            case 1:\n                return y2021;\n            case 2:\n                return y2022;\n        }\n    }\n    const data = getCurrentData();\n\n    const CustomScatterShape = ({cx, cy, fill, ...props}) => {\n        const isDominant = variant === 'both' ? props.dom === props.dataKey : props.dataKey === 'cured';\n\n        return (\n            <svg width=\"10\" height=\"222\" viewBox=\"0 0 10 222\" x={cx} y={cy} fill=\"none\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n                {\n                    isDominant &&\n                    <path opacity=\"0.5\" d=\"M5 28.3799V220.38\"\n                          stroke={`url(#scatter_${props.dataKey})`} strokeWidth=\"2\"\n                          strokeLinecap=\"round\"/>\n                }\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                      d=\"M5 10C7.76142 10 10 7.76142 10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10Z\"\n                      fill={fill}/>\n                <defs>\n                    <linearGradient id=\"scatter_cured\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.azure}/>\n                    </linearGradient>\n                    <linearGradient id=\"scatter_sick\" x1=\"5.5\" y1=\"220.38\" x2=\"5.5\" y2=\"28.3799\"\n                                    gradientUnits=\"userSpaceOnUse\">\n                        <stop stopColor={theme === 'light' ? light.widgetBg : dark.widgetBg}/>\n                        <stop offset=\"1\" stopColor={colors.peach}/>\n                    </linearGradient>\n                </defs>\n            </svg>\n        );\n    }\n\n    return (\n        <Widget name=\"HealthIndexChart\">\n            <WidgetNav sx={{fontSize:22,fontWeight:600}} title=\"Clinic Growth\" handler={navigate}/>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <HealthIndexChartWrapper>\n                    <div className=\"total\">\n                        <div className=\"total_block total_block--cured\">\n                            <span className=\"spacer h1\">{averages[index].cured}</span>\n                            <CountUp className=\"counter h1\" end={averages[index].cured} duration={2} decimals={2} />\n                            <span><span className=\"hidden\">New</span> Patients</span>\n                        </div>\n                        {\n                            variant === 'both' && (\n                                <div className=\"total_block total_block--sick\">\n                                    <span className=\"spacer h1\">{averages[index].sick}</span>\n                                    <CountUp className=\"counter h1\" end={averages[index].sick} duration={2} decimals={2} />\n                                    <span><span className=\"hidden\">New</span> Certificates</span>\n                                </div>\n                            )\n                        }\n                    </div>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                        <ScatterChart margin={false} data={data}>\n                            {\n                                variant === 'both' &&\n                                <Scatter dataKey=\"sick\" shape={CustomScatterShape}>\n                                    {data.map((entry, i) => {\n                                        return (\n                                            <Cell key={`cell-${i}`}\n                                                  fill={colors.peach}\n                                                  dom={entry.sick > entry.cured ? 'sick' : 'cured'}\n                                                  dataKey=\"sick\"/>\n                                        )\n                                    })}\n                                </Scatter>\n                            }\n                            <Scatter dataKey=\"cured\" shape={CustomScatterShape}>\n                                {data.map((entry, i) => {\n                                    return (\n                                        <Cell key={`cell-${i}`}\n                                              fill={colors.azure}\n                                              dom={entry.cured > entry.sick ? 'cured' : 'sick'}\n                                              dataKey=\"cured\"/>\n                                    )\n                                })}\n                            </Scatter>\n                            <Tooltip cursor={false} content={<ChartTooltip right/>}/>\n                        </ScatterChart>\n                    </ResponsiveContainer>\n                    <Legend overlay={true}>\n                        <LegendItem color=\"azure\" legend=\"New Patients\"/>\n                        {variant === 'both' && <LegendItem color=\"peach\" legend=\"New Certificates\"/>}\n                    </Legend>\n                </HealthIndexChartWrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nHealthIndexChart.propTypes = {\n    variant: PropTypes.oneOf(['health', 'both']).isRequired\n}\n\nexport default HealthIndexChart;"],"names":["_ref","color","legend","_jsxs","ListItem","children","_jsx","LegendBadge","overlay","List","styled","ul","withConfig","componentId","props","li","fonts","accent","textSizes","variant","id","data","elems","_objectWithoutProperties","_excluded","width","useWindowSize","theme","useTheme","_useState","useState","_useState2","_slicedToArray","points","setPoints","isTablet","useLayoutEffect","gutter","arguments","length","undefined","gridWidth","document","getElementById","offsetWidth","i","push","generateGridPoints","renderTooltip","active","payload","StyledTooltip","className","map","item","index","style","background","stroke","value","ResponsiveContainer","height","LineChart","_objectSpread","margin","x1","y1","x2","y2","gradientUnits","stopColor","colors","dark","stopOpacity","offset","light_gray","CartesianGrid","concat","strokeDasharray","strokeLinecap","horizontal","verticalPoints","el","Line","dataKey","Tooltip","cursor","content","AreaChart","top","Area","Labels","div","flex","between","year","name","cured","sick","month","week","common","type","strokeWidth","fillOpacity","chartElems","peach","fill","activeDot","r","purple","Widget","WidgetHeader","title","Legend","LegendItem","WidgetBody","padding","overflow","justifyContent","CartesianChart","Page","EventsCompactCalendar","EpiContextAreaChart","RadarAreaChart","HealthIndexChart","DiagnosesDonut","numFormatter","num","toFixed","addZero","Btn","button","error","center","darken","handler","onClick","date","selectedDate","setSelectedDate","_useState3","_useState4","popupVisible","setPopupVisible","popupRef","useRef","events","moment","add","hasEvents","filter","event","isSame","config","as","Calendar","locale","navigationLabel","format","navigationAriaLabel","prevLabel","nextLabel","prev2Label","next2Label","nextAriaLabel","prevAriaLabel","tileContent","_ref2","tileClassName","_ref3","onClickDay","Container","Typography","m","sx","fontSize","fontWeight","EventsCalendar","Backdrop","Grow","in","timeout","transformOrigin","Popup","ref","Timestamp","time","nanoid","CloseBtn","col","light","bodyBg","breakpoints","mobileL","blue","highlight","HealthIndexChartWrapper","azure","tablet","laptop","y2020","y2021","y2022","periods","usePeriodNav","_useArrayNav","useArrayNav","navigate","averages","getCurrentData","CustomScatterShape","cx","cy","isDominant","dom","viewBox","x","y","xmlns","opacity","d","fillRule","clipRule","widgetBg","WidgetNav","CountUp","end","duration","decimals","ScatterChart","Scatter","shape","entry","Cell","ChartTooltip","right"],"sourceRoot":""}