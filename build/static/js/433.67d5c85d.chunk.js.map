{"version":3,"file":"static/js/433.67d5c85d.chunk.js","mappings":"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","sources":["components/AppointmentsCalendar/TimeSlot/index.jsx","components/AppointmentsCalendar/DailyToolbar/index.jsx","components/AppointmentsCalendar/WeeklyNavigation/index.jsx","components/AppointmentsCalendar/WeekSelector/index.jsx","components/AppointmentsCalendar/MonthlyNavigation/index.jsx","components/AppointmentsCalendar/MonthSelector/index.jsx","assets/dashed.svg","assets/dashed_dark.svg","components/AppointmentsCalendar/DoctorPopup/style.js","components/AppointmentsCalendar/DoctorPopup/index.jsx","db/calendar_appointments.js","components/AppointmentsCalendar/index.jsx","constants/options.js","utils/numbers.js"],"sourcesContent":["// utils\nimport {cloneElement} from 'react';\nimport moment from 'moment';\nimport {addZero} from '@utils/numbers';\n\nconst TimeSlot = (props, step, day, isRender) => {\n    const differenceMs = moment() - moment(props.value)\n    const isCurrentTimeSlot = (differenceMs / (60 * 1000)) > 0 && (differenceMs / (60 * 1000)) < step;\n    let hours = new Date().getHours(),\n        minutes = new Date().getMinutes();\n    const currentTime = hours + ':' + addZero(minutes);\n\n    let timeIndicator = {}\n    let addStyle = {}\n\n    function calculateIndicatorPosition() {\n        let minutesFromProps = props.value.getMinutes(),\n            indicatorPosition;\n        switch (minutesFromProps) {\n            default:\n            case 0:\n                indicatorPosition = minutesFromProps + minutes;\n                break;\n            case 30:\n                indicatorPosition = Math.abs(minutesFromProps - minutes);\n                break;\n        }\n        return indicatorPosition;\n    }\n\n    if (isCurrentTimeSlot && isRender) {\n        timeIndicator.className = 'current-time'\n        timeIndicator.children =\n            <span className=\"time-indicator\" style={{top: `${100 / step * calculateIndicatorPosition()}%`}}>\n                <span className=\"label\">{currentTime}</span>\n            </span>\n    }\n\n    return cloneElement(\n        props.children,\n        {\n            style: {...addStyle},\n            'data-time': moment(props.value).format('HH:mm'),\n            ...timeIndicator\n        })\n}\n\nexport default TimeSlot;","const DailyToolbar = ({label}) => {\n    return (\n        <>\n            <h2>{label}</h2>\n        </>\n    )\n}\n\nexport default DailyToolbar;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst WeeklyNavigation = ({date, setter}) => {\n    const calendarWeek = moment(date).week();\n    const currentWeek = moment().week();\n\n    const handleWeekNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'week').startOf('week').toDate());\n        } else {\n            setter(moment(date).add(1, 'week').startOf('week').toDate());\n        }\n    }\n\n    const firstWeek = moment(date).startOf('year').week(),\n        lastWeek = moment(date).endOf('year').week();\n\n    let label;\n    if (currentWeek === calendarWeek) label = 'This week';\n    else if (currentWeek + 1 === calendarWeek) label = 'Next week';\n    else if (currentWeek - 1 === calendarWeek) label = 'Last week';\n    else label = 'Week ' + calendarWeek;\n\n    return (\n        <Navigator handler={handleWeekNavigation}\n                   text={label}\n                   prevDisabled={calendarWeek === firstWeek}\n                   nextDisabled={calendarWeek === lastWeek}/>\n    )\n}\n\nexport default WeeklyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getWeekArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst WeekSelector = ({date, setter}) =>{\n    const options = getWeekArray().map((item, i) => {\n        return {\n            value: i,\n            label: `${item.startLong} - ${item.endLong}`,\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).week() - 1]);\n\n    const handleWeekChange = e => {\n        setSelected(e);\n        setter(moment(date).week(e.value + 1).startOf('week').toDate());\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleWeekChange}/>\n}\n\nexport default WeekSelector;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst MonthlyNavigation = ({date, setter}) => {\n    const calendarMonth = moment(date).month();\n    const currentMonth = moment().month();\n\n    const handleMonthNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'month').toDate());\n        } else {\n            setter(moment(date).add(1, 'month').toDate());\n        }\n    }\n\n    let label;\n    if (currentMonth === calendarMonth) label = 'This month';\n    else if (currentMonth + 1 === calendarMonth) label = 'Next month';\n    else if (currentMonth - 1 === calendarMonth) label = 'Last month';\n    else label = `${moment(date).format('MMMM')}`;\n\n    return (\n        <Navigator handler={handleMonthNavigation}\n                   text={label}\n                   prevDisabled={calendarMonth === 0}\n                   nextDisabled={calendarMonth === 11}/>\n    )\n}\n\nexport default MonthlyNavigation;","// components\nimport CustomSelect from '@ui/Select';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {getMonthArray} from '@utils/dates';\nimport moment from 'moment/moment';\n\nconst MonthSelector = ({date, setter}) => {\n    const options = getMonthArray().map(item => {\n        return {\n            value: item.month,\n            label: item.formatted\n        }\n    });\n\n    const [selected, setSelected] = useState(options[moment(date).month()]);\n\n    const handleMonthChange = e => {\n        setSelected(e);\n        const month =  moment(e.value).month();\n        setter(moment(date).set({month: month, date: 1}));\n    }\n\n    return <CustomSelect variant=\"basic\" options={options} value={selected} changeHandler={handleMonthChange}/>\n}\n\nexport default MonthSelector;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDashed(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 140,\n    viewBox: \"0 0 2 140\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 0.384615V139.462\",\n    stroke: \"#A2C0D4\",\n    strokeLinecap: \"round\",\n    strokeDasharray: \"3 5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDashed);\nexport default __webpack_public_path__ + \"static/media/dashed.e8807695deb0ac9b5486cdad4debfd42.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDashedDark(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 140,\n    viewBox: \"0 0 2 140\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 0.384615V139.462\",\n    stroke: \"#636D73\",\n    strokeLinecap: \"round\",\n    strokeDasharray: \"3 5\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDashedDark);\nexport default __webpack_public_path__ + \"static/media/dashed_dark.5b0662d7b0c867bc981bdd45e49eba46.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components/macro';\nimport {flex, breakpoints, light, colors, textSizes, fonts} from '@styles/vars'\nimport theme from 'styled-theming';\nimport dashed from '@assets/dashed.svg'\nimport dashed_dark from '@assets/dashed_dark.svg'\n\nconst bg = theme('theme', {\n    light: '#fff',\n    dark: '#2a2f32'\n});\n\nexport const Container = styled.div`\n  position: absolute;\n  background: ${bg};\n  box-shadow: 0 1px 16px rgba(20, 46, 110, 0.4);\n  border-radius: 8px;\n  padding: 20px;\n  top: calc(50% + ${props => props.top}px - 40px);\n  left: 50%;\n  transform: translate(-50%, calc(-50% - ${props => props.top / 2}px));\n  width: 260px;\n  transition: opacity var(--transition);\n  opacity: 0;\n  visibility: hidden;\n  margin-left: 32px;\n  \n  ${breakpoints.tablet} {\n    margin-left: 42px;\n    top: calc(50% + ${props => props.top}px - 60px);\n  }\n\n  &.visible {\n    opacity: 1;\n    visibility: visible;\n  }\n\n  .header {\n    display: flex;\n    ${flex.between};\n    gap: 20px;\n\n    .user .user-option {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      span {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        max-width: 100px;\n      }\n    }\n  }\n\n  .main {\n    height: 80px;\n    background: ${theme('theme', {\n        light: `url(${dashed})`,\n        dark: `url(${dashed_dark})`\n    })};\n    position: relative;\n    padding-top: 25px;\n    ${flex.col};\n    gap: 6px;\n\n    &:before, &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      width: 100%;\n      height: 20px;\n      background: ${theme('theme', {\n          light: 'linear-gradient(180deg, rgba(255, 255, 255, 0.5) 0%, #fff 100%)',\n            dark: 'linear-gradient(180deg, rgba(42, 47, 50, 0.5) 0%, #2a2f32 100%)'\n      })};\n    }\n\n    &:before {\n      top: 0;\n      transform: rotate(180deg);\n    }\n\n    &:after {\n      bottom: 0;\n    }\n\n    .track {\n      height: 8px;\n      position: relative;\n      border-radius: 4px;\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: light.text\n      })};\n\n      span {\n        position: absolute;\n        height: 8px;\n        border-radius: 4px;\n        background-color: ${colors.blue};\n        top: 0;\n\n        &:first-of-type {\n          width: 20%;\n          left: 0;\n        }\n\n        &:last-of-type {\n          width: 15%;\n          right: 10%;\n        }\n      }\n    }\n\n    .hours {\n      display: flex;\n      ${flex.between};\n      margin: 0 -10px;\n\n      span {\n        width: 16px;\n        height: 20px;\n        border-radius: 8px;\n        background: ${bg};\n        font-size: ${textSizes['10']};\n        font-family: ${fonts.accent};\n        display: flex;\n        ${flex.center};\n      }\n    }\n  }\n\n  ${breakpoints.tablet} {\n    width: 374px;\n\n    .header {\n      .user .user-option span {\n        max-width: 200px;\n      }\n    }\n  }\n`;","// styled components\nimport { Container } from './style';\n\n// components\nimport ShapeButton from '@ui/ShapeButton';\nimport Btn from '@ui/Btn';\nimport ModalWindow from '@components/ModalWindow';\nimport { Autocomplete, InputLabel, Select, TextField, Typography, Button, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Stack } from '@mui/material';\nimport { Form } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport Url from '../../../url/Allurl'\nimport useContentHeight from '@hooks/useContentHeight';\nimport { GetTypeAppointment } from '@components/Api/AllApi';\n\n\nconst DoctorPopup = ({ name, open, handler, elemsHeight }) => {\n    const [type, setType] = useState(''); // Initialize with appropriate values\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [note, setNote] = useState('');\n    const [appointmentColor, setAppointmentColor] = useState('');\n    const [pro, setPro] = useState({ name: 'Pending' });\n    const todos = useSelector(state => state['todos'].todos);\n    const [isFormVisible, setFormVisible] = useState(false);\n    const [optionsData, setOptions] = useState([]);\n    const [count, setCount] = useState(0)\n    const [ttt, setTTT] = useState(false)\n    const [GetLoc, setGetLoc] = useState(false)\n    const [GetEmpl, setGetEmp] = useState(false)\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const listRef = useRef(null);\n    const height = useContentHeight(headerRef, footerRef);\n    const dataFromLocalStorage = localStorage.getItem(\"provider\");\n\n    // Parse the JSON data back to an object\n    const parsedData = JSON.parse(dataFromLocalStorage);\n\n    // Now, \"parsedData\" will contain the full object with all the properties that were originally present in the `data` object\n    console.log(parsedData, \"AL Data AAAAAAAAAAAAAAAAAAAAA\");\n\n    const ValueID = parsedData.id;\n    const ClinicID = parsedData.company_id;\n\n\n    const [task, setTask] = useState('');\n    const [category, setCategory] = useState(null);\n    const dispatch = useDispatch();\n    const timestamp = Date.now();\n\n    const handleTaskChange = (e) => {\n        setTask(e.target.value);\n    }\n\n    const handleCategoryChange = e => {\n        setCategory(e);\n    }\n\n    const resetForm = () => {\n        setTask('');\n        setCategory(null);\n    }\n\n\n    const handleSubmit = (event) => {\n        let token = Cookies.get(\"clinic\");\n        console.log(token, \"This Is token for all Api's\");\n        event.preventDefault();\n        var myHeaders = new Headers();\n        myHeaders.append(\"Accept\", \"application/json\");\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\n\n        var formdata = new FormData();\n        formdata.append(\"id\", \"70\");\n        formdata.append(\"type_id\", type);\n        formdata.append(\"start_date\", startDate);\n        formdata.append(\"end_date\", startDate);\n        formdata.append(\"note\", note);\n        formdata.append(\"appointment_color\", appointmentColor);\n        formdata.append(\"status\", pro.name);\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        };\n\n        return fetch(`${Url}/api/update_appointment_inprovider`, requestOptions)\n            .then((res) => res.json())\n            .then((json) => {\n                console.log(json, \"anjkhgdchjm\");\n                alert(json.messege)\n                window.reload()\n\n            })\n            .catch((e) =>\n                console.log(e)\n            );\n\n    };\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n        GetAllTypeAppointmentData();\n    }, [count]);\n\n\n\n    const GetAllTypeAppointmentData = () => {\n        let TyoeData = GetTypeAppointment()\n        if (TyoeData) {\n            TyoeData.then((data) => {\n                console.log(data.result)\n                setTTT(data.result)\n            })\n        }\n    }\n\n\n\n\n\n    const [selectedDate, setSelectedDate] = useState(null);\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const openModal = (id) => {\n        setIsModalOpen(true);\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n    };\n\n\n\n    return (\n        <ModalWindow isVisible={open} visibilityHandler={handler}>\n            <Container className={open ? 'visible' : ''} top={elemsHeight}>\n                {/* <Form onSubmit={(event) => handleSubmit(event)} >\n\n                    <Typography>Patient Nagar</Typography>\n                    <InputLabel sx={{ margin: 1 }}>Select Status</InputLabel>\n                    <select style={{ width: '100%', padding: 10 }} onChange={(e) => {\n                        setpro({\n                            ...pro, name: e.target.value\n                        })\n                    }}\n                        labelId=\"dropdown-label\"\n                        fullWidth\n                        size='small'\n                        required\n                    >\n\n                        <option value=\"Pending\">Pending</option>\n                        <option value=\"Seen\">Seen</option>\n                        <option value=\"Cancel\">Cancel</option>\n                        <option value=\"Not-Show\">Not-Show</option>\n\n\n                    </select>\n\n\n\n                    <InputLabel sx={{ margin: 1 }}>Type</InputLabel>\n                    <select style={{ width: '100%', padding: 10 }}\n                        labelId=\"dropdown-label\"\n                        fullWidth\n                        size='small'\n                        value={type}\n                        required\n                    >\n                        {\n                            ttt && ttt?.map((data) => {\n                                return (\n\n                                    <option value={data.id}>{data.name}{data.length}</option>\n                                )\n                            })\n                        }\n\n                    </select>\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment Date/Time</InputLabel>\n                    <TextField\n                        // onChange={handleDateChange}\n                        value={startDate}\n                        required\n\n                        type=\"date-local\"\n\n                        placeholder=\"Select Start Date\"\n                        fullWidth size=\"small\"\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment End Date/Time</InputLabel>\n                    <TextField\n                        required\n                        value={endDate}\n\n                        type=\"date-local\"\n\n                        placeholder=\"Select End Date\"\n                        fullWidth size=\"small\"\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Notes</InputLabel>\n                    <TextField size=\"small\" value={note} fullWidth required />\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment Color</InputLabel>\n                    <TextField\n                        size=\"small\"\n                        value={appointmentColor}\n                        fullWidth\n                        required\n\n                        type=\"color\"\n\n                        placeholder=\"#RRGGBB\"\n                    />\n                </Form> */}\n                <Form onSubmit={handleSubmit}>\n                    <Typography>Patient Nagar</Typography>\n                    <InputLabel sx={{ margin: 1 }}>Select Status</InputLabel>\n                    <select\n                        style={{ width: '100%', padding: 10 }}\n                        onChange={(e) => {\n                            setPro({\n                                ...pro,\n                                name: e.target.value\n                            });\n                        }}\n                        labelId=\"dropdown-label\"\n                        fullWidth\n                        size='small'\n                        required\n                    >\n                        <option value=\"pending\">pending</option>\n                        <option value=\"seen\">seen</option>\n                        <option value=\"cancel\">cancel</option>\n                        <option value=\"not-show\">not-show</option>\n                    </select>\n\n                    <InputLabel sx={{ margin: 1 }}>Type</InputLabel>\n                    <select\n                        style={{ width: '100%', padding: 10 }}\n                        labelId=\"dropdown-label\"\n                        fullWidth\n                        size='small'\n                        value={type}\n                        onChange={(e) => setType(e.target.value)}\n                        required\n                    >\n                        {\n                            ttt && ttt?.map((data) => {\n                                return (\n\n                                    <option value={data.id}>{data.name}{data.length}</option>\n                                )\n                            })\n                        }\n                    </select>\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment Date/Time</InputLabel>\n                    <TextField\n                        value={startDate}\n                        onChange={(e) => setStartDate(e.target.value)}\n                        required\n                        type=\"datetime-local\"\n                        placeholder=\"Select Start Date\"\n                        fullWidth\n                        size=\"small\"\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment End Date/Time</InputLabel>\n                    <TextField\n                        value={endDate}\n                        onChange={(e) => setEndDate(e.target.value)}\n                        required\n                        type=\"datetime-local\"\n                        placeholder=\"Select End Date\"\n                        fullWidth\n                        size=\"small\"\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Notes</InputLabel>\n                    <TextField\n                        size=\"small\"\n                        value={note}\n                        onChange={(e) => setNote(e.target.value)}\n                        fullWidth\n                        required\n                    />\n\n                    <InputLabel sx={{ margin: 1 }}>Appointment Color</InputLabel>\n                    <TextField\n                        size=\"small\"\n                        value={appointmentColor}\n                        onChange={(e) => setAppointmentColor(e.target.value)}\n                        fullWidth\n                        required\n                        type=\"color\"\n                        placeholder=\"#RRGGBB\"\n                    />\n\n                    <Stack direction='row' sx={{ justifyContent: 'space-between', gap: 5, marginTop: '20px' }} gap={4} mt={2}>\n                        <button\n                            style={{ backgroundColor: 'red', padding: 10, color: 'white', borderRadius: 3 }}\n                            onClick={() => window.location.reload()}\n                        >\n                            Cancel\n                        </button>\n\n                        <button style={{ marginLeft: '20px', backgroundColor: 'green', padding: 10, color: 'white', borderRadius: 3 }} type='submit'>Save Change</button>\n                    </Stack>\n                </Form>\n\n\n            </Container>\n        </ModalWindow>\n    )\n}\n\nexport default DoctorPopup;","import moment from 'moment';\n\nexport const disabled = [\n    {\n        start: moment().set({ hour: 12, minute: 30, second: 0 }).toDate(),\n        end: moment().set({ hour: 13, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(1, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n        end: moment().add(1, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(1, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n        end: moment().add(1, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(2, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n        end: moment().add(2, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(2, 'day').set({ hour: 12, minute: 30, second: 0 }).toDate(),\n        end: moment().add(2, 'day').set({ hour: 13, minute: 0, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n    {\n        start: moment().add(4, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n        end: moment().add(4, 'day').set({ hour: 15, minute: 30, second: 0 }).toDate(),\n        type: 'disabled'\n    },\n];\n\nexport const events = {\n    doctor: [\n        {\n            name: 'MRI',\n            start: moment().set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Runny nose',\n            start: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Keeping pregnant',\n            start: moment().set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Ultrasound diagnostics',\n            start: moment().set({ hour: 13, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 14, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'EEG',\n            start: moment().set({ hour: 15, minute: 0, second: 0 }).toDate(),\n            end: moment().set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Routine checkup',\n            start: moment().set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            end: moment().set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'checkup'\n        },\n        {\n            name: 'Blood test',\n            start: moment().add(1, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Family appointment',\n            start: moment().add(1, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Heartache',\n            start: moment().add(1, 'day').set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 12, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n        {\n            name: 'First visit',\n            start: moment().add(1, 'day').set({ hour: 13, minute: 0, second: 0 }).toDate(),\n            end: moment().add(1, 'day').set({ hour: 13, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Gastritis',\n            start: moment().add(2, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Cardio checkup',\n            start: moment().add(2, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 12, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'checkup'\n        },\n        {\n            name: 'Stomachache',\n            start: moment().add(2, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 15, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n        {\n            name: 'MRI',\n            start: moment().add(2, 'day').set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            end: moment().add(2, 'day').set({ hour: 16, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'MRI',\n            start: moment().add(4, 'day').set({ hour: 9, minute: 30, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'test'\n        },\n        {\n            name: 'Family appointment',\n            start: moment().add(4, 'day').set({ hour: 10, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 10, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Keeping pregnant',\n            start: moment().add(4, 'day').set({ hour: 11, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 11, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'consultation'\n        },\n        {\n            name: 'Runny nose',\n            start: moment().add(4, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 14, minute: 30, second: 0 }).toDate(),\n            allDay: false,\n            type: 'sick'\n        },\n        {\n            name: 'Heartache',\n            start: moment().add(4, 'day').set({ hour: 15, minute: 30, second: 0 }).toDate(),\n            end: moment().add(4, 'day').set({ hour: 16, minute: 0, second: 0 }).toDate(),\n            allDay: false,\n            type: 'emergency'\n        },\n    ],\n    patient: {\n        general: [\n            {\n                name: 'Bone Density Scan',\n                start: moment().set({ hour: 10, minute: 0, second: 0 }).toDate(),\n                end: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n                allDay: false,\n                type: 'test'\n            },\n            {\n                name: 'Surgeon consultation',\n                start: moment().set({ hour: 10, minute: 30, second: 0 }).toDate(),\n                end: moment().set({ hour: 11, minute: 0, second: 0 }).toDate(),\n                allDay: false,\n                type: 'consultation'\n            },\n            {\n                name: 'Calcium Blood Test',\n                start: moment().add(1, 'day').set({ hour: 13, minute: 30, second: 0 }).toDate(),\n                end: moment().add(1, 'day').set({ hour: 14, minute: 0, second: 0 }).toDate(),\n                allDay: false,\n                type: 'test'\n            },\n        ],\n        disabled: disabled\n    }\n}","// styles\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\n// styled components\nimport { Container, Header, StyledCalendar, Footer } from './style';\nimport { Container as Tabs, Item, Button } from '@ui/TabNav/style';\n\n// components\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport Event from '@components/AppointmentsCalendar/Event';\nimport TimeSlot from '@components/AppointmentsCalendar/TimeSlot';\nimport DailyToolbar from '@components/AppointmentsCalendar/DailyToolbar';\nimport DailyNavigation from '@components/AppointmentsCalendar/DailyNavigation';\nimport WeeklyNavigation from '@components/AppointmentsCalendar/WeeklyNavigation';\nimport WeekSelector from '@components/AppointmentsCalendar/WeekSelector';\nimport MonthlyNavigation from '@components/AppointmentsCalendar/MonthlyNavigation';\nimport MonthSelector from '@components/AppointmentsCalendar/MonthSelector';\nimport Legend from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport DoctorPopup from '@components/AppointmentsCalendar/DoctorPopup';\n\n// utils\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { colorTypes } from '@constants/colors';\nimport { doctorsOptions } from '@constants/options';\n\n// hooks\nimport { useState, useRef, useEffect } from 'react';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// data placeholder\nimport { events, disabled } from '@db/calendar_appointments';\nimport CustomSelect from '@ui/Select';\nimport { GetAppointmtentREwie } from '@components/Api/AllApi';\n\nconst AppointmentsCalendar = ({ viewChangeHandler, current, type }) => {\n    const width = useWindowSize().width;\n    const localizer = momentLocalizer(moment);\n\n    const footerRef = useRef(null);\n    const headerRef = useRef(null);\n    const [height, setHeight] = useState(0);\n\n    useEffect(() => {\n        setHeight(headerRef.current.offsetHeight + footerRef.current.offsetHeight);\n    }, [headerRef, footerRef]);\n\n    const options = doctorsOptions();\n    const [selectedDoctor, setSelectedDoctor] = useState(options[0]);\n\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    const [post, setPost] = useState(false)\n\n    useEffect(() => {\n\n        const AppShed = GetAppointmtentREwie();\n        if (AppShed) {\n            AppShed.then((data) => {\n                console.log(data, \"App ShedulerA\")\n                setPost(data?.result, \"App ShedulerA\")\n            })\n        }\n\n\n    }, [])\n\n\n    const getDayFormat = () => {\n        switch (true) {\n            case width < 768:\n                return 'D';\n            case width < 1600:\n                return 'ddd, D';\n            default:\n                return 'dddd D MMMM';\n        }\n    }\n\n    const [currentDate, setCurrentDate] = useState(moment().toDate());\n    const views = ['month', 'week', 'day'];\n    const Navigation = () => {\n        return (\n            <Tabs className=\"tabs\">\n                {\n                    views.map(view => {\n                        return (\n                            <Item key={view}>\n                                <Button className={current === view ? 'active' : null}\n                                    onClick={() => viewChangeHandler(view)}>\n                                    {view}\n                                </Button>\n                            </Item>\n                        )\n                    })\n                }\n            </Tabs>\n        )\n    }\n\n    const handleNavigation = (action, date) => {\n        switch (action) {\n            case 'NEXT':\n                setCurrentDate(moment(currentDate).add(1, 'day').toDate());\n                break;\n            case 'PREV':\n                setCurrentDate(moment(currentDate).subtract(1, 'day').toDate());\n                break;\n            default:\n                setCurrentDate(date);\n        }\n    }\n\n    const handleDayClick = (date) => {\n        setCurrentDate(date);\n        viewChangeHandler('day');\n    }\n\n    const config = {\n        as: Calendar,\n        localizer: localizer,\n        startAccessor: 'start',\n        endAccessor: 'end',\n        views: views,\n        view: current,\n        date: currentDate,\n        onView: viewChangeHandler,\n        onNavigate: handleNavigation,\n        onDrillDown: (date) => handleDayClick(date),\n        events: type === 'doctor' ? events['doctor'] : current === 'day' ? events['patient'].general : events['patient'].disabled,\n        backgroundEvents: type === 'doctor' ? disabled : [],\n        min: moment().startOf('year').set({ hour: 9, minute: 30 }).toDate(),\n        max: moment().endOf('year').set({ hour: 16, minute: 30 }).toDate(),\n        timeslots: 1,\n        step: 30,\n        formats: {\n            dayHeaderFormat: width < 414 ? 'dddd, MMM DD' : 'dddd, MMMM DD',\n            dayFormat: getDayFormat(),\n            timeGutterFormat: 'HH:mm',\n        },\n        components: {\n            toolbar: ({ label, date }) =>\n                <Header ref={headerRef} view={current}>\n                    {current === 'day' &&\n                        <DailyToolbar label={type === 'doctor' ? label : 'Daily appointments scheduler'} />}\n                    <Navigation />\n                    {current === 'day' && <DailyNavigation onNavigate={handleNavigation} date={date} label={label} />}\n                    {current === 'week' && (\n                        <>\n\n                            <WeekSelector date={date} setter={setCurrentDate} />\n                            {/* <DocSelect /> */}\n                            <WeeklyNavigation date={date} setter={setCurrentDate} />\n                        </>\n                    )}\n                    {current === 'month' && (\n                        <>\n                            <MonthSelector date={date} setter={setCurrentDate} />\n                            <MonthlyNavigation date={date} setter={setCurrentDate} />\n                        </>\n                    )}\n                </Header>,\n            event: ({ event }) => <Event event={event} variant={current} />,\n            timeSlotWrapper: (props) => TimeSlot(props, 30, 1, true),\n        },\n        className: `calendar-${current} calendar-${type}`,\n        messages: {\n            showMore: (total) => `+ ${total}`,\n        },\n        popup: true,\n        selectable: type === 'patient' && current !== 'day',\n        onSelectSlot: type === 'patient' && current !== 'day' && (() => setPopupOpen(true))\n    }\n\n    return (\n        <>\n            <Container>\n                <StyledCalendar {...config} />\n                {\n                    type === 'patient' && current !== 'day' &&\n                    <DoctorPopup elemsHeight={height} name={selectedDoctor.label || null} open={popupOpen}\n                        handler={setPopupOpen} />\n                }\n            </Container>\n            <Footer ref={footerRef}>\n                <Legend>\n                    {\n                        colorTypes.map(({ cat, color, label }) => {\n                            return (\n                                <LegendItem key={cat} color={color} legend={label} />\n                            )\n                        })\n                    }\n                </Legend>\n            </Footer>\n        </>\n    )\n}\n\nAppointmentsCalendar.propTypes = {\n    type: PropTypes.oneOf(['doctor', 'patient']).isRequired,\n}\n\nexport default AppointmentsCalendar;","import {doctors} from '@db/doctors';\nimport Avatar from '@ui/Avatar';\n\nexport const tasksOptions = [\n    {value: 'work', label: 'Work'},\n    {value: 'travel', label: 'Travel'},\n    {value: 'family', label: 'Family'},\n    {value: 'other', label: 'Other'}\n]\n\nexport const depsOptions = [\n    {value: 'all', label: 'All Departments'},\n    {value: 'family', label: 'Family Doctors'},\n    {value: 'therapy', label: 'Therapists'},\n    {value: 'dent', label: 'Dentists'},\n    {value: 'cardio', label: 'Cardiologists'},\n]\n\nexport const testsOptions = [\n    {value: 'all', label: 'All My Tests'},\n    {value: 'blood', label: 'Blood Count'},\n    {value: 'xray', label: 'X-Ray'},\n    {value: 'ecg', label: 'ECG'},\n    {value: 'ct', label: 'CT Scan'},\n    {value: 'mri', label: 'MRI'},\n    {value: 'ultrasound', label: 'Ultrasound'},\n    {value: 'prenatal', label: 'Prenatal Testing'},\n]\n\nexport const doctorsOptions = () => {\n    let options = [];\n    doctors.forEach(doctor => {\n        options.push({\n            value: doctor.id,\n            label: <div className=\"user-option\">\n                <Avatar avatar={doctor.avatar} alt={doctor.name} size={40} />\n                <span>{doctor.name}</span>\n            </div>\n        });\n    });\n    return options;\n}","export function numFormatter(num) {\n    if (num > 999 && num < 1000000) {\n        return (num / 1000).toFixed(1) + 'k';\n    } else if (num > 1000000) {\n        return (num / 1000000).toFixed(1) + 'm';\n    } else if (num < 900) {\n        return num;\n    }\n}\n\nexport function addZero(num) {\n    return num < 10 ? '0' + num : num;\n}"],"names":["props","step","day","isRender","differenceMs","moment","value","isCurrentTimeSlot","hours","Date","getHours","minutes","getMinutes","currentTime","addZero","timeIndicator","className","children","_jsx","style","top","concat","indicatorPosition","minutesFromProps","Math","abs","calculateIndicatorPosition","cloneElement","_objectSpread","format","_ref","label","_Fragment","date","setter","calendarWeek","week","currentWeek","firstWeek","startOf","lastWeek","endOf","Navigator","handler","e","currentTarget","dataset","direction","subtract","toDate","add","text","prevDisabled","nextDisabled","options","getWeekArray","map","item","i","startLong","endLong","_useState","useState","_useState2","_slicedToArray","selected","setSelected","CustomSelect","variant","changeHandler","calendarMonth","month","currentMonth","getMonthArray","formatted","set","bg","theme","light","dark","Container","styled","div","withConfig","componentId","breakpoints","tablet","flex","between","dashed","dashed_dark","col","bodyBg","colors","blue","textSizes","fonts","accent","center","name","open","elemsHeight","type","setType","_useState3","_useState4","startDate","setStartDate","_useState5","_useState6","endDate","setEndDate","_useState7","_useState8","note","setNote","_useState9","_useState10","appointmentColor","setAppointmentColor","_useState11","_useState12","pro","setPro","_useState13","useSelector","state","todos","_useState14","_useState15","_useState16","_useState17","_useState18","count","_useState19","_useState20","ttt","setTTT","_useState21","_useState22","_useState23","_useState24","headerRef","useRef","footerRef","dataFromLocalStorage","useContentHeight","localStorage","getItem","parsedData","JSON","parse","console","log","id","company_id","_useState25","_useState26","_useState27","_useState28","useDispatch","now","useEffect","GetAllTypeAppointmentData","TyoeData","GetTypeAppointment","then","data","result","_useState29","_useState30","_useState31","_useState32","ModalWindow","isVisible","visibilityHandler","_jsxs","Form","onSubmit","event","token","Cookies","get","preventDefault","myHeaders","Headers","append","formdata","FormData","requestOptions","method","headers","body","redirect","fetch","Url","res","json","alert","messege","window","reload","catch","Typography","InputLabel","sx","margin","width","padding","onChange","target","labelId","fullWidth","size","required","length","TextField","placeholder","Stack","justifyContent","gap","marginTop","mt","backgroundColor","color","borderRadius","onClick","location","marginLeft","disabled","start","hour","minute","second","end","events","doctor","allDay","patient","general","viewChangeHandler","current","useWindowSize","localizer","momentLocalizer","height","setHeight","offsetHeight","doctorsOptions","selectedDoctor","popupOpen","setPopupOpen","setPost","AppShed","GetAppointmtentREwie","currentDate","setCurrentDate","views","Navigation","Tabs","view","Item","Button","handleNavigation","action","config","as","Calendar","startAccessor","endAccessor","onView","onNavigate","onDrillDown","handleDayClick","backgroundEvents","min","max","timeslots","formats","dayHeaderFormat","dayFormat","getDayFormat","timeGutterFormat","components","toolbar","_ref2","Header","ref","DailyToolbar","DailyNavigation","WeekSelector","WeeklyNavigation","MonthSelector","MonthlyNavigation","_ref3","Event","timeSlotWrapper","TimeSlot","messages","showMore","total","popup","selectable","onSelectSlot","StyledCalendar","DoctorPopup","Footer","Legend","colorTypes","_ref4","cat","LegendItem","legend","tasksOptions","depsOptions","testsOptions","doctors","forEach","push","Avatar","avatar","alt","numFormatter","num","toFixed"],"sourceRoot":""}